// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nio.proto

#include "nio.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Accreq7f_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Acmbody4a_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Aebreq79_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Avpreq15e_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Bcusts5e_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Bodystatus24d_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Brkdrvstatus24c_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Driverstatus24e_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Epsreqc6_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Epsstatus01d5_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Epsstatus02d6_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Lightreq336_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Motorsts018e_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Motorsts0286_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pulsecnt65_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Scmsts7b_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vcusts01218_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vcusts0221c_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vehiclelights2c7_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Whlspdfront51_nio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Whlspdrear52_nio_2eproto;
namespace apollo {
namespace canbus {
class Avpreq15eDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Avpreq15e> _instance;
} _Avpreq15e_default_instance_;
class Vcusts01218DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vcusts01218> _instance;
} _Vcusts01218_default_instance_;
class Vcusts0221cDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vcusts0221c> _instance;
} _Vcusts0221c_default_instance_;
class Brkdrvstatus24cDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Brkdrvstatus24c> _instance;
} _Brkdrvstatus24c_default_instance_;
class Bodystatus24dDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Bodystatus24d> _instance;
} _Bodystatus24d_default_instance_;
class Driverstatus24eDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Driverstatus24e> _instance;
} _Driverstatus24e_default_instance_;
class Vehiclelights2c7DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vehiclelights2c7> _instance;
} _Vehiclelights2c7_default_instance_;
class Lightreq336DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Lightreq336> _instance;
} _Lightreq336_default_instance_;
class Acmbody4aDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Acmbody4a> _instance;
} _Acmbody4a_default_instance_;
class Whlspdfront51DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Whlspdfront51> _instance;
} _Whlspdfront51_default_instance_;
class Whlspdrear52DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Whlspdrear52> _instance;
} _Whlspdrear52_default_instance_;
class Bcusts5eDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Bcusts5e> _instance;
} _Bcusts5e_default_instance_;
class Pulsecnt65DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pulsecnt65> _instance;
} _Pulsecnt65_default_instance_;
class Aebreq79DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Aebreq79> _instance;
} _Aebreq79_default_instance_;
class Scmsts7bDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Scmsts7b> _instance;
} _Scmsts7b_default_instance_;
class Accreq7fDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Accreq7f> _instance;
} _Accreq7f_default_instance_;
class Motorsts0286DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Motorsts0286> _instance;
} _Motorsts0286_default_instance_;
class Motorsts018eDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Motorsts018e> _instance;
} _Motorsts018e_default_instance_;
class Epsreqc6DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Epsreqc6> _instance;
} _Epsreqc6_default_instance_;
class Epsstatus01d5DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Epsstatus01d5> _instance;
} _Epsstatus01d5_default_instance_;
class Epsstatus02d6DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Epsstatus02d6> _instance;
} _Epsstatus02d6_default_instance_;
class NioDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Nio> _instance;
} _Nio_default_instance_;
}  // namespace canbus
}  // namespace apollo
static void InitDefaultsscc_info_Accreq7f_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Accreq7f_default_instance_;
    new (ptr) ::apollo::canbus::Accreq7f();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Accreq7f_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Accreq7f_nio_2eproto}, {}};

static void InitDefaultsscc_info_Acmbody4a_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Acmbody4a_default_instance_;
    new (ptr) ::apollo::canbus::Acmbody4a();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Acmbody4a_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Acmbody4a_nio_2eproto}, {}};

static void InitDefaultsscc_info_Aebreq79_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Aebreq79_default_instance_;
    new (ptr) ::apollo::canbus::Aebreq79();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Aebreq79_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Aebreq79_nio_2eproto}, {}};

static void InitDefaultsscc_info_Avpreq15e_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Avpreq15e_default_instance_;
    new (ptr) ::apollo::canbus::Avpreq15e();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Avpreq15e_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Avpreq15e_nio_2eproto}, {}};

static void InitDefaultsscc_info_Bcusts5e_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Bcusts5e_default_instance_;
    new (ptr) ::apollo::canbus::Bcusts5e();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Bcusts5e_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Bcusts5e_nio_2eproto}, {}};

static void InitDefaultsscc_info_Bodystatus24d_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Bodystatus24d_default_instance_;
    new (ptr) ::apollo::canbus::Bodystatus24d();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Bodystatus24d_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Bodystatus24d_nio_2eproto}, {}};

static void InitDefaultsscc_info_Brkdrvstatus24c_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Brkdrvstatus24c_default_instance_;
    new (ptr) ::apollo::canbus::Brkdrvstatus24c();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Brkdrvstatus24c_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Brkdrvstatus24c_nio_2eproto}, {}};

static void InitDefaultsscc_info_Driverstatus24e_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Driverstatus24e_default_instance_;
    new (ptr) ::apollo::canbus::Driverstatus24e();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Driverstatus24e_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Driverstatus24e_nio_2eproto}, {}};

static void InitDefaultsscc_info_Epsreqc6_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Epsreqc6_default_instance_;
    new (ptr) ::apollo::canbus::Epsreqc6();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Epsreqc6_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Epsreqc6_nio_2eproto}, {}};

static void InitDefaultsscc_info_Epsstatus01d5_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Epsstatus01d5_default_instance_;
    new (ptr) ::apollo::canbus::Epsstatus01d5();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Epsstatus01d5_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Epsstatus01d5_nio_2eproto}, {}};

static void InitDefaultsscc_info_Epsstatus02d6_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Epsstatus02d6_default_instance_;
    new (ptr) ::apollo::canbus::Epsstatus02d6();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Epsstatus02d6_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Epsstatus02d6_nio_2eproto}, {}};

static void InitDefaultsscc_info_Lightreq336_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Lightreq336_default_instance_;
    new (ptr) ::apollo::canbus::Lightreq336();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Lightreq336_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Lightreq336_nio_2eproto}, {}};

static void InitDefaultsscc_info_Motorsts018e_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Motorsts018e_default_instance_;
    new (ptr) ::apollo::canbus::Motorsts018e();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Motorsts018e_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Motorsts018e_nio_2eproto}, {}};

static void InitDefaultsscc_info_Motorsts0286_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Motorsts0286_default_instance_;
    new (ptr) ::apollo::canbus::Motorsts0286();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Motorsts0286_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Motorsts0286_nio_2eproto}, {}};

static void InitDefaultsscc_info_Nio_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Nio_default_instance_;
    new (ptr) ::apollo::canbus::Nio();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<21> scc_info_Nio_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 21, 0, InitDefaultsscc_info_Nio_nio_2eproto}, {
      &scc_info_Avpreq15e_nio_2eproto.base,
      &scc_info_Vcusts01218_nio_2eproto.base,
      &scc_info_Vcusts0221c_nio_2eproto.base,
      &scc_info_Brkdrvstatus24c_nio_2eproto.base,
      &scc_info_Bodystatus24d_nio_2eproto.base,
      &scc_info_Driverstatus24e_nio_2eproto.base,
      &scc_info_Vehiclelights2c7_nio_2eproto.base,
      &scc_info_Lightreq336_nio_2eproto.base,
      &scc_info_Acmbody4a_nio_2eproto.base,
      &scc_info_Whlspdfront51_nio_2eproto.base,
      &scc_info_Whlspdrear52_nio_2eproto.base,
      &scc_info_Bcusts5e_nio_2eproto.base,
      &scc_info_Pulsecnt65_nio_2eproto.base,
      &scc_info_Aebreq79_nio_2eproto.base,
      &scc_info_Scmsts7b_nio_2eproto.base,
      &scc_info_Accreq7f_nio_2eproto.base,
      &scc_info_Motorsts0286_nio_2eproto.base,
      &scc_info_Motorsts018e_nio_2eproto.base,
      &scc_info_Epsreqc6_nio_2eproto.base,
      &scc_info_Epsstatus01d5_nio_2eproto.base,
      &scc_info_Epsstatus02d6_nio_2eproto.base,}};

static void InitDefaultsscc_info_Pulsecnt65_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Pulsecnt65_default_instance_;
    new (ptr) ::apollo::canbus::Pulsecnt65();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pulsecnt65_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pulsecnt65_nio_2eproto}, {}};

static void InitDefaultsscc_info_Scmsts7b_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Scmsts7b_default_instance_;
    new (ptr) ::apollo::canbus::Scmsts7b();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Scmsts7b_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Scmsts7b_nio_2eproto}, {}};

static void InitDefaultsscc_info_Vcusts01218_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vcusts01218_default_instance_;
    new (ptr) ::apollo::canbus::Vcusts01218();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vcusts01218_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vcusts01218_nio_2eproto}, {}};

static void InitDefaultsscc_info_Vcusts0221c_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vcusts0221c_default_instance_;
    new (ptr) ::apollo::canbus::Vcusts0221c();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vcusts0221c_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vcusts0221c_nio_2eproto}, {}};

static void InitDefaultsscc_info_Vehiclelights2c7_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vehiclelights2c7_default_instance_;
    new (ptr) ::apollo::canbus::Vehiclelights2c7();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vehiclelights2c7_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vehiclelights2c7_nio_2eproto}, {}};

static void InitDefaultsscc_info_Whlspdfront51_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Whlspdfront51_default_instance_;
    new (ptr) ::apollo::canbus::Whlspdfront51();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Whlspdfront51_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Whlspdfront51_nio_2eproto}, {}};

static void InitDefaultsscc_info_Whlspdrear52_nio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Whlspdrear52_default_instance_;
    new (ptr) ::apollo::canbus::Whlspdrear52();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Whlspdrear52_nio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Whlspdrear52_nio_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_nio_2eproto[22];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_nio_2eproto[164];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_nio_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_nio_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpapaparkmod_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpnbssts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpadcvcunbssts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpapasts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpbrkmodsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpspdlmt_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpgearreqactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpcrc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpdstreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avptargearreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Avpreq15e, avpcrtlmode_),
  0,
  1,
  2,
  3,
  5,
  4,
  6,
  7,
  8,
  9,
  10,
  11,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, vcunbssts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, vcuvlcsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, vcullcsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, taggearvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, taggear_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, actualgearvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, actualgear_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, vcu17msgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, vcu17crc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, vcuepfail_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts01218, vcumodind_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts0221c, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts0221c, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts0221c, accpedelftravelvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts0221c, accpedelftravel_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts0221c, accpedacttravelvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts0221c, accpedacttravel_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts0221c, vcu4msgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vcusts0221c, vcu4crc_),
  1,
  0,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, brkmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, brkpressurests_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, brkpressure_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, longaccvalue_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, vehspdsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, vehspddir_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, vehspd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, epbswsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, drvstate_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, brkpedlsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, brklists_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, epbfaillamp_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Brkdrvstatus24c, epbwarnlamp_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, doorajarfrntlests_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, doorajarfrntrists_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, doorajarrelests_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, bcmclosurecrc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, seatoccpfrntlefail_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, steerwhlheatsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, bcmclosuremsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, trajarsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, hoodajarsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, doorajarrerists_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, seatoccpfrntlests_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, cooltlvllowwarnreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bodystatus24d, vehspd_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, epbsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, vcuaccrpedlovrd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, ibesp2warning_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, airbwarnreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, driverstsmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, seatbltmidrowrists_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, seatbltmidrowmidsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, seatbltfrntlests_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, passairbginhbnlampreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, seatoccptfrntrists_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, crashdetd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, seatbltfrntrists_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, driverstscrc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, seatbltmidrowlests_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Driverstatus24e, bmssoc_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vehiclelights2c7, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vehiclelights2c7, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vehiclelights2c7, fogfrntlightsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vehiclelights2c7, leftturnlightsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vehiclelights2c7, rightturnlightsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vehiclelights2c7, lobeamlightsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vehiclelights2c7, hibeamlightsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vehiclelights2c7, emergcylightsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vehiclelights2c7, frntwipersts_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Lightreq336, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Lightreq336, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Lightreq336, brklireq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Lightreq336, frntwiprsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Lightreq336, turnlightind_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Lightreq336, beamactivests_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Lightreq336, beamlightreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Lightreq336, emeglampreq_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Acmbody4a, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Acmbody4a, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Acmbody4a, acmmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Acmbody4a, acmcrc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Acmbody4a, latitudea_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Acmbody4a, yawrate_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Acmbody4a, seatoccptfrntlests_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdfront51, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdfront51, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdfront51, wfmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdfront51, wfcrc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdfront51, whlspdfrsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdfront51, whlspdfrdir_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdfront51, whlspdfr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdfront51, whlspdflsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdfront51, whlspdfldir_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdfront51, whlspdfl_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdrear52, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdrear52, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdrear52, wrcrc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdrear52, wrmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdrear52, whlspdrrsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdrear52, whlspdrrdir_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdrear52, whlspdrr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdrear52, whlspdrlsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdrear52, whlspdrldir_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Whlspdrear52, whlspdrl_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, tcsactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, scmavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, hfcactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, vdcactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, avhsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, autobrkgactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, vdcdeactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, abaactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, autobrkgavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, hbaactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, aebavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, aebactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, cdpavail_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, abaavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, hdcsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, tcsdeactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, awbavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, abpavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, awbactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, ebaavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, qdcaccfail_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, abpactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, pedpavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, cddsavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, standstillsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, hhcavail_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, absactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, pedpactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, ebaactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, cdpactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, ebdactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, scmactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, dtcactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, hrbactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, ecdttempoffs_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, cddsactv_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Bcusts5e, hhcactv_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Pulsecnt65, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Pulsecnt65, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Pulsecnt65, whlplscntrrvld_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Pulsecnt65, whlplscntrr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Pulsecnt65, whlplscntrlvld_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Pulsecnt65, whlplscntrl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Pulsecnt65, whlplscntfrvld_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Pulsecnt65, whlplscntfr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Pulsecnt65, whlplscntflvld_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Pulsecnt65, whlplscntfl_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, aebtardecel_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, abareq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, abasnvtylvl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, awbsnvtylvl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, awbreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, scmdecelreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, aebmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, aebdecelreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, ebadecelreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, abpreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, pedpdecreq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Aebreq79, aebcrc_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, scmfailsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, hilowbeampushswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, frntwiprswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, turnindcrswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, foglipushswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, frntwiprinterspd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, menuorvoldwnpushswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, accspdincorresuswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, acctimegapincswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, selnpushswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, modetogdecswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, modetogincswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, menupushswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, swcfailsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, accspddecswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, scmcrc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, menulepushswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, menuorvoluppushswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, scmmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, acctimegapdecswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, menuripushswtsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Scmsts7b, accsetswtsts_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, accdrvoff_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, accdestop_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, accmaxjerk_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, accminjerk_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, accmode_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, acccomforlow_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, acccomforup_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, acchvydecel_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, accheavymode_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, acctara_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, accmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Accreq7f, acccrc_),
  0,
  1,
  2,
  3,
  5,
  4,
  7,
  6,
  9,
  8,
  10,
  11,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts0286, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts0286, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts0286, motor02msgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts0286, motor02crc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts0286, frntmottqvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts0286, frntmottq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts0286, frntmotspdvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts0286, frntmotspd_),
  0,
  1,
  3,
  2,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts018e, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts018e, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts018e, motor01msgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts018e, motor01crc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts018e, rearmottqvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts018e, rearmottq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts018e, rearmotspdvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Motorsts018e, rearmotspd_),
  0,
  1,
  3,
  2,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, epspaireq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, epsdaireq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, epstoireq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, epsreqtyp_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, sysvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, pilotsym_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, epscrc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, epsmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsreqc6, adcaccsym_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, epswarnlamp_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, absagreqavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, torsbartq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, epssts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, epsmod_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, steeragspddir_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, steeragspd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, steerangledir_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, steerangleandspdvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, steerangle_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, epsdmsgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus01d5, epsdcrc_),
  0,
  1,
  2,
  3,
  4,
  6,
  5,
  7,
  9,
  8,
  10,
  11,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, epstqreqavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, epspinionangreqavl_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, epsestrackforce_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, epshandsoffdetnconfidence_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, eps02msgcntr_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, epspinionagvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, epsdrvoverridedetn_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, eps02crc_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, epsmotortq_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, epsmotortqvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, epspinionag_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Epsstatus02d6, epsestrackforcevalid_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  8,
  7,
  9,
  10,
  11,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, avpreq15e_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, vcusts01218_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, vcusts0221c_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, brkdrvstatus24c_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, bodystatus24d_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, driverstatus24e_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, vehiclelights2c7_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, lightreq336_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, acmbody4a_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, whlspdfront51_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, whlspdrear52_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, bcusts5e_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, pulsecnt65_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, aebreq79_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, scmsts7b_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, accreq7f_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, motorsts0286_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, motorsts018e_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, epsreqc6_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, epsstatus01d5_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Nio, epsstatus02d6_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, sizeof(::apollo::canbus::Avpreq15e)},
  { 29, 45, sizeof(::apollo::canbus::Vcusts01218)},
  { 56, 67, sizeof(::apollo::canbus::Vcusts0221c)},
  { 73, 91, sizeof(::apollo::canbus::Brkdrvstatus24c)},
  { 104, 122, sizeof(::apollo::canbus::Bodystatus24d)},
  { 135, 155, sizeof(::apollo::canbus::Driverstatus24e)},
  { 170, 182, sizeof(::apollo::canbus::Vehiclelights2c7)},
  { 189, 200, sizeof(::apollo::canbus::Lightreq336)},
  { 206, 216, sizeof(::apollo::canbus::Acmbody4a)},
  { 221, 234, sizeof(::apollo::canbus::Whlspdfront51)},
  { 242, 255, sizeof(::apollo::canbus::Whlspdrear52)},
  { 263, 305, sizeof(::apollo::canbus::Bcusts5e)},
  { 342, 355, sizeof(::apollo::canbus::Pulsecnt65)},
  { 363, 380, sizeof(::apollo::canbus::Aebreq79)},
  { 392, 419, sizeof(::apollo::canbus::Scmsts7b)},
  { 441, 458, sizeof(::apollo::canbus::Accreq7f)},
  { 470, 481, sizeof(::apollo::canbus::Motorsts0286)},
  { 487, 498, sizeof(::apollo::canbus::Motorsts018e)},
  { 504, 518, sizeof(::apollo::canbus::Epsreqc6)},
  { 527, 544, sizeof(::apollo::canbus::Epsstatus01d5)},
  { 556, 573, sizeof(::apollo::canbus::Epsstatus02d6)},
  { 585, 611, sizeof(::apollo::canbus::Nio)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Avpreq15e_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Vcusts01218_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Vcusts0221c_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Brkdrvstatus24c_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Bodystatus24d_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Driverstatus24e_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Vehiclelights2c7_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Lightreq336_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Acmbody4a_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Whlspdfront51_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Whlspdrear52_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Bcusts5e_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Pulsecnt65_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Aebreq79_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Scmsts7b_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Accreq7f_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Motorsts0286_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Motorsts018e_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Epsreqc6_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Epsstatus01d5_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Epsstatus02d6_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Nio_default_instance_),
};

const char descriptor_table_protodef_nio_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tnio.proto\022\rapollo.canbus\"\302\023\n\tAvpreq15e"
  "\022A\n\ravpapaparkmod\030\001 \001(\0162*.apollo.canbus."
  "Avpreq15e.AvpapaparkmodType\0229\n\tavpnbssts"
  "\030\002 \001(\0162&.apollo.canbus.Avpreq15e.Avpnbss"
  "tsType\022E\n\017avpadcvcunbssts\030\003 \001(\0162,.apollo"
  ".canbus.Avpreq15e.AvpadcvcunbsstsType\0229\n"
  "\tavpapasts\030\004 \001(\0162&.apollo.canbus.Avpreq1"
  "5e.AvpapastsType\022\?\n\014avpbrkmodsts\030\005 \001(\0162)"
  ".apollo.canbus.Avpreq15e.AvpbrkmodstsTyp"
  "e\022\021\n\tavpspdlmt\030\006 \001(\001\022\026\n\016avpgearreqactv\030\007"
  " \001(\010\022\022\n\navpmsgcntr\030\010 \001(\005\022\016\n\006avpcrc\030\t \001(\005"
  "\022\021\n\tavpdstreq\030\n \001(\005\022A\n\ravptargearreq\030\013 \001"
  "(\0162*.apollo.canbus.Avpreq15e.Avptargearr"
  "eqType\022=\n\013avpcrtlmode\030\014 \001(\0162(.apollo.can"
  "bus.Avpreq15e.AvpcrtlmodeType\"\235\002\n\021Avpapa"
  "parkmodType\022\024\n\020AvpApaparkmodoff\020\000\022\025\n\021Avp"
  "ApaparkmodSapa\020\001\022\025\n\021AvpApaparkmodVpps\020\002\022"
  "\024\n\020AvpApaparkmodNBS\020\003\022*\n&AvpApaparkmodDe"
  "scriptionForTheValue0x4\020\004\022*\n&AvpApaparkm"
  "odDescriptionForTheValue0x5\020\005\022*\n&AvpApap"
  "arkmodDescriptionForTheValue0x6\020\006\022*\n&Avp"
  "ApaparkmodDescriptionForTheValue0x7\020\007\"\353\001"
  "\n\rAvpnbsstsType\022\023\n\017AvpNbsstsNBSOff\020\000\022\027\n\023"
  "AvpNbsstsNBSInitial\020\001\022\027\n\023AvpNbsstsNBSSta"
  "ndby\020\002\022\026\n\022AvpNbsstsNBSMoving\020\003\022\025\n\021AvpNbs"
  "stsNBSAbort\020\004\022\024\n\020AvpNbsstsNBSFail\020\005\022&\n\"A"
  "vpNbsstsDescriptionForTheValue0x6\020\006\022&\n\"A"
  "vpNbsstsDescriptionForTheValue0x7\020\007\"\220\005\n\023"
  "AvpadcvcunbsstsType\022\031\n\025AvpAdcvcunbsstsNB"
  "SOFF\020\000\022\034\n\030AvpAdcvcunbsstsNBSIntial\020\001\022\035\n\031"
  "AvpAdcvcunbsstsNBSStandby\020\002\022\034\n\030AvpAdcvcu"
  "nbsstsNBSMoving\020\003\022\033\n\027AvpAdcvcunbsstsNBSA"
  "bort\020\004\022\032\n\026AvpAdcvcunbsstsNBSFail\020\005\022,\n(Av"
  "pAdcvcunbsstsDescriptionForTheValue0x6\020\006"
  "\022,\n(AvpAdcvcunbsstsDescriptionForTheValu"
  "e0x7\020\007\022,\n(AvpAdcvcunbsstsDescriptionForT"
  "heValue0x8\020\010\022,\n(AvpAdcvcunbsstsDescripti"
  "onForTheValue0x9\020\t\022,\n(AvpAdcvcunbsstsDes"
  "criptionForTheValue0xA\020\n\022,\n(AvpAdcvcunbs"
  "stsDescriptionForTheValue0xB\020\013\022,\n(AvpAdc"
  "vcunbsstsDescriptionForTheValue0xC\020\014\022,\n("
  "AvpAdcvcunbsstsDescriptionForTheValue0xD"
  "\020\r\022,\n(AvpAdcvcunbsstsDescriptionForTheVa"
  "lue0xE\020\016\022,\n(AvpAdcvcunbsstsDescriptionFo"
  "rTheValue0xF\020\017\"\202\003\n\rAvpapastsType\022\024\n\020AvpA"
  "pastsinitial\020\000\022\024\n\020AvpApastsStandby\020\001\022\023\n\017"
  "AvpApastsSearch\020\002\022\030\n\024AvpApastsPreGuidenc"
  "e\020\003\022\025\n\021AvpApastsGuidance\020\004\022\025\n\021AvpApastsR"
  "eserved\020\005\022\022\n\016AvpApastsAbort\020\006\022\022\n\016AvpApas"
  "tsFault\020\007\022\024\n\020AvpApastsPubRoad\020\010\022\024\n\020AvpAp"
  "astsOffMode\020\t\022\027\n\023AvpApastsReserved10\020\n\022\027"
  "\n\023AvpApastsReserved11\020\013\022\027\n\023AvpApastsRese"
  "rved12\020\014\022\027\n\023AvpApastsReserved13\020\r\022\027\n\023Avp"
  "ApastsReserved14\020\016\022\027\n\023AvpApastsReserved1"
  "5\020\017\"y\n\020AvpbrkmodstsType\022\027\n\023AvpBrkmodstsN"
  "oBrake\020\000\022\027\n\023AvpBrkmodstsComfort\020\001\022\031\n\025Avp"
  "BrkmodstsEmergency\020\002\022\030\n\024AvpBrkmodstsRese"
  "rved\020\003\"\203\001\n\021AvptargearreqType\022\036\n\032AvpTarge"
  "arreqNoGearRequest\020\000\022\022\n\016AvpTargearreqD\020\001"
  "\022\022\n\016AvpTargearreqR\020\002\022\022\n\016AvpTargearreqN\020\003"
  "\022\022\n\016AvpTargearreqP\020\004\"i\n\017AvpcrtlmodeType\022"
  "\021\n\rAvpCrtlmodeNo\020\000\022\027\n\023AvpCrtlmodeDistCrt"
  "l\020\001\022\026\n\022AvpCrtlmodeSpdCrtl\020\002\022\022\n\016AvpCrtlmo"
  "deRes\020\003\"\330\t\n\013Vcusts01218\022;\n\tvcunbssts\030\001 \001"
  "(\0162(.apollo.canbus.Vcusts01218.Vcunbssts"
  "Type\022\021\n\tvcuvlcsts\030\002 \001(\005\022\021\n\tvcullcsts\030\003 \001"
  "(\005\022A\n\014taggearvalid\030\004 \001(\0162+.apollo.canbus"
  ".Vcusts01218.TaggearvalidType\022\017\n\007taggear"
  "\030\005 \001(\005\022G\n\017actualgearvalid\030\006 \001(\0162..apollo"
  ".canbus.Vcusts01218.ActualgearvalidType\022"
  "=\n\nactualgear\030\007 \001(\0162).apollo.canbus.Vcus"
  "ts01218.ActualgearType\022\024\n\014vcu17msgcntr\030\010"
  " \001(\005\022\020\n\010vcu17crc\030\t \001(\005\022;\n\tvcuepfail\030\n \001("
  "\0162(.apollo.canbus.Vcusts01218.VcuepfailT"
  "ype\022;\n\tvcumodind\030\013 \001(\0162(.apollo.canbus.V"
  "custs01218.VcumodindType\"\334\001\n\rVcunbsstsTy"
  "pe\022\027\n\023VCUNBSSTsNBSInitial\020\000\022\027\n\023VCUNBSSTs"
  "NBSStandby\020\001\022\026\n\022VCUNBSSTsNBSActive\020\002\022\030\n\024"
  "VCUNBSSTsNBSOverride\020\003\022\027\n\023VCUNBSSTsNBSIn"
  "hibit\020\004\022\035\n\031VCUNBSSTsObstacleDetected\020\005\022\035"
  "\n\031VCUNBSSTsGearshiftAllowed\020\006\022\020\n\014VCUNBSS"
  "TsRes\020\007\"B\n\020TaggearvalidType\022\025\n\021TagGearva"
  "lidvalid\020\000\022\027\n\023TagGearvalidinvalid\020\001\"K\n\023A"
  "ctualgearvalidType\022\030\n\024ActualGearvalidval"
  "id\020\000\022\032\n\026ActualGearvalidinvalid\020\001\"h\n\016Actu"
  "algearType\022\022\n\016ActualGearnone\020\000\022\017\n\013Actual"
  "GearD\020\001\022\017\n\013ActualGearR\020\002\022\017\n\013ActualGearN\020"
  "\003\022\017\n\013ActualGearP\020\004\"K\n\rVcuepfailType\022\021\n\rV"
  "cuEpfailInit\020\000\022\023\n\017VcuEpfailNormal\020\001\022\022\n\016V"
  "cuEpfailFault\020\002\"\300\001\n\rVcumodindType\022\021\n\rVCU"
  "modindAuto\020\000\022\024\n\020VCUmodindEconomy\020\001\022\024\n\020VC"
  "UmodindComfort\020\002\022\022\n\016VCUmodindSport\020\003\022\026\n\022"
  "VCUmodindReserved4\020\004\022\026\n\022VCUmodindReserve"
  "d5\020\005\022\026\n\022VCUmodindReserved6\020\006\022\024\n\020VCUmodin"
  "dInvalid\020\007\"\303\003\n\013Vcusts0221c\022Q\n\024accpedelft"
  "ravelvalid\030\001 \001(\01623.apollo.canbus.Vcusts0"
  "221c.AccpedelftravelvalidType\022\027\n\017accpede"
  "lftravel\030\002 \001(\001\022Q\n\024accpedacttravelvalid\030\003"
  " \001(\01623.apollo.canbus.Vcusts0221c.Accpeda"
  "cttravelvalidType\022\027\n\017accpedacttravel\030\004 \001"
  "(\001\022\023\n\013vcu4msgcntr\030\005 \001(\005\022\017\n\007vcu4crc\030\006 \001(\005"
  "\"Z\n\030AccpedelftravelvalidType\022\035\n\031Accpedel"
  "ftravelvalidvalid\020\000\022\037\n\033Accpedelftravelva"
  "lidinvalid\020\001\"Z\n\030AccpedacttravelvalidType"
  "\022\035\n\031Accpedacttravelvalidvalid\020\000\022\037\n\033Accpe"
  "dacttravelvalidinvalid\020\001\"\255\r\n\017Brkdrvstatu"
  "s24c\022\022\n\nbrkmsgcntr\030\001 \001(\005\022I\n\016brkpressures"
  "ts\030\002 \001(\01621.apollo.canbus.Brkdrvstatus24c"
  ".BrkpressurestsType\022\023\n\013brkpressure\030\003 \001(\001"
  "\022\024\n\014longaccvalue\030\004 \001(\001\022\?\n\tvehspdsts\030\005 \001("
  "\0162,.apollo.canbus.Brkdrvstatus24c.Vehspd"
  "stsType\022\?\n\tvehspddir\030\006 \001(\0162,.apollo.canb"
  "us.Brkdrvstatus24c.VehspddirType\022\016\n\006vehs"
  "pd\030\007 \001(\005\022=\n\010epbswsts\030\010 \001(\0162+.apollo.canb"
  "us.Brkdrvstatus24c.EpbswstsType\022=\n\010drvst"
  "ate\030\t \001(\0162+.apollo.canbus.Brkdrvstatus24"
  "c.DrvstateType\022A\n\nbrkpedlsts\030\n \001(\0162-.apo"
  "llo.canbus.Brkdrvstatus24c.BrkpedlstsTyp"
  "e\022=\n\010brklists\030\013 \001(\0162+.apollo.canbus.Brkd"
  "rvstatus24c.BrklistsType\022C\n\013epbfaillamp\030"
  "\014 \001(\0162..apollo.canbus.Brkdrvstatus24c.Ep"
  "bfaillampType\022C\n\013epbwarnlamp\030\r \001(\0162..apo"
  "llo.canbus.Brkdrvstatus24c.EpbwarnlampTy"
  "pe\"b\n\022BrkpressurestsType\022\031\n\025BrkpressureS"
  "tsNotInit\020\000\022\030\n\024BrkpressureStsnormal\020\001\022\027\n"
  "\023BrkpressureStsfault\020\002\"9\n\rVehspdstsType\022"
  "\022\n\016Vehspdstsvalid\020\000\022\024\n\020Vehspdstsinvalid\020"
  "\001\"l\n\rVehspddirType\022\027\n\023Vehspddirstandstil"
  "l\020\000\022\024\n\020Vehspddirforward\020\001\022\025\n\021Vehspddirba"
  "ckward\020\002\022\025\n\021Vehspddirreserved\020\003\"f\n\014Epbsw"
  "stsType\022\026\n\022EPBswstsNotPressed\020\000\022\023\n\017EPBsw"
  "stspressed\020\001\022\024\n\020EPBswstsreserved\020\002\022\023\n\017EP"
  "Bswstsinvalid\020\003\"\220\001\n\014DrvstateType\022\022\n\016DrvS"
  "tateParked\020\000\022\032\n\026DrvStateReadyForDrving\020\001"
  "\022\023\n\017DrvStatedriving\020\002\022\023\n\017DrvStateinvalid"
  "\020\003\022&\n\"DrvStateInvalidOtherValuesReserved"
  "\020\017\"p\n\016BrkpedlstsType\022\030\n\024BrkPedlStsNotPre"
  "ssed\020\000\022\025\n\021BrkPedlStspressed\020\001\022\026\n\022BrkPedl"
  "Stsreserved\020\002\022\025\n\021BrkPedlStsinvalid\020\003\"e\n\014"
  "BrklistsType\022\025\n\021BrkListsNoRequest\020\000\022\023\n\017B"
  "rkListsrequest\020\001\022\024\n\020BrkListsreserved\020\002\022\023"
  "\n\017BrkListsinvalid\020\003\"i\n\017EpbfaillampType\022\022"
  "\n\016EPBfaillampoff\020\000\022\021\n\rEPBfaillampon\020\001\022\027\n"
  "\023EPBfaillampblinking\020\002\022\026\n\022EPBfaillampinv"
  "alid\020\003\"\247\001\n\017EpbwarnlampType\022&\n\"EPBwarnlam"
  "pOnlyReadyDuringFunction\020\000\022!\n\035EPBwarnlam"
  "pDoorOpenDuringAuto\020\001\022 \n\034EPBwarnlampSeat"
  "BeltUnbuckled\020\002\022\'\n#EPBwarnlampDoorOpenAn"
  "dBeltUnbuckled\020\003\"\244\021\n\rBodystatus24d\022M\n\021do"
  "orajarfrntlests\030\001 \001(\01622.apollo.canbus.Bo"
  "dystatus24d.DoorajarfrntlestsType\022M\n\021doo"
  "rajarfrntrists\030\002 \001(\01622.apollo.canbus.Bod"
  "ystatus24d.DoorajarfrntristsType\022I\n\017door"
  "ajarrelests\030\003 \001(\01620.apollo.canbus.Bodyst"
  "atus24d.DoorajarrelestsType\022\025\n\rbcmclosur"
  "ecrc\030\004 \001(\005\022O\n\022seatoccpfrntlefail\030\005 \001(\01623"
  ".apollo.canbus.Bodystatus24d.Seatoccpfrn"
  "tlefailType\022I\n\017steerwhlheatsts\030\006 \001(\01620.a"
  "pollo.canbus.Bodystatus24d.Steerwhlheats"
  "tsType\022\031\n\021bcmclosuremsgcntr\030\007 \001(\005\022=\n\ttra"
  "jarsts\030\010 \001(\0162*.apollo.canbus.Bodystatus2"
  "4d.TrajarstsType\022A\n\013hoodajarsts\030\t \001(\0162,."
  "apollo.canbus.Bodystatus24d.HoodajarstsT"
  "ype\022I\n\017doorajarrerists\030\n \001(\01620.apollo.ca"
  "nbus.Bodystatus24d.DoorajarreristsType\022M"
  "\n\021seatoccpfrntlests\030\013 \001(\01622.apollo.canbu"
  "s.Bodystatus24d.SeatoccpfrntlestsType\022O\n"
  "\022cooltlvllowwarnreq\030\014 \001(\01623.apollo.canbu"
  "s.Bodystatus24d.CooltlvllowwarnreqType\022\016"
  "\n\006vehspd\030\r \001(\001\"\216\001\n\025DoorajarfrntlestsType"
  "\022\033\n\027DoorAjarFrntLeStsOpened\020\000\022\033\n\027DoorAja"
  "rFrntLeStsClosed\020\001\022\035\n\031DoorAjarFrntLeStsR"
  "eserved\020\002\022\034\n\030DoorAjarFrntLeStsInvalid\020\003\""
  "\216\001\n\025DoorajarfrntristsType\022\033\n\027DoorAjarFrn"
  "tRiStsOpened\020\000\022\033\n\027DoorAjarFrntRiStsClose"
  "d\020\001\022\035\n\031DoorAjarFrntRiStsReserved\020\002\022\034\n\030Do"
  "orAjarFrntRiStsInvalid\020\003\"\204\001\n\023Doorajarrel"
  "estsType\022\031\n\025DoorAjarReLeStsOpened\020\000\022\031\n\025D"
  "oorAjarReLeStsClosed\020\001\022\033\n\027DoorAjarReLeSt"
  "sReserved\020\002\022\032\n\026DoorAjarReLeStsInvalid\020\003\""
  "\227\001\n\026SeatoccpfrntlefailType\022\037\n\033SeatOccpFr"
  "ntLeFailNoFailure\020\000\022\035\n\031SeatOccpFrntLeFai"
  "lFailure\020\001\022\036\n\032SeatOccpFrntLeFailReserved"
  "\020\002\022\035\n\031SeatOccpFrntLeFailInvalid\020\003\"\211\001\n\023St"
  "eerwhlheatstsType\022\034\n\030SteerWhlHeatStsHeat"
  "erOff\020\000\022\033\n\027SteerWhlHeatStsHeaterOn\020\001\022\033\n\027"
  "SteerWhlHeatStsReserved\020\002\022\032\n\026SteerWhlHea"
  "tStsInvalid\020\003\"f\n\rTrajarstsType\022\023\n\017TrAjar"
  "StsOpened\020\000\022\023\n\017TrAjarStsClosed\020\001\022\025\n\021TrAj"
  "arStsReserved\020\002\022\024\n\020TrAjarStsInvalid\020\003\"p\n"
  "\017HoodajarstsType\022\025\n\021HoodAjarStsOpened\020\000\022"
  "\025\n\021HoodAjarStsClosed\020\001\022\027\n\023HoodAjarStsRes"
  "erved\020\002\022\026\n\022HoodAjarStsInvalid\020\003\"\204\001\n\023Door"
  "ajarreristsType\022\031\n\025DoorAjarReRiStsOpened"
  "\020\000\022\031\n\025DoorAjarReRiStsClosed\020\001\022\033\n\027DoorAja"
  "rReRiStsReserved\020\002\022\032\n\026DoorAjarReRiStsInv"
  "alid\020\003\"\224\001\n\025SeatoccpfrntlestsType\022\037\n\033Seat"
  "OccpFrntLeStsNoOccupant\020\000\022\035\n\031SeatOccpFrn"
  "tLeStsOccupant\020\001\022\035\n\031SeatOccpFrntLeStsRes"
  "erved\020\002\022\034\n\030SeatOccpFrntLeStsInvalid\020\003\"\227\001"
  "\n\026CooltlvllowwarnreqType\022\037\n\033CooltLvlLowW"
  "arnReqNoRequest\020\000\022\035\n\031CooltLvlLowWarnReqR"
  "equest\020\001\022\036\n\032CooltLvlLowWarnReqReserved\020\002"
  "\022\035\n\031CooltLvlLowWarnReqInvalid\020\003\"\253\025\n\017Driv"
  "erstatus24e\0229\n\006epbsts\030\001 \001(\0162).apollo.can"
  "bus.Driverstatus24e.EpbstsType\022K\n\017vcuacc"
  "rpedlovrd\030\002 \001(\01622.apollo.canbus.Driverst"
  "atus24e.VcuaccrpedlovrdType\022G\n\ribesp2war"
  "ning\030\003 \001(\01620.apollo.canbus.Driverstatus2"
  "4e.Ibesp2warningType\022C\n\013airbwarnreq\030\004 \001("
  "\0162..apollo.canbus.Driverstatus24e.Airbwa"
  "rnreqType\022\030\n\020driverstsmsgcntr\030\005 \001(\005\022Q\n\022s"
  "eatbltmidrowrists\030\006 \001(\01625.apollo.canbus."
  "Driverstatus24e.SeatbltmidrowristsType\022S"
  "\n\023seatbltmidrowmidsts\030\007 \001(\01626.apollo.can"
  "bus.Driverstatus24e.SeatbltmidrowmidstsT"
  "ype\022M\n\020seatbltfrntlests\030\010 \001(\01623.apollo.c"
  "anbus.Driverstatus24e.SeatbltfrntlestsTy"
  "pe\022W\n\025passairbginhbnlampreq\030\t \001(\01628.apol"
  "lo.canbus.Driverstatus24e.Passairbginhbn"
  "lampreqType\022Q\n\022seatoccptfrntrists\030\n \001(\0162"
  "5.apollo.canbus.Driverstatus24e.Seatoccp"
  "tfrntristsType\022\?\n\tcrashdetd\030\013 \001(\0162,.apol"
  "lo.canbus.Driverstatus24e.CrashdetdType\022"
  "M\n\020seatbltfrntrists\030\014 \001(\01623.apollo.canbu"
  "s.Driverstatus24e.SeatbltfrntristsType\022\024"
  "\n\014driverstscrc\030\r \001(\005\022Q\n\022seatbltmidrowles"
  "ts\030\016 \001(\01625.apollo.canbus.Driverstatus24e"
  ".SeatbltmidrowlestsType\022\016\n\006bmssoc\030\017 \001(\001\""
  "\257\001\n\nEpbstsType\022\020\n\014EPBstsunknow\020\000\022\021\n\rEPBs"
  "tsapplied\020\001\022\023\n\017EPBstsreleasing\020\002\022\024\n\020EPBs"
  "tsNotApplied\020\003\022\022\n\016EPBstsapplying\020\004\022\023\n\017EP"
  "Bstsreserved4\020\005\022\023\n\017EPBstsreserved6\020\006\022\023\n\017"
  "EPBstsreserved7\020\007\"O\n\023VcuaccrpedlovrdType"
  "\022\034\n\030VCUAccrPedlOvrdNoRequest\020\000\022\032\n\026VCUAcc"
  "rPedlOvrdrequest\020\001\"\320\001\n\021Ibesp2warningType"
  "\022!\n\035Ibesp2WarningIBoosterSystemOK\020\000\0227\n3I"
  "besp2WarningIBoosterInReducedPerformance"
  "YellowLamp\020\001\022.\n*Ibesp2WarningIBoosterDea"
  "ctivatedYellowLamp\020\002\022/\n+Ibesp2WarningIBo"
  "osterInDiagnosisOrPlantMode\020\003\"\263\001\n\017Airbwa"
  "rnreqType\022\035\n\031AirbWarnReqWarningLampOff\020\000"
  "\022)\n%AirbWarnReqWarningLampOnFaultDetecte"
  "d\020\001\022$\n AirbWarnReqWarningLampIsBlinking\020"
  "\002\0220\n,AirbWarnReqWarningLampOnSystemIniti"
  "alization\020\003\"\204\001\n\026SeatbltmidrowristsType\0225"
  "\n1SeatBltMidRowRiStsSeabeltMiddleRowRigh"
  "tNotBuckled\020\000\0223\n/SeatBltMidRowRiStsSeatb"
  "eltMiddleRowRightBuckled\020\001\"\211\001\n\027Seatbltmi"
  "drowmidstsType\0227\n3SeatBltMidRowMidStsSea"
  "beltMiddleRowMiddleNotBuckled\020\000\0225\n1SeatB"
  "ltMidRowMidStsSeatbeltMiddleRowMiddleBuc"
  "kled\020\001\"t\n\024SeatbltfrntlestsType\022.\n*SeatBl"
  "tFrntLeStsSeabeltFrontLeftNotBuckled\020\000\022,"
  "\n(SeatBltFrntLeStsSeatbeltFrontLeftBuckl"
  "ed\020\001\"\201\002\n\031PassairbginhbnlampreqType\0229\n5Pa"
  "ssAirbgInhbnLampReqPassengerAirbagInhibi"
  "tionLampOff\020\000\0228\n4PassAirbgInhbnLampReqPa"
  "ssengerAirbagInhibitionLampOn\020\001\022L\nHPassA"
  "irbgInhbnLampReqPassengerAirbagInhibitio"
  "nLampOnSystemInitialization\020\002\022!\n\035PassAir"
  "bgInhbnLampReqReserved\020\003\"Z\n\026Seatoccptfrn"
  "tristsType\022 \n\034SeatOccptFrntRiStsNoOccupa"
  "nt\020\000\022\036\n\032SeatOccptFrntRiStsOccupant\020\001\"J\n\r"
  "CrashdetdType\022\035\n\031CrashDetdCrashNotDetect"
  "ed\020\000\022\032\n\026CrashDetdCrashDetected\020\001\"v\n\024Seat"
  "bltfrntristsType\022/\n+SeatBltFrntRiStsSeab"
  "eltFrontRightNotBuckled\020\000\022-\n)SeatBltFrnt"
  "RiStsSeatbeltFrontRightBuckled\020\001\"\202\001\n\026Sea"
  "tbltmidrowlestsType\0224\n0SeatBltMidRowLeSt"
  "sSeabeltMiddleRowLeftNotBuckled\020\000\0222\n.Sea"
  "tBltMidRowLeStsSeatbeltMiddleRowLeftBuck"
  "led\020\001\"\223\014\n\020Vehiclelights2c7\022L\n\017fogfrntlig"
  "htsts\030\001 \001(\01623.apollo.canbus.Vehiclelight"
  "s2c7.FogfrntlightstsType\022N\n\020leftturnligh"
  "tsts\030\002 \001(\01624.apollo.canbus.Vehiclelights"
  "2c7.LeftturnlightstsType\022P\n\021rightturnlig"
  "htsts\030\003 \001(\01625.apollo.canbus.Vehiclelight"
  "s2c7.RightturnlightstsType\022J\n\016lobeamligh"
  "tsts\030\004 \001(\01622.apollo.canbus.Vehiclelights"
  "2c7.LobeamlightstsType\022J\n\016hibeamlightsts"
  "\030\005 \001(\01622.apollo.canbus.Vehiclelights2c7."
  "HibeamlightstsType\022L\n\017emergcylightsts\030\006 "
  "\001(\01623.apollo.canbus.Vehiclelights2c7.Eme"
  "rgcylightstsType\022F\n\014frntwipersts\030\007 \001(\01620"
  ".apollo.canbus.Vehiclelights2c7.Frntwipe"
  "rstsType\"}\n\023FogfrntlightstsType\022\026\n\022FogFr"
  "ntlightStsoff\020\000\022\025\n\021FogFrntlightStson\020\001\022\033"
  "\n\027FogFrntlightStsreserved\020\002\022\032\n\026FogFrntli"
  "ghtStsinvalid\020\003\"\202\001\n\024LeftturnlightstsType"
  "\022\027\n\023LeftTurnlightstsoff\020\000\022\026\n\022LeftTurnlig"
  "htstson\020\001\022\034\n\030LeftTurnlightstsreserved\020\002\022"
  "\033\n\027LeftTurnlightstsinvalid\020\003\"\207\001\n\025Righttu"
  "rnlightstsType\022\030\n\024RightTurnlightstsoff\020\000"
  "\022\027\n\023RightTurnlightstson\020\001\022\035\n\031RightTurnli"
  "ghtstsreserved\020\002\022\034\n\030RightTurnlightstsinv"
  "alid\020\003\"x\n\022LobeamlightstsType\022\025\n\021Lobeamli"
  "ghtStsoff\020\000\022\024\n\020LobeamlightStson\020\001\022\032\n\026Lob"
  "eamlightStsreserved\020\002\022\031\n\025LobeamlightStsi"
  "nvalid\020\003\"x\n\022HibeamlightstsType\022\025\n\021Hibeam"
  "lightStsoff\020\000\022\024\n\020HibeamlightStson\020\001\022\032\n\026H"
  "ibeamlightStsreserved\020\002\022\031\n\025HibeamlightSt"
  "sinvalid\020\003\"{\n\023EmergcylightstsType\022\026\n\022Eme"
  "rgcyLightStsoff\020\000\022\030\n\024EmergcyLightSts125H"
  "z\020\001\022\026\n\022EmergcyLightSts1Hz\020\002\022\032\n\026EmergcyLi"
  "ghtStsinvalid\020\003\"\341\001\n\020FrntwiperstsType\022\023\n\017"
  "FrntwiperStsoff\020\000\022\030\n\024FrntwiperStsLowSpee"
  "d\020\001\022\031\n\025FrntwiperStsHighSpeed\020\002\022\031\n\025Frntwi"
  "perStsreserved2\020\003\022\031\n\025FrntwiperStsreserve"
  "d3\020\004\022\031\n\025FrntwiperStsreserved5\020\005\022\031\n\025Frntw"
  "iperStsreserved6\020\006\022\027\n\023FrntwiperStsinvali"
  "d\020\007\"\226\n\n\013Lightreq336\0229\n\010brklireq\030\001 \001(\0162\'."
  "apollo.canbus.Lightreq336.BrklireqType\022\?"
  "\n\013frntwiprsts\030\002 \001(\0162*.apollo.canbus.Ligh"
  "treq336.FrntwiprstsType\022A\n\014turnlightind\030"
  "\003 \001(\0162+.apollo.canbus.Lightreq336.Turnli"
  "ghtindType\022C\n\rbeamactivests\030\004 \001(\0162,.apol"
  "lo.canbus.Lightreq336.BeamactivestsType\022"
  "A\n\014beamlightreq\030\005 \001(\0162+.apollo.canbus.Li"
  "ghtreq336.BeamlightreqType\022\?\n\013emeglampre"
  "q\030\006 \001(\0162*.apollo.canbus.Lightreq336.Emeg"
  "lampreqType\"e\n\014BrklireqType\022\025\n\021BrkLiReqN"
  "oRequest\020\000\022\023\n\017BrkLiReqrequest\020\001\022\024\n\020BrkLi"
  "Reqreserved\020\002\022\023\n\017BrkLiReqinvalid\020\003\"\330\001\n\017F"
  "rntwiprstsType\022\022\n\016Frntwiprstsoff\020\000\022\027\n\023Fr"
  "ntwiprstsLowSpeed\020\001\022\030\n\024FrntwiprstsHighSp"
  "eed\020\002\022\030\n\024Frntwiprstsreserved3\020\003\022\030\n\024Frntw"
  "iprstsreserved4\020\004\022\030\n\024Frntwiprstsreserved"
  "5\020\005\022\030\n\024Frntwiprstsreserved6\020\006\022\026\n\022Frntwip"
  "rstsinvalid\020\007\"x\n\020TurnlightindType\022\026\n\022Tur"
  "nlightindNoTurn\020\000\022\030\n\024TurnlightindTurnLef"
  "t\020\001\022\031\n\025TurnlightindTurnRight\020\002\022\027\n\023Turnli"
  "ghtindinvalid\020\003\"\204\002\n\021BeamactivestsType\022\036\n"
  "\032BeamactiveStsBeamStatusOff\020\000\022\"\n\036Beamact"
  "iveStsBeamStatusPassive\020\001\022!\n\035BeamactiveS"
  "tsBeamStatusActive\020\002\022\032\n\026BeamactiveStsres"
  "erved3\020\003\022\032\n\026BeamactiveStsreserved4\020\004\022\032\n\026"
  "BeamactiveStsreserved5\020\005\022\032\n\026BeamactiveSt"
  "sreserved6\020\006\022\030\n\024BeamactiveStsinvalid\020\007\"S"
  "\n\020BeamlightreqType\022\036\n\032BeamlightreqLowBea"
  "mRequest\020\000\022\037\n\033BeamlightreqHighBeamReques"
  "t\020\001\"g\n\017EmeglampreqType\022\022\n\016EmeglampReqoff"
  "\020\000\022\024\n\020EmeglampReq125Hz\020\001\022\022\n\016EmeglampReq1"
  "Hz\020\002\022\026\n\022EmeglampReqinvalid\020\003\"o\n\tAcmbody4"
  "a\022\022\n\nacmmsgcntr\030\001 \001(\005\022\016\n\006acmcrc\030\002 \001(\005\022\021\n"
  "\tlatitudea\030\003 \001(\001\022\017\n\007yawrate\030\004 \001(\001\022\032\n\022sea"
  "toccptfrntlests\030\005 \001(\010\"\263\006\n\rWhlspdfront51\022"
  "\021\n\twfmsgcntr\030\001 \001(\005\022\r\n\005wfcrc\030\002 \001(\005\022A\n\013whl"
  "spdfrsts\030\003 \001(\0162,.apollo.canbus.Whlspdfro"
  "nt51.WhlspdfrstsType\022A\n\013whlspdfrdir\030\004 \001("
  "\0162,.apollo.canbus.Whlspdfront51.Whlspdfr"
  "dirType\022\020\n\010whlspdfr\030\005 \001(\001\022A\n\013whlspdflsts"
  "\030\006 \001(\0162,.apollo.canbus.Whlspdfront51.Whl"
  "spdflstsType\022A\n\013whlspdfldir\030\007 \001(\0162,.apol"
  "lo.canbus.Whlspdfront51.WhlspdfldirType\022"
  "\020\n\010whlspdfl\030\010 \001(\001\"p\n\017WhlspdfrstsType\022\024\n\020"
  "WhlspdFRstsvalid\020\000\022\026\n\022WhlspdFRstsinvalid"
  "\020\001\022\026\n\022WhlspdFRstsinitial\020\002\022\027\n\023WhlspdFRst"
  "sreserved\020\003\"u\n\017WhlspdfrdirType\022\031\n\025Whlspd"
  "FRdirstandstill\020\000\022\026\n\022WhlspdFRdirforward\020"
  "\001\022\027\n\023WhlspdFRdirbackward\020\002\022\026\n\022WhlspdFRdi"
  "rinvalid\020\003\"p\n\017WhlspdflstsType\022\024\n\020WhlspdF"
  "Lstsvalid\020\000\022\026\n\022WhlspdFLstsinvalid\020\001\022\026\n\022W"
  "hlspdFLstsinitial\020\002\022\027\n\023WhlspdFLstsreserv"
  "ed\020\003\"u\n\017WhlspdfldirType\022\031\n\025WhlspdFLdirst"
  "andstill\020\000\022\026\n\022WhlspdFLdirforward\020\001\022\027\n\023Wh"
  "lspdFLdirbackward\020\002\022\026\n\022WhlspdFLdirinvali"
  "d\020\003\"\256\006\n\014Whlspdrear52\022\r\n\005wrcrc\030\001 \001(\005\022\021\n\tw"
  "rmsgcntr\030\002 \001(\005\022@\n\013whlspdrrsts\030\003 \001(\0162+.ap"
  "ollo.canbus.Whlspdrear52.WhlspdrrstsType"
  "\022@\n\013whlspdrrdir\030\004 \001(\0162+.apollo.canbus.Wh"
  "lspdrear52.WhlspdrrdirType\022\020\n\010whlspdrr\030\005"
  " \001(\001\022@\n\013whlspdrlsts\030\006 \001(\0162+.apollo.canbu"
  "s.Whlspdrear52.WhlspdrlstsType\022@\n\013whlspd"
  "rldir\030\007 \001(\0162+.apollo.canbus.Whlspdrear52"
  ".WhlspdrldirType\022\020\n\010whlspdrl\030\010 \001(\001\"p\n\017Wh"
  "lspdrrstsType\022\024\n\020WhlspdRRstsvalid\020\000\022\026\n\022W"
  "hlspdRRstsinvalid\020\001\022\026\n\022WhlspdRRstsinitia"
  "l\020\002\022\027\n\023WhlspdRRstsreserved\020\003\"u\n\017Whlspdrr"
  "dirType\022\031\n\025WhlspdRRdirstandstill\020\000\022\026\n\022Wh"
  "lspdRRdirforward\020\001\022\027\n\023WhlspdRRdirbackwar"
  "d\020\002\022\026\n\022WhlspdRRdirinvalid\020\003\"p\n\017Whlspdrls"
  "tsType\022\024\n\020WhlspdRLstsvalid\020\000\022\026\n\022WhlspdRL"
  "stsinvalid\020\001\022\026\n\022WhlspdRLstsinitial\020\002\022\027\n\023"
  "WhlspdRLstsreserved\020\003\"u\n\017WhlspdrldirType"
  "\022\031\n\025WhlspdRLdirstandstill\020\000\022\026\n\022WhlspdRLd"
  "irforward\020\001\022\027\n\023WhlspdRLdirbackward\020\002\022\026\n\022"
  "WhlspdRLdirinvalid\020\003\"\344$\n\010Bcusts5e\0224\n\007tcs"
  "actv\030\001 \001(\0162#.apollo.canbus.Bcusts5e.Tcsa"
  "ctvType\0222\n\006scmavl\030\002 \001(\0162\".apollo.canbus."
  "Bcusts5e.ScmavlType\0224\n\007hfcactv\030\003 \001(\0162#.a"
  "pollo.canbus.Bcusts5e.HfcactvType\0224\n\007vdc"
  "actv\030\004 \001(\0162#.apollo.canbus.Bcusts5e.Vdca"
  "ctvType\0222\n\006avhsts\030\005 \001(\0162\".apollo.canbus."
  "Bcusts5e.AvhstsType\022>\n\014autobrkgactv\030\006 \001("
  "\0162(.apollo.canbus.Bcusts5e.AutobrkgactvT"
  "ype\0228\n\tvdcdeactv\030\007 \001(\0162%.apollo.canbus.B"
  "custs5e.VdcdeactvType\0224\n\007abaactv\030\010 \001(\0162#"
  ".apollo.canbus.Bcusts5e.AbaactvType\022<\n\013a"
  "utobrkgavl\030\t \001(\0162\'.apollo.canbus.Bcusts5"
  "e.AutobrkgavlType\0224\n\007hbaactv\030\n \001(\0162#.apo"
  "llo.canbus.Bcusts5e.HbaactvType\0222\n\006aebav"
  "l\030\013 \001(\0162\".apollo.canbus.Bcusts5e.AebavlT"
  "ype\0224\n\007aebactv\030\014 \001(\0162#.apollo.canbus.Bcu"
  "sts5e.AebactvType\0226\n\010cdpavail\030\r \001(\0162$.ap"
  "ollo.canbus.Bcusts5e.CdpavailType\0222\n\006aba"
  "avl\030\016 \001(\0162\".apollo.canbus.Bcusts5e.Abaav"
  "lType\0222\n\006hdcsts\030\017 \001(\0162\".apollo.canbus.Bc"
  "usts5e.HdcstsType\0228\n\ttcsdeactv\030\020 \001(\0162%.a"
  "pollo.canbus.Bcusts5e.TcsdeactvType\0222\n\006a"
  "wbavl\030\021 \001(\0162\".apollo.canbus.Bcusts5e.Awb"
  "avlType\0222\n\006abpavl\030\022 \001(\0162\".apollo.canbus."
  "Bcusts5e.AbpavlType\0224\n\007awbactv\030\023 \001(\0162#.a"
  "pollo.canbus.Bcusts5e.AwbactvType\0222\n\006eba"
  "avl\030\024 \001(\0162\".apollo.canbus.Bcusts5e.Ebaav"
  "lType\022:\n\nqdcaccfail\030\025 \001(\0162&.apollo.canbu"
  "s.Bcusts5e.QdcaccfailType\0224\n\007abpactv\030\026 \001"
  "(\0162#.apollo.canbus.Bcusts5e.AbpactvType\022"
  "4\n\007pedpavl\030\027 \001(\0162#.apollo.canbus.Bcusts5"
  "e.PedpavlType\0224\n\007cddsavl\030\030 \001(\0162#.apollo."
  "canbus.Bcusts5e.CddsavlType\022@\n\rstandstil"
  "lsts\030\031 \001(\0162).apollo.canbus.Bcusts5e.Stan"
  "dstillstsType\0226\n\010hhcavail\030\032 \001(\0162$.apollo"
  ".canbus.Bcusts5e.HhcavailType\0224\n\007absactv"
  "\030\033 \001(\0162#.apollo.canbus.Bcusts5e.AbsactvT"
  "ype\0226\n\010pedpactv\030\034 \001(\0162$.apollo.canbus.Bc"
  "usts5e.PedpactvType\0224\n\007ebaactv\030\035 \001(\0162#.a"
  "pollo.canbus.Bcusts5e.EbaactvType\0224\n\007cdp"
  "actv\030\036 \001(\0162#.apollo.canbus.Bcusts5e.Cdpa"
  "ctvType\0224\n\007ebdactv\030\037 \001(\0162#.apollo.canbus"
  ".Bcusts5e.EbdactvType\0224\n\007scmactv\030  \001(\0162#"
  ".apollo.canbus.Bcusts5e.ScmactvType\0224\n\007d"
  "tcactv\030! \001(\0162#.apollo.canbus.Bcusts5e.Dt"
  "cactvType\0224\n\007hrbactv\030\" \001(\0162#.apollo.canb"
  "us.Bcusts5e.HrbactvType\022>\n\014ecdttempoffs\030"
  "# \001(\0162(.apollo.canbus.Bcusts5e.Ecdttempo"
  "ffsType\0226\n\010cddsactv\030$ \001(\0162$.apollo.canbu"
  "s.Bcusts5e.CddsactvType\0224\n\007hhcactv\030% \001(\016"
  "2#.apollo.canbus.Bcusts5e.HhcactvType\"6\n"
  "\013TcsactvType\022\024\n\020TCSActvNotActive\020\000\022\021\n\rTC"
  "SActvActive\020\001\"9\n\nScmavlType\022\026\n\022SCMAvlNot"
  "Available\020\000\022\023\n\017SCMAvlavailable\020\001\"6\n\013Hfca"
  "ctvType\022\024\n\020HFCActvNotActive\020\000\022\021\n\rHFCActv"
  "Active\020\001\"6\n\013VdcactvType\022\024\n\020VDCActvNotAct"
  "ive\020\000\022\021\n\rVDCActvActive\020\001\"\221\001\n\nAvhstsType\022"
  ")\n%AVHStsFailureAVHLampOnWithYellowColor"
  "\020\000\022\033\n\027AVHStsStandbyAVHLampOff\020\001\022\'\n#AVHSt"
  "sActiveAVHLampOnWithGreenColor\020\002\022\022\n\016AVHS"
  "tsReserved\020\003\"E\n\020AutobrkgactvType\022\031\n\025Auto"
  "BrkgActvNotActive\020\000\022\026\n\022AutoBrkgActvActiv"
  "e\020\001\"F\n\rVdcdeactvType\022\033\n\027VDCDeactvNotDeac"
  "tivated\020\000\022\030\n\024VDCDeactvDeactivated\020\001\"6\n\013A"
  "baactvType\022\024\n\020ABAActvNotActive\020\000\022\021\n\rABAA"
  "ctvActive\020\001\"H\n\017AutobrkgavlType\022\033\n\027AutoBr"
  "kgAvlNotAvailable\020\000\022\030\n\024AutoBrkgAvlAvaila"
  "ble\020\001\"6\n\013HbaactvType\022\024\n\020HBAActvNotActive"
  "\020\000\022\021\n\rHBAActvActive\020\001\"9\n\nAebavlType\022\026\n\022A"
  "EBAvlNotAvailable\020\000\022\023\n\017AEBAvlavailable\020\001"
  "\"6\n\013AebactvType\022\024\n\020AEBActvNotActive\020\000\022\021\n"
  "\rAEBActvActive\020\001\"\?\n\014CdpavailType\022\030\n\024CDPA"
  "vailNotAvailable\020\000\022\025\n\021CDPAvailavailable\020"
  "\001\"9\n\nAbaavlType\022\026\n\022ABAAvlNotAvailable\020\000\022"
  "\023\n\017ABAAvlavailable\020\001\"S\n\nHdcstsType\022\r\n\tHD"
  "CStsOff\020\000\022\021\n\rHDCStsFailure\020\001\022\021\n\rHDCStsSt"
  "andby\020\002\022\020\n\014HDCStsActive\020\003\"F\n\rTcsdeactvTy"
  "pe\022\033\n\027TCSDeactvNotDeactivated\020\000\022\030\n\024TCSDe"
  "actvDeactivated\020\001\"9\n\nAwbavlType\022\026\n\022AWBAv"
  "lNotAvailable\020\000\022\023\n\017AWBAvlavailable\020\001\"9\n\n"
  "AbpavlType\022\026\n\022ABPAvlNotAvailable\020\000\022\023\n\017AB"
  "PAvlavailable\020\001\"6\n\013AwbactvType\022\024\n\020AWBAct"
  "vNotActive\020\000\022\021\n\rAWBActvActive\020\001\"9\n\nEbaav"
  "lType\022\026\n\022EBAAvlNotAvailable\020\000\022\023\n\017EBAAvla"
  "vailable\020\001\"n\n\016QdcaccfailType\022\025\n\021QDCACCFa"
  "ilNoError\020\000\022\023\n\017QDCACCFailError\020\001\022\027\n\023QDCA"
  "CCFailReserved2\020\002\022\027\n\023QDCACCFailReserved3"
  "\020\003\"6\n\013AbpactvType\022\024\n\020ABPActvNotActive\020\000\022"
  "\021\n\rABPActvActive\020\001\"<\n\013PedpavlType\022\027\n\023PED"
  "PAvlNotAvailable\020\000\022\024\n\020PEDPAvlavailable\020\001"
  "\"<\n\013CddsavlType\022\027\n\023CDDSAvlNotAvailable\020\000"
  "\022\024\n\020CDDSAvlavailable\020\001\"\257\002\n\021Standstillsts"
  "Type\022\030\n\024StandstillStsNonHold\020\000\022\031\n\025Stands"
  "tillStsSoftStop\020\001\022-\n)StandstillStsTempor"
  "aryHoldByServiceBrakes\020\002\022$\n StandstillSt"
  "sHoldByServiceBrakes\020\003\022%\n!StandstillStsT"
  "ransitionToANonHold\020\004\0221\n-StandstillStsPa"
  "rkedVehicleAutonomousParkBrake\020\005\022\032\n\026Stan"
  "dstillStsReserved6\020\006\022\032\n\026StandstillStsRes"
  "erved7\020\007\"\?\n\014HhcavailType\022\030\n\024HHCAvailNotA"
  "vailable\020\000\022\025\n\021HHCAvailavailable\020\001\"6\n\013Abs"
  "actvType\022\024\n\020ABSActvNotActive\020\000\022\021\n\rABSAct"
  "vActive\020\001\"9\n\014PedpactvType\022\025\n\021PEDPActvNot"
  "Active\020\000\022\022\n\016PEDPActvActive\020\001\"6\n\013EbaactvT"
  "ype\022\024\n\020EBAActvNotActive\020\000\022\021\n\rEBAActvActi"
  "ve\020\001\"6\n\013CdpactvType\022\024\n\020CDPActvNotActive\020"
  "\000\022\021\n\rCDPActvActive\020\001\"6\n\013EbdactvType\022\024\n\020E"
  "BDActvNotActive\020\000\022\021\n\rEBDActvActive\020\001\"6\n\013"
  "ScmactvType\022\024\n\020SCMActvNotActive\020\000\022\021\n\rSCM"
  "ActvActive\020\001\"6\n\013DtcactvType\022\024\n\020DTCActvNo"
  "tActive\020\000\022\021\n\rDTCActvActive\020\001\"6\n\013HrbactvT"
  "ype\022\024\n\020HRBActvNotActive\020\000\022\021\n\rHRBActvActi"
  "ve\020\001\"Z\n\020EcdttempoffsType\022\"\n\036ECDTTempOffs"
  "TemperatureNotHigh\020\000\022\"\n\036ECDTTempOffsTeme"
  "pratureTooHigh\020\001\"9\n\014CddsactvType\022\025\n\021CDDS"
  "ActvNotActive\020\000\022\022\n\016CDDSActvActive\020\001\"6\n\013H"
  "hcactvType\022\024\n\020HHCActvNotActive\020\000\022\021\n\rHHCA"
  "ctvActive\020\001\"\240\005\n\nPulsecnt65\022D\n\016whlplscntr"
  "rvld\030\001 \001(\0162,.apollo.canbus.Pulsecnt65.Wh"
  "lplscntrrvldType\022\023\n\013whlplscntrr\030\002 \001(\005\022D\n"
  "\016whlplscntrlvld\030\003 \001(\0162,.apollo.canbus.Pu"
  "lsecnt65.WhlplscntrlvldType\022\023\n\013whlplscnt"
  "rl\030\004 \001(\005\022D\n\016whlplscntfrvld\030\005 \001(\0162,.apoll"
  "o.canbus.Pulsecnt65.WhlplscntfrvldType\022\023"
  "\n\013whlplscntfr\030\006 \001(\005\022D\n\016whlplscntflvld\030\007 "
  "\001(\0162,.apollo.canbus.Pulsecnt65.Whlplscnt"
  "flvldType\022\023\n\013whlplscntfl\030\010 \001(\005\"H\n\022Whlpls"
  "cntrrvldType\022\027\n\023WhlplscntRRvldvalid\020\000\022\031\n"
  "\025WhlplscntRRvldinvalid\020\001\"H\n\022Whlplscntrlv"
  "ldType\022\027\n\023WhlplscntRLvldvalid\020\000\022\031\n\025Whlpl"
  "scntRLvldinvalid\020\001\"H\n\022WhlplscntfrvldType"
  "\022\027\n\023WhlplscntFRvldvalid\020\000\022\031\n\025WhlplscntFR"
  "vldinvalid\020\001\"H\n\022WhlplscntflvldType\022\027\n\023Wh"
  "lplscntFLvldvalid\020\000\022\031\n\025WhlplscntFLvldinv"
  "alid\020\001\"\342\t\n\010Aebreq79\022\023\n\013aebtardecel\030\001 \001(\001"
  "\0222\n\006abareq\030\002 \001(\0162\".apollo.canbus.Aebreq7"
  "9.AbareqType\022<\n\013abasnvtylvl\030\003 \001(\0162\'.apol"
  "lo.canbus.Aebreq79.AbasnvtylvlType\022<\n\013aw"
  "bsnvtylvl\030\004 \001(\0162\'.apollo.canbus.Aebreq79"
  ".AwbsnvtylvlType\0222\n\006awbreq\030\005 \001(\0162\".apoll"
  "o.canbus.Aebreq79.AwbreqType\022<\n\013scmdecel"
  "req\030\006 \001(\0162\'.apollo.canbus.Aebreq79.Scmde"
  "celreqType\022\022\n\naebmsgcntr\030\007 \001(\005\022<\n\013aebdec"
  "elreq\030\010 \001(\0162\'.apollo.canbus.Aebreq79.Aeb"
  "decelreqType\022<\n\013ebadecelreq\030\t \001(\0162\'.apol"
  "lo.canbus.Aebreq79.EbadecelreqType\0222\n\006ab"
  "preq\030\n \001(\0162\".apollo.canbus.Aebreq79.Abpr"
  "eqType\022:\n\npedpdecreq\030\013 \001(\0162&.apollo.canb"
  "us.Aebreq79.PedpdecreqType\022\016\n\006aebcrc\030\014 \001"
  "(\005\"4\n\nAbareqType\022\023\n\017ABAReqNoRequest\020\000\022\021\n"
  "\rABAReqRequest\020\001\"m\n\017AbasnvtylvlType\022\025\n\021A"
  "BASnvtyLvlLevel0\020\000\022\025\n\021ABASnvtyLvlLevel1\020"
  "\001\022\025\n\021ABASnvtyLvlLevel2\020\002\022\025\n\021ABASnvtyLvlL"
  "evel3\020\003\"m\n\017AwbsnvtylvlType\022\025\n\021AWBSnvtyLv"
  "lLevel0\020\000\022\025\n\021AWBSnvtyLvlLevel1\020\001\022\025\n\021AWBS"
  "nvtyLvlLevel2\020\002\022\025\n\021AWBSnvtyLvlLevel3\020\003\"4"
  "\n\nAwbreqType\022\023\n\017AWBReqNoRequest\020\000\022\021\n\rAWB"
  "ReqRequest\020\001\"C\n\017ScmdecelreqType\022\030\n\024SCMDe"
  "celReqNoRequest\020\000\022\026\n\022SCMDecelReqRequest\020"
  "\001\"C\n\017AebdecelreqType\022\030\n\024AEBDecelReqNoReq"
  "uest\020\000\022\026\n\022AEBDecelReqRequest\020\001\"C\n\017Ebadec"
  "elreqType\022\030\n\024EBADecelReqNoRequest\020\000\022\026\n\022E"
  "BADecelReqRequest\020\001\"4\n\nAbpreqType\022\023\n\017ABP"
  "ReqNoRequest\020\000\022\021\n\rABPReqRequest\020\001\"@\n\016Ped"
  "pdecreqType\022\027\n\023PEDPDecReqNoRequest\020\000\022\025\n\021"
  "PEDPDecReqRequest\020\001\"\255%\n\010Scmsts7b\022:\n\nscmf"
  "ailsts\030\001 \001(\0162&.apollo.canbus.Scmsts7b.Sc"
  "mfailstsType\022L\n\023hilowbeampushswtsts\030\002 \001("
  "\0162/.apollo.canbus.Scmsts7b.Hilowbeampush"
  "swtstsType\022B\n\016frntwiprswtsts\030\003 \001(\0162*.apo"
  "llo.canbus.Scmsts7b.FrntwiprswtstsType\022D"
  "\n\017turnindcrswtsts\030\004 \001(\0162+.apollo.canbus."
  "Scmsts7b.TurnindcrswtstsType\022D\n\017foglipus"
  "hswtsts\030\005 \001(\0162+.apollo.canbus.Scmsts7b.F"
  "oglipushswtstsType\022F\n\020frntwiprinterspd\030\006"
  " \001(\0162,.apollo.canbus.Scmsts7b.Frntwiprin"
  "terspdType\022R\n\026menuorvoldwnpushswtsts\030\007 \001"
  "(\01622.apollo.canbus.Scmsts7b.Menuorvoldwn"
  "pushswtstsType\022P\n\025accspdincorresuswtsts\030"
  "\010 \001(\01621.apollo.canbus.Scmsts7b.Accspdinc"
  "orresuswtstsType\022L\n\023acctimegapincswtsts\030"
  "\t \001(\0162/.apollo.canbus.Scmsts7b.Acctimega"
  "pincswtstsType\022B\n\016selnpushswtsts\030\n \001(\0162*"
  ".apollo.canbus.Scmsts7b.SelnpushswtstsTy"
  "pe\022F\n\020modetogdecswtsts\030\013 \001(\0162,.apollo.ca"
  "nbus.Scmsts7b.ModetogdecswtstsType\022F\n\020mo"
  "detogincswtsts\030\014 \001(\0162,.apollo.canbus.Scm"
  "sts7b.ModetogincswtstsType\022B\n\016menupushsw"
  "tsts\030\r \001(\0162*.apollo.canbus.Scmsts7b.Menu"
  "pushswtstsType\022:\n\nswcfailsts\030\016 \001(\0162&.apo"
  "llo.canbus.Scmsts7b.SwcfailstsType\022D\n\017ac"
  "cspddecswtsts\030\017 \001(\0162+.apollo.canbus.Scms"
  "ts7b.AccspddecswtstsType\022\016\n\006scmcrc\030\020 \001(\005"
  "\022F\n\020menulepushswtsts\030\021 \001(\0162,.apollo.canb"
  "us.Scmsts7b.MenulepushswtstsType\022P\n\025menu"
  "orvoluppushswtsts\030\022 \001(\01621.apollo.canbus."
  "Scmsts7b.MenuorvoluppushswtstsType\022\022\n\nsc"
  "mmsgcntr\030\023 \001(\005\022L\n\023acctimegapdecswtsts\030\024 "
  "\001(\0162/.apollo.canbus.Scmsts7b.Acctimegapd"
  "ecswtstsType\022F\n\020menuripushswtsts\030\025 \001(\0162,"
  ".apollo.canbus.Scmsts7b.Menuripushswtsts"
  "Type\022>\n\014accsetswtsts\030\026 \001(\0162(.apollo.canb"
  "us.Scmsts7b.AccsetswtstsType\"i\n\016Scmfails"
  "tsType\022\024\n\020SCMFailStsNormal\020\000\022\022\n\016SCMFailS"
  "tsFail\020\001\022\026\n\022SCMFailStsReserved\020\002\022\025\n\021SCMF"
  "ailStsInvalid\020\003\"\300\001\n\027HilowbeampushswtstsT"
  "ype\022/\n+HiLowBeamPushSwtStsNoCommandDefau"
  "ltPosition\020\000\022#\n\037HiLowBeamPushSwtStsFlash"
  "Command\020\001\022/\n+HiLowBeamPushSwtStsLowBeamO"
  "rHighBeamCommand\020\002\022\036\n\032HiLowBeamPushSwtSt"
  "sInvalid\020\003\"\257\002\n\022FrntwiprswtstsType\022\037\n\033Frn"
  "tWiprSwtStsFrontWiperOff\020\000\022$\n FrntWiprSw"
  "tStsFrontWiperLowSpeed\020\001\022%\n!FrntWiprSwtS"
  "tsFrontWiperHighSpeed\020\002\022-\n)FrntWiprSwtSt"
  "sFrontWiperIntermediateSpeed\020\003\022\'\n#FrntWi"
  "prSwtStsFrontWiperWipeOneTime\020\004\022\033\n\027FrntW"
  "iprSwtStsReserved5\020\005\022\033\n\027FrntWiprSwtStsRe"
  "served6\020\006\022\031\n\025FrntWiprSwtStsInvalid\020\007\"\242\001\n"
  "\023TurnindcrswtstsType\022\"\n\036TurnIndcrSwtStsN"
  "oTurnIndicator\020\000\022$\n TurnIndcrSwtStsTurnI"
  "ndicatorLeft\020\001\022%\n!TurnIndcrSwtStsTurnInd"
  "icatorRight\020\002\022\032\n\026TurnIndcrSwtStsInvalid\020"
  "\003\"\235\001\n\023FoglipushswtstsType\022\'\n#FogLiPushSw"
  "tStsPushSwitchNotPressed\020\000\022$\n FogLiPushS"
  "wtStsPushSwitchPressed\020\001\022\033\n\027FogLiPushSwt"
  "StsReserved\020\002\022\032\n\026FogLiPushSwtStsInvalid\020"
  "\003\"\257\002\n\024FrntwiprinterspdType\022\034\n\030FrntWiprIn"
  "terSpdReserved\020\000\022&\n\"FrntWiprInterSpdInte"
  "rmediateSpeed1\020\001\022&\n\"FrntWiprInterSpdInte"
  "rmediateSpeed2\020\002\022&\n\"FrntWiprInterSpdInte"
  "rmediateSpeed3\020\003\022&\n\"FrntWiprInterSpdInte"
  "rmediateSpeed4\020\004\022\035\n\031FrntWiprInterSpdRese"
  "rved5\020\005\022\035\n\031FrntWiprInterSpdReserved6\020\006\022\033"
  "\n\027FrntWiprInterSpdInvalid\020\007\"\254\001\n\032Menuorvo"
  "ldwnpushswtstsType\022$\n MenuOrVolDwnPushSw"
  "tStsNotPressed\020\000\022!\n\035MenuOrVolDwnPushSwtS"
  "tsPressed\020\001\022\"\n\036MenuOrVolDwnPushSwtStsRes"
  "erved\020\002\022!\n\035MenuOrVolDwnPushSwtStsInvalid"
  "\020\003\"\247\001\n\031AccspdincorresuswtstsType\022#\n\037AccS"
  "pdIncOrResuSwtStsNotPressed\020\000\022 \n\034AccSpdI"
  "ncOrResuSwtStsPressed\020\001\022!\n\035AccSpdIncOrRe"
  "suSwtStsReserved\020\002\022 \n\034AccSpdIncOrResuSwt"
  "StsInvalid\020\003\"\235\001\n\027AcctimegapincswtstsType"
  "\022!\n\035AccTimeGapIncSwtStsNotPressed\020\000\022\036\n\032A"
  "ccTimeGapIncSwtStsPressed\020\001\022\037\n\033AccTimeGa"
  "pIncSwtStsReserved\020\002\022\036\n\032AccTimeGapIncSwt"
  "StsInvalid\020\003\"\204\001\n\022SelnpushswtstsType\022\034\n\030S"
  "elnPushSwtStsNotPressed\020\000\022\031\n\025SelnPushSwt"
  "StsPressed\020\001\022\032\n\026SelnPushSwtStsReserved\020\002"
  "\022\031\n\025SelnPushSwtStsInvalid\020\003\"\216\001\n\024Modetogd"
  "ecswtstsType\022\036\n\032ModeTogDecSwtStsNotPress"
  "ed\020\000\022\033\n\027ModeTogDecSwtStsPressed\020\001\022\034\n\030Mod"
  "eTogDecSwtStsReserved\020\002\022\033\n\027ModeTogDecSwt"
  "StsInvalid\020\003\"\216\001\n\024ModetogincswtstsType\022\036\n"
  "\032ModeTogIncSwtStsNotPressed\020\000\022\033\n\027ModeTog"
  "IncSwtStsPressed\020\001\022\034\n\030ModeTogIncSwtStsRe"
  "served\020\002\022\033\n\027ModeTogIncSwtStsInvalid\020\003\"\204\001"
  "\n\022MenupushswtstsType\022\034\n\030MenuPushSwtStsNo"
  "tPressed\020\000\022\031\n\025MenuPushSwtStsPressed\020\001\022\032\n"
  "\026MenuPushSwtStsReserved\020\002\022\031\n\025MenuPushSwt"
  "StsInvalid\020\003\"i\n\016SwcfailstsType\022\024\n\020SWCFai"
  "lStsNormal\020\000\022\022\n\016SWCFailStsFail\020\001\022\026\n\022SWCF"
  "ailStsReserved\020\002\022\025\n\021SWCFailStsInvalid\020\003\""
  "\211\001\n\023AccspddecswtstsType\022\035\n\031AccSpdDecSwtS"
  "tsNotPressed\020\000\022\032\n\026AccSpdDecSwtStsPressed"
  "\020\001\022\033\n\027AccSpdDecSwtStsReserved\020\002\022\032\n\026AccSp"
  "dDecSwtStsInvalid\020\003\"\216\001\n\024Menulepushswtsts"
  "Type\022\036\n\032MenuLePushSwtStsNotPressed\020\000\022\033\n\027"
  "MenuLePushSwtStsPressed\020\001\022\034\n\030MenuLePushS"
  "wtStsReserved\020\002\022\033\n\027MenuLePushSwtStsInval"
  "id\020\003\"\247\001\n\031MenuorvoluppushswtstsType\022#\n\037Me"
  "nuOrVolUpPushSwtStsNotPressed\020\000\022 \n\034MenuO"
  "rVolUpPushSwtStsPressed\020\001\022!\n\035MenuOrVolUp"
  "PushSwtStsReserved\020\002\022 \n\034MenuOrVolUpPushS"
  "wtStsInvalid\020\003\"\235\001\n\027AcctimegapdecswtstsTy"
  "pe\022!\n\035AccTimeGapDecSwtStsNotPressed\020\000\022\036\n"
  "\032AccTimeGapDecSwtStsPressed\020\001\022\037\n\033AccTime"
  "GapDecSwtStsReserved\020\002\022\036\n\032AccTimeGapDecS"
  "wtStsInvalid\020\003\"\216\001\n\024MenuripushswtstsType\022"
  "\036\n\032MenuRiPushSwtStsNotPressed\020\000\022\033\n\027MenuR"
  "iPushSwtStsPressed\020\001\022\034\n\030MenuRiPushSwtSts"
  "Reserved\020\002\022\033\n\027MenuRiPushSwtStsInvalid\020\003\""
  "z\n\020AccsetswtstsType\022\032\n\026AccSetSwtStsNotPr"
  "essed\020\000\022\027\n\023AccSetSwtStsPressed\020\001\022\030\n\024AccS"
  "etSwtStsReserved\020\002\022\027\n\023AccSetSwtStsInvali"
  "d\020\003\"\322\007\n\010Accreq7f\0228\n\taccdrvoff\030\001 \001(\0162%.ap"
  "ollo.canbus.Accreq7f.AccdrvoffType\0228\n\tac"
  "cdestop\030\002 \001(\0162%.apollo.canbus.Accreq7f.A"
  "ccdestopType\022\022\n\naccmaxjerk\030\003 \001(\001\022\022\n\naccm"
  "injerk\030\004 \001(\001\0224\n\007accmode\030\005 \001(\0162#.apollo.c"
  "anbus.Accreq7f.AccmodeType\022\024\n\014acccomforl"
  "ow\030\006 \001(\001\022\023\n\013acccomforup\030\007 \001(\001\022<\n\013acchvyd"
  "ecel\030\010 \001(\0162\'.apollo.canbus.Accreq7f.Acch"
  "vydecelType\022>\n\014accheavymode\030\t \001(\0162(.apol"
  "lo.canbus.Accreq7f.AccheavymodeType\022\017\n\007a"
  "cctara\030\n \001(\001\022\022\n\naccmsgcntr\030\013 \001(\005\022\016\n\006accc"
  "rc\030\014 \001(\005\"=\n\rAccdrvoffType\022\026\n\022AccDrvoffNo"
  "Request\020\000\022\024\n\020AccDrvoffRequest\020\001\"=\n\rAccde"
  "stopType\022\026\n\022AccDeStopNoRequest\020\000\022\024\n\020AccD"
  "eStoprequest\020\001\"\325\001\n\013AccmodeType\022\022\n\016AccMod"
  "eOffMode\020\000\022\026\n\022AccModePassiveMode\020\001\022\026\n\022Ac"
  "cModeStandbyMode\020\002\022\034\n\030AccModeActiveContr"
  "olMode\020\003\022\030\n\024AccModeBrakeOnlyMode\020\004\022\027\n\023Ac"
  "cModeOverrideMode\020\005\022\031\n\025AccModeStandstill"
  "Mode\020\006\022\026\n\022AccModeFailureMode\020\007\"D\n\017Acchvy"
  "decelType\022\031\n\025AccHvydecelNotRequest\020\000\022\026\n\022"
  "AccHvydecelrequest\020\001\"z\n\020AccheavymodeType"
  "\022\030\n\024AccHeavymodeinactive\020\000\022\031\n\025AccHeavymo"
  "dereserved1\020\001\022\031\n\025AccHeavymodereserved2\020\002"
  "\022\026\n\022AccHeavymodeactive\020\003\"\212\003\n\014Motorsts028"
  "6\022\026\n\016motor02msgcntr\030\001 \001(\005\022\022\n\nmotor02crc\030"
  "\002 \001(\005\022F\n\016frntmottqvalid\030\003 \001(\0162..apollo.c"
  "anbus.Motorsts0286.FrntmottqvalidType\022\021\n"
  "\tfrntmottq\030\004 \001(\001\022H\n\017frntmotspdvalid\030\005 \001("
  "\0162/.apollo.canbus.Motorsts0286.Frntmotsp"
  "dvalidType\022\022\n\nfrntmotspd\030\006 \001(\005\"H\n\022Frntmo"
  "ttqvalidType\022\027\n\023FrntMotTqValidvalid\020\000\022\031\n"
  "\025FrntMotTqValidinvalid\020\001\"K\n\023Frntmotspdva"
  "lidType\022\030\n\024FrntMotSpdValidvalid\020\000\022\032\n\026Frn"
  "tMotSpdValidinvalid\020\001\"\212\003\n\014Motorsts018e\022\026"
  "\n\016motor01msgcntr\030\001 \001(\005\022\022\n\nmotor01crc\030\002 \001"
  "(\005\022F\n\016rearmottqvalid\030\003 \001(\0162..apollo.canb"
  "us.Motorsts018e.RearmottqvalidType\022\021\n\tre"
  "armottq\030\004 \001(\001\022H\n\017rearmotspdvalid\030\005 \001(\0162/"
  ".apollo.canbus.Motorsts018e.Rearmotspdva"
  "lidType\022\022\n\nrearmotspd\030\006 \001(\005\"H\n\022Rearmottq"
  "validType\022\027\n\023RearMotTqValidvalid\020\000\022\031\n\025Re"
  "arMotTqValidinvalid\020\001\"K\n\023Rearmotspdvalid"
  "Type\022\030\n\024RearMotSpdValidvalid\020\000\022\032\n\026RearMo"
  "tSpdValidinvalid\020\001\"\212\010\n\010Epsreqc6\022\021\n\tepspa"
  "ireq\030\001 \001(\001\022\021\n\tepsdaireq\030\002 \001(\001\022\021\n\tepstoir"
  "eq\030\003 \001(\001\0228\n\tepsreqtyp\030\004 \001(\0162%.apollo.can"
  "bus.Epsreqc6.EpsreqtypType\0226\n\010sysvalid\030\005"
  " \001(\0162$.apollo.canbus.Epsreqc6.SysvalidTy"
  "pe\0226\n\010pilotsym\030\006 \001(\0162$.apollo.canbus.Eps"
  "reqc6.PilotsymType\022\016\n\006epscrc\030\007 \001(\005\022\022\n\nep"
  "smsgcntr\030\010 \001(\005\0228\n\tadcaccsym\030\t \001(\0162%.apol"
  "lo.canbus.Epsreqc6.AdcaccsymType\"\245\003\n\rEps"
  "reqtypType\022\026\n\022EPSReqTypNoRequest\020\000\022\031\n\025EP"
  "SReqTypReserved1DSR\020\001\022\027\n\023EPSReqTypTOIReq"
  "uest\020\002\022\027\n\023EPSReqTypPAIRequest\020\003\022\027\n\023EPSRe"
  "qTypDAIRequest\020\004\022\027\n\023EPSReqTypHI1Request\020"
  "\005\022\027\n\023EPSReqTypHI2Request\020\006\022\026\n\022EPSReqTypR"
  "eserved7\020\007\022\026\n\022EPSReqTypReserved8\020\010\022\026\n\022EP"
  "SReqTypReserved9\020\t\022\027\n\023EPSReqTypReserved1"
  "0\020\n\022\027\n\023EPSReqTypReserved11\020\013\022\027\n\023EPSReqTy"
  "pReserved12\020\014\022\027\n\023EPSReqTypReserved13\020\r\022\027"
  "\n\023EPSReqTypReserved14\020\016\022\037\n\033EPSReqTypSign"
  "alNotAvailable\020\017\"6\n\014SysvalidType\022\023\n\017SysV"
  "alidInvalid\020\000\022\021\n\rSysValidValid\020\001\"k\n\014Pilo"
  "tsymType\022\024\n\020PilotSymNoSymbol\020\000\022\026\n\022PilotS"
  "ymGraySymbol\020\001\022\027\n\023PilotSymWhiteSymbol\020\002\022"
  "\024\n\020PilotSymreserved\020\003\"p\n\rAdcaccsymType\022\025"
  "\n\021AdcAccsymNoSymbol\020\000\022\027\n\023AdcAccsymGraySy"
  "mbol\020\001\022\030\n\024AdcAccsymWhiteSymbol\020\002\022\025\n\021AdcA"
  "ccsymreserved\020\003\"\242\n\n\rEpsstatus01d5\022A\n\013eps"
  "warnlamp\030\001 \001(\0162,.apollo.canbus.Epsstatus"
  "01d5.EpswarnlampType\022A\n\013absagreqavl\030\002 \001("
  "\0162,.apollo.canbus.Epsstatus01d5.Absagreq"
  "avlType\022\021\n\ttorsbartq\030\003 \001(\001\0227\n\006epssts\030\004 \001"
  "(\0162\'.apollo.canbus.Epsstatus01d5.EpsstsT"
  "ype\0227\n\006epsmod\030\005 \001(\0162\'.apollo.canbus.Epss"
  "tatus01d5.EpsmodType\022E\n\rsteeragspddir\030\006 "
  "\001(\0162..apollo.canbus.Epsstatus01d5.Steera"
  "gspddirType\022\022\n\nsteeragspd\030\007 \001(\001\022E\n\rsteer"
  "angledir\030\010 \001(\0162..apollo.canbus.Epsstatus"
  "01d5.SteerangledirType\022U\n\025steerangleands"
  "pdvalid\030\t \001(\01626.apollo.canbus.Epsstatus0"
  "1d5.SteerangleandspdvalidType\022\022\n\nsteeran"
  "gle\030\n \001(\001\022\023\n\013epsdmsgcntr\030\013 \001(\005\022\017\n\007epsdcr"
  "c\030\014 \001(\005\"n\n\017EpswarnlampType\022\022\n\016EPSwarnLam"
  "poff\020\000\022\021\n\rEPSwarnLampon\020\001\022\033\n\027EPSwarnLamp"
  "NotAvailable\020\002\022\027\n\023EPSwarnLampreserved\020\003\""
  "H\n\017AbsagreqavlType\022\033\n\027AbsAgreqavlNotAvai"
  "lable\020\000\022\030\n\024AbsAgreqavlavailable\020\001\"\301\001\n\nEp"
  "sstsType\022\016\n\nEPSstsinit\020\000\022\020\n\014EPSstsnormal"
  "\020\001\022 \n\034EPSstsDegradedDueToTempOrVol\020\002\022\030\n\024"
  "EPSstsTemporaryError\020\003\022\030\n\024EPSstsPermamem"
  "tError\020\004\022\023\n\017EPSstsreserved5\020\005\022\023\n\017EPSstsr"
  "eserved6\020\006\022\021\n\rEPSstsinvalid\020\007\"\\\n\nEpsmodT"
  "ype\022\016\n\nEPSModNone\020\000\022\r\n\tEPSModPAI\020\001\022\r\n\tEP"
  "SModDAI\020\002\022\r\n\tEPSModTOI\020\003\022\021\n\rEPSModinvali"
  "d\020\007\"K\n\021SteeragspddirType\022\031\n\025Steeragspddi"
  "rLeftPlus\020\000\022\033\n\027SteeragspddirRightMinus\020\001"
  "\"K\n\021SteerangledirType\022\031\n\025SteerAngledirLe"
  "ftPlus\020\000\022\033\n\027SteerAngledirRightMinus\020\001\"]\n"
  "\031SteerangleandspdvalidType\022\036\n\032SteerAngle"
  "andspdvalidvalid\020\000\022 \n\034SteerAngleandspdva"
  "lidinvalid\020\001\"\350\022\n\rEpsstatus02d6\022A\n\013epstqr"
  "eqavl\030\001 \001(\0162,.apollo.canbus.Epsstatus02d"
  "6.EpstqreqavlType\022O\n\022epspinionangreqavl\030"
  "\002 \001(\01623.apollo.canbus.Epsstatus02d6.Epsp"
  "inionangreqavlType\022\027\n\017epsestrackforce\030\003 "
  "\001(\001\022]\n\031epshandsoffdetnconfidence\030\004 \001(\0162:"
  ".apollo.canbus.Epsstatus02d6.Epshandsoff"
  "detnconfidenceType\022\024\n\014eps02msgcntr\030\005 \001(\005"
  "\022K\n\020epspinionagvalid\030\006 \001(\01621.apollo.canb"
  "us.Epsstatus02d6.EpspinionagvalidType\022O\n"
  "\022epsdrvoverridedetn\030\007 \001(\01623.apollo.canbu"
  "s.Epsstatus02d6.EpsdrvoverridedetnType\022\020"
  "\n\010eps02crc\030\010 \001(\005\022\022\n\nepsmotortq\030\t \001(\001\022I\n\017"
  "epsmotortqvalid\030\n \001(\01620.apollo.canbus.Ep"
  "sstatus02d6.EpsmotortqvalidType\022\023\n\013epspi"
  "nionag\030\013 \001(\001\022S\n\024epsestrackforcevalid\030\014 \001"
  "(\01625.apollo.canbus.Epsstatus02d6.Epsestr"
  "ackforcevalidType\"H\n\017EpstqreqavlType\022\033\n\027"
  "EpsTqreqavlNotAvailable\020\000\022\030\n\024EpsTqreqavl"
  "Available\020\001\"]\n\026EpspinionangreqavlType\022\"\n"
  "\036EpsPinionangreqavlNotAvailable\020\000\022\037\n\033Eps"
  "PinionangreqavlAvailable\020\001\"\374\006\n\035Epshandso"
  "ffdetnconfidenceType\022$\n EpsHandsoffdetnc"
  "onfidenceHandsOn\020\000\0225\n1EpsHandsoffdetncon"
  "fidenceHandsOffConfidenceLevel1\020\001\0225\n1Eps"
  "HandsoffdetnconfidenceHandsOffConfidence"
  "Level2\020\002\0225\n1EpsHandsoffdetnconfidenceHan"
  "dsOffConfidenceLevel3\020\003\0225\n1EpsHandsoffde"
  "tnconfidenceHandsOffConfidenceLevel4\020\004\0225"
  "\n1EpsHandsoffdetnconfidenceHandsOffConfi"
  "denceLevel5\020\005\0225\n1EpsHandsoffdetnconfiden"
  "ceHandsOffConfidenceLevel6\020\006\0225\n1EpsHands"
  "offdetnconfidenceHandsOffConfidenceLevel"
  "7\020\007\0225\n1EpsHandsoffdetnconfidenceHandsOff"
  "ConfidenceLevel8\020\010\0225\n1EpsHandsoffdetncon"
  "fidenceHandsOffConfidenceLevel9\020\t\0226\n2Eps"
  "HandsoffdetnconfidenceHandsOffConfidence"
  "Level10\020\n\0226\n2EpsHandsoffdetnconfidenceHa"
  "ndsOffConfidenceLevel11\020\013\0226\n2EpsHandsoff"
  "detnconfidenceHandsOffConfidenceLevel12\020"
  "\014\0226\n2EpsHandsoffdetnconfidenceHandsOffCo"
  "nfidenceLevel13\020\r\0226\n2EpsHandsoffdetnconf"
  "idenceHandsOffConfidenceLevel14\020\016\022.\n*Eps"
  "HandsoffdetnconfidenceSignalNotAvalible\020"
  "\017\"\224\001\n\024EpspinionagvalidType\022\031\n\025EpsPiniona"
  "gvalidValid\020\000\022\033\n\027EpsPinionagvalidInvalid"
  "\020\001\022&\n\"EpsPinionagvalidSignalNotAvailable"
  "\020\002\022\034\n\030EpsPinionagvalidReserved\020\003\"\277\001\n\026Eps"
  "drvoverridedetnType\022&\n\"EpsDrvoverridedet"
  "nOverrideDetected\020\000\022)\n%EpsDrvoverridedet"
  "nOverrideNotDetected\020\001\022(\n$EpsDrvoverride"
  "detnSignalNotAvailable\020\002\022(\n$EpsDrvoverri"
  "dedetnNoActiveADCRequest\020\003\"\217\001\n\023Epsmotort"
  "qvalidType\022\030\n\024EpsMotortqvalidValid\020\000\022\032\n\026"
  "EpsMotortqvalidInvalid\020\001\022%\n!EpsMotortqva"
  "lidSignalNotAvailable\020\002\022\033\n\027EpsMotortqval"
  "idReserved\020\003\"\250\001\n\030EpsestrackforcevalidTyp"
  "e\022\035\n\031EpsEstrackforcevalidValid\020\000\022\037\n\033EpsE"
  "strackforcevalidInvalid\020\001\022*\n&EpsEstrackf"
  "orcevalidSignalNotAvailable\020\002\022 \n\034EpsEstr"
  "ackforcevalidReserved\020\003\"\222\010\n\003Nio\022+\n\tAvpRe"
  "q15e\030\001 \001(\0132\030.apollo.canbus.Avpreq15e\022/\n\013"
  "Vcusts01218\030\002 \001(\0132\032.apollo.canbus.Vcusts"
  "01218\022/\n\013Vcusts0221c\030\003 \001(\0132\032.apollo.canb"
  "us.Vcusts0221c\0227\n\017Brkdrvstatus24c\030\004 \001(\0132"
  "\036.apollo.canbus.Brkdrvstatus24c\0223\n\rBodys"
  "tatus24d\030\005 \001(\0132\034.apollo.canbus.Bodystatu"
  "s24d\0227\n\017Driverstatus24e\030\006 \001(\0132\036.apollo.c"
  "anbus.Driverstatus24e\0229\n\020Vehiclelights2c"
  "7\030\007 \001(\0132\037.apollo.canbus.Vehiclelights2c7"
  "\022/\n\013LightReq336\030\010 \001(\0132\032.apollo.canbus.Li"
  "ghtreq336\022+\n\tAcmbody4a\030\t \001(\0132\030.apollo.ca"
  "nbus.Acmbody4a\0223\n\rWhlspdfront51\030\n \001(\0132\034."
  "apollo.canbus.Whlspdfront51\0221\n\014Whlspdrea"
  "r52\030\013 \001(\0132\033.apollo.canbus.Whlspdrear52\022)"
  "\n\010Bcusts5e\030\014 \001(\0132\027.apollo.canbus.Bcusts5"
  "e\022-\n\nPulsecnt65\030\r \001(\0132\031.apollo.canbus.Pu"
  "lsecnt65\022)\n\010Aebreq79\030\016 \001(\0132\027.apollo.canb"
  "us.Aebreq79\022)\n\010Scmsts7b\030\017 \001(\0132\027.apollo.c"
  "anbus.Scmsts7b\022)\n\010Accreq7f\030\020 \001(\0132\027.apoll"
  "o.canbus.Accreq7f\0221\n\014Motorsts0286\030\021 \001(\0132"
  "\033.apollo.canbus.Motorsts0286\0221\n\014Motorsts"
  "018e\030\022 \001(\0132\033.apollo.canbus.Motorsts018e\022"
  ")\n\010EpsReqC6\030\023 \001(\0132\027.apollo.canbus.Epsreq"
  "c6\0223\n\rEpsstatus01D5\030\024 \001(\0132\034.apollo.canbu"
  "s.Epsstatus01d5\0223\n\rEpsstatus02D6\030\025 \001(\0132\034"
  ".apollo.canbus.Epsstatus02d6"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_nio_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_nio_2eproto_sccs[22] = {
  &scc_info_Accreq7f_nio_2eproto.base,
  &scc_info_Acmbody4a_nio_2eproto.base,
  &scc_info_Aebreq79_nio_2eproto.base,
  &scc_info_Avpreq15e_nio_2eproto.base,
  &scc_info_Bcusts5e_nio_2eproto.base,
  &scc_info_Bodystatus24d_nio_2eproto.base,
  &scc_info_Brkdrvstatus24c_nio_2eproto.base,
  &scc_info_Driverstatus24e_nio_2eproto.base,
  &scc_info_Epsreqc6_nio_2eproto.base,
  &scc_info_Epsstatus01d5_nio_2eproto.base,
  &scc_info_Epsstatus02d6_nio_2eproto.base,
  &scc_info_Lightreq336_nio_2eproto.base,
  &scc_info_Motorsts018e_nio_2eproto.base,
  &scc_info_Motorsts0286_nio_2eproto.base,
  &scc_info_Nio_nio_2eproto.base,
  &scc_info_Pulsecnt65_nio_2eproto.base,
  &scc_info_Scmsts7b_nio_2eproto.base,
  &scc_info_Vcusts01218_nio_2eproto.base,
  &scc_info_Vcusts0221c_nio_2eproto.base,
  &scc_info_Vehiclelights2c7_nio_2eproto.base,
  &scc_info_Whlspdfront51_nio_2eproto.base,
  &scc_info_Whlspdrear52_nio_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_nio_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_nio_2eproto = {
  false, false, descriptor_table_protodef_nio_2eproto, "nio.proto", 34508,
  &descriptor_table_nio_2eproto_once, descriptor_table_nio_2eproto_sccs, descriptor_table_nio_2eproto_deps, 22, 0,
  schemas, file_default_instances, TableStruct_nio_2eproto::offsets,
  file_level_metadata_nio_2eproto, 22, file_level_enum_descriptors_nio_2eproto, file_level_service_descriptors_nio_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_nio_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_nio_2eproto)), true);
namespace apollo {
namespace canbus {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Avpreq15e_AvpapaparkmodType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[0];
}
bool Avpreq15e_AvpapaparkmodType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Avpreq15e_AvpapaparkmodType Avpreq15e::AvpApaparkmodoff;
constexpr Avpreq15e_AvpapaparkmodType Avpreq15e::AvpApaparkmodSapa;
constexpr Avpreq15e_AvpapaparkmodType Avpreq15e::AvpApaparkmodVpps;
constexpr Avpreq15e_AvpapaparkmodType Avpreq15e::AvpApaparkmodNBS;
constexpr Avpreq15e_AvpapaparkmodType Avpreq15e::AvpApaparkmodDescriptionForTheValue0x4;
constexpr Avpreq15e_AvpapaparkmodType Avpreq15e::AvpApaparkmodDescriptionForTheValue0x5;
constexpr Avpreq15e_AvpapaparkmodType Avpreq15e::AvpApaparkmodDescriptionForTheValue0x6;
constexpr Avpreq15e_AvpapaparkmodType Avpreq15e::AvpApaparkmodDescriptionForTheValue0x7;
constexpr Avpreq15e_AvpapaparkmodType Avpreq15e::AvpapaparkmodType_MIN;
constexpr Avpreq15e_AvpapaparkmodType Avpreq15e::AvpapaparkmodType_MAX;
constexpr int Avpreq15e::AvpapaparkmodType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Avpreq15e_AvpnbsstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[1];
}
bool Avpreq15e_AvpnbsstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Avpreq15e_AvpnbsstsType Avpreq15e::AvpNbsstsNBSOff;
constexpr Avpreq15e_AvpnbsstsType Avpreq15e::AvpNbsstsNBSInitial;
constexpr Avpreq15e_AvpnbsstsType Avpreq15e::AvpNbsstsNBSStandby;
constexpr Avpreq15e_AvpnbsstsType Avpreq15e::AvpNbsstsNBSMoving;
constexpr Avpreq15e_AvpnbsstsType Avpreq15e::AvpNbsstsNBSAbort;
constexpr Avpreq15e_AvpnbsstsType Avpreq15e::AvpNbsstsNBSFail;
constexpr Avpreq15e_AvpnbsstsType Avpreq15e::AvpNbsstsDescriptionForTheValue0x6;
constexpr Avpreq15e_AvpnbsstsType Avpreq15e::AvpNbsstsDescriptionForTheValue0x7;
constexpr Avpreq15e_AvpnbsstsType Avpreq15e::AvpnbsstsType_MIN;
constexpr Avpreq15e_AvpnbsstsType Avpreq15e::AvpnbsstsType_MAX;
constexpr int Avpreq15e::AvpnbsstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Avpreq15e_AvpadcvcunbsstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[2];
}
bool Avpreq15e_AvpadcvcunbsstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsNBSOFF;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsNBSIntial;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsNBSStandby;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsNBSMoving;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsNBSAbort;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsNBSFail;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsDescriptionForTheValue0x6;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsDescriptionForTheValue0x7;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsDescriptionForTheValue0x8;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsDescriptionForTheValue0x9;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsDescriptionForTheValue0xA;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsDescriptionForTheValue0xB;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsDescriptionForTheValue0xC;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsDescriptionForTheValue0xD;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsDescriptionForTheValue0xE;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpAdcvcunbsstsDescriptionForTheValue0xF;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpadcvcunbsstsType_MIN;
constexpr Avpreq15e_AvpadcvcunbsstsType Avpreq15e::AvpadcvcunbsstsType_MAX;
constexpr int Avpreq15e::AvpadcvcunbsstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Avpreq15e_AvpapastsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[3];
}
bool Avpreq15e_AvpapastsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsinitial;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsStandby;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsSearch;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsPreGuidence;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsGuidance;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsReserved;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsAbort;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsFault;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsPubRoad;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsOffMode;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsReserved10;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsReserved11;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsReserved12;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsReserved13;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsReserved14;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpApastsReserved15;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpapastsType_MIN;
constexpr Avpreq15e_AvpapastsType Avpreq15e::AvpapastsType_MAX;
constexpr int Avpreq15e::AvpapastsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Avpreq15e_AvpbrkmodstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[4];
}
bool Avpreq15e_AvpbrkmodstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Avpreq15e_AvpbrkmodstsType Avpreq15e::AvpBrkmodstsNoBrake;
constexpr Avpreq15e_AvpbrkmodstsType Avpreq15e::AvpBrkmodstsComfort;
constexpr Avpreq15e_AvpbrkmodstsType Avpreq15e::AvpBrkmodstsEmergency;
constexpr Avpreq15e_AvpbrkmodstsType Avpreq15e::AvpBrkmodstsReserved;
constexpr Avpreq15e_AvpbrkmodstsType Avpreq15e::AvpbrkmodstsType_MIN;
constexpr Avpreq15e_AvpbrkmodstsType Avpreq15e::AvpbrkmodstsType_MAX;
constexpr int Avpreq15e::AvpbrkmodstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Avpreq15e_AvptargearreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[5];
}
bool Avpreq15e_AvptargearreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Avpreq15e_AvptargearreqType Avpreq15e::AvpTargearreqNoGearRequest;
constexpr Avpreq15e_AvptargearreqType Avpreq15e::AvpTargearreqD;
constexpr Avpreq15e_AvptargearreqType Avpreq15e::AvpTargearreqR;
constexpr Avpreq15e_AvptargearreqType Avpreq15e::AvpTargearreqN;
constexpr Avpreq15e_AvptargearreqType Avpreq15e::AvpTargearreqP;
constexpr Avpreq15e_AvptargearreqType Avpreq15e::AvptargearreqType_MIN;
constexpr Avpreq15e_AvptargearreqType Avpreq15e::AvptargearreqType_MAX;
constexpr int Avpreq15e::AvptargearreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Avpreq15e_AvpcrtlmodeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[6];
}
bool Avpreq15e_AvpcrtlmodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Avpreq15e_AvpcrtlmodeType Avpreq15e::AvpCrtlmodeNo;
constexpr Avpreq15e_AvpcrtlmodeType Avpreq15e::AvpCrtlmodeDistCrtl;
constexpr Avpreq15e_AvpcrtlmodeType Avpreq15e::AvpCrtlmodeSpdCrtl;
constexpr Avpreq15e_AvpcrtlmodeType Avpreq15e::AvpCrtlmodeRes;
constexpr Avpreq15e_AvpcrtlmodeType Avpreq15e::AvpcrtlmodeType_MIN;
constexpr Avpreq15e_AvpcrtlmodeType Avpreq15e::AvpcrtlmodeType_MAX;
constexpr int Avpreq15e::AvpcrtlmodeType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcusts01218_VcunbsstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[7];
}
bool Vcusts01218_VcunbsstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vcusts01218_VcunbsstsType Vcusts01218::VCUNBSSTsNBSInitial;
constexpr Vcusts01218_VcunbsstsType Vcusts01218::VCUNBSSTsNBSStandby;
constexpr Vcusts01218_VcunbsstsType Vcusts01218::VCUNBSSTsNBSActive;
constexpr Vcusts01218_VcunbsstsType Vcusts01218::VCUNBSSTsNBSOverride;
constexpr Vcusts01218_VcunbsstsType Vcusts01218::VCUNBSSTsNBSInhibit;
constexpr Vcusts01218_VcunbsstsType Vcusts01218::VCUNBSSTsObstacleDetected;
constexpr Vcusts01218_VcunbsstsType Vcusts01218::VCUNBSSTsGearshiftAllowed;
constexpr Vcusts01218_VcunbsstsType Vcusts01218::VCUNBSSTsRes;
constexpr Vcusts01218_VcunbsstsType Vcusts01218::VcunbsstsType_MIN;
constexpr Vcusts01218_VcunbsstsType Vcusts01218::VcunbsstsType_MAX;
constexpr int Vcusts01218::VcunbsstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcusts01218_TaggearvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[8];
}
bool Vcusts01218_TaggearvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vcusts01218_TaggearvalidType Vcusts01218::TagGearvalidvalid;
constexpr Vcusts01218_TaggearvalidType Vcusts01218::TagGearvalidinvalid;
constexpr Vcusts01218_TaggearvalidType Vcusts01218::TaggearvalidType_MIN;
constexpr Vcusts01218_TaggearvalidType Vcusts01218::TaggearvalidType_MAX;
constexpr int Vcusts01218::TaggearvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcusts01218_ActualgearvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[9];
}
bool Vcusts01218_ActualgearvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vcusts01218_ActualgearvalidType Vcusts01218::ActualGearvalidvalid;
constexpr Vcusts01218_ActualgearvalidType Vcusts01218::ActualGearvalidinvalid;
constexpr Vcusts01218_ActualgearvalidType Vcusts01218::ActualgearvalidType_MIN;
constexpr Vcusts01218_ActualgearvalidType Vcusts01218::ActualgearvalidType_MAX;
constexpr int Vcusts01218::ActualgearvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcusts01218_ActualgearType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[10];
}
bool Vcusts01218_ActualgearType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vcusts01218_ActualgearType Vcusts01218::ActualGearnone;
constexpr Vcusts01218_ActualgearType Vcusts01218::ActualGearD;
constexpr Vcusts01218_ActualgearType Vcusts01218::ActualGearR;
constexpr Vcusts01218_ActualgearType Vcusts01218::ActualGearN;
constexpr Vcusts01218_ActualgearType Vcusts01218::ActualGearP;
constexpr Vcusts01218_ActualgearType Vcusts01218::ActualgearType_MIN;
constexpr Vcusts01218_ActualgearType Vcusts01218::ActualgearType_MAX;
constexpr int Vcusts01218::ActualgearType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcusts01218_VcuepfailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[11];
}
bool Vcusts01218_VcuepfailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vcusts01218_VcuepfailType Vcusts01218::VcuEpfailInit;
constexpr Vcusts01218_VcuepfailType Vcusts01218::VcuEpfailNormal;
constexpr Vcusts01218_VcuepfailType Vcusts01218::VcuEpfailFault;
constexpr Vcusts01218_VcuepfailType Vcusts01218::VcuepfailType_MIN;
constexpr Vcusts01218_VcuepfailType Vcusts01218::VcuepfailType_MAX;
constexpr int Vcusts01218::VcuepfailType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcusts01218_VcumodindType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[12];
}
bool Vcusts01218_VcumodindType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vcusts01218_VcumodindType Vcusts01218::VCUmodindAuto;
constexpr Vcusts01218_VcumodindType Vcusts01218::VCUmodindEconomy;
constexpr Vcusts01218_VcumodindType Vcusts01218::VCUmodindComfort;
constexpr Vcusts01218_VcumodindType Vcusts01218::VCUmodindSport;
constexpr Vcusts01218_VcumodindType Vcusts01218::VCUmodindReserved4;
constexpr Vcusts01218_VcumodindType Vcusts01218::VCUmodindReserved5;
constexpr Vcusts01218_VcumodindType Vcusts01218::VCUmodindReserved6;
constexpr Vcusts01218_VcumodindType Vcusts01218::VCUmodindInvalid;
constexpr Vcusts01218_VcumodindType Vcusts01218::VcumodindType_MIN;
constexpr Vcusts01218_VcumodindType Vcusts01218::VcumodindType_MAX;
constexpr int Vcusts01218::VcumodindType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcusts0221c_AccpedelftravelvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[13];
}
bool Vcusts0221c_AccpedelftravelvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vcusts0221c_AccpedelftravelvalidType Vcusts0221c::Accpedelftravelvalidvalid;
constexpr Vcusts0221c_AccpedelftravelvalidType Vcusts0221c::Accpedelftravelvalidinvalid;
constexpr Vcusts0221c_AccpedelftravelvalidType Vcusts0221c::AccpedelftravelvalidType_MIN;
constexpr Vcusts0221c_AccpedelftravelvalidType Vcusts0221c::AccpedelftravelvalidType_MAX;
constexpr int Vcusts0221c::AccpedelftravelvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vcusts0221c_AccpedacttravelvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[14];
}
bool Vcusts0221c_AccpedacttravelvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vcusts0221c_AccpedacttravelvalidType Vcusts0221c::Accpedacttravelvalidvalid;
constexpr Vcusts0221c_AccpedacttravelvalidType Vcusts0221c::Accpedacttravelvalidinvalid;
constexpr Vcusts0221c_AccpedacttravelvalidType Vcusts0221c::AccpedacttravelvalidType_MIN;
constexpr Vcusts0221c_AccpedacttravelvalidType Vcusts0221c::AccpedacttravelvalidType_MAX;
constexpr int Vcusts0221c::AccpedacttravelvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brkdrvstatus24c_BrkpressurestsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[15];
}
bool Brkdrvstatus24c_BrkpressurestsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Brkdrvstatus24c_BrkpressurestsType Brkdrvstatus24c::BrkpressureStsNotInit;
constexpr Brkdrvstatus24c_BrkpressurestsType Brkdrvstatus24c::BrkpressureStsnormal;
constexpr Brkdrvstatus24c_BrkpressurestsType Brkdrvstatus24c::BrkpressureStsfault;
constexpr Brkdrvstatus24c_BrkpressurestsType Brkdrvstatus24c::BrkpressurestsType_MIN;
constexpr Brkdrvstatus24c_BrkpressurestsType Brkdrvstatus24c::BrkpressurestsType_MAX;
constexpr int Brkdrvstatus24c::BrkpressurestsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brkdrvstatus24c_VehspdstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[16];
}
bool Brkdrvstatus24c_VehspdstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Brkdrvstatus24c_VehspdstsType Brkdrvstatus24c::Vehspdstsvalid;
constexpr Brkdrvstatus24c_VehspdstsType Brkdrvstatus24c::Vehspdstsinvalid;
constexpr Brkdrvstatus24c_VehspdstsType Brkdrvstatus24c::VehspdstsType_MIN;
constexpr Brkdrvstatus24c_VehspdstsType Brkdrvstatus24c::VehspdstsType_MAX;
constexpr int Brkdrvstatus24c::VehspdstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brkdrvstatus24c_VehspddirType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[17];
}
bool Brkdrvstatus24c_VehspddirType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Brkdrvstatus24c_VehspddirType Brkdrvstatus24c::Vehspddirstandstill;
constexpr Brkdrvstatus24c_VehspddirType Brkdrvstatus24c::Vehspddirforward;
constexpr Brkdrvstatus24c_VehspddirType Brkdrvstatus24c::Vehspddirbackward;
constexpr Brkdrvstatus24c_VehspddirType Brkdrvstatus24c::Vehspddirreserved;
constexpr Brkdrvstatus24c_VehspddirType Brkdrvstatus24c::VehspddirType_MIN;
constexpr Brkdrvstatus24c_VehspddirType Brkdrvstatus24c::VehspddirType_MAX;
constexpr int Brkdrvstatus24c::VehspddirType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brkdrvstatus24c_EpbswstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[18];
}
bool Brkdrvstatus24c_EpbswstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Brkdrvstatus24c_EpbswstsType Brkdrvstatus24c::EPBswstsNotPressed;
constexpr Brkdrvstatus24c_EpbswstsType Brkdrvstatus24c::EPBswstspressed;
constexpr Brkdrvstatus24c_EpbswstsType Brkdrvstatus24c::EPBswstsreserved;
constexpr Brkdrvstatus24c_EpbswstsType Brkdrvstatus24c::EPBswstsinvalid;
constexpr Brkdrvstatus24c_EpbswstsType Brkdrvstatus24c::EpbswstsType_MIN;
constexpr Brkdrvstatus24c_EpbswstsType Brkdrvstatus24c::EpbswstsType_MAX;
constexpr int Brkdrvstatus24c::EpbswstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brkdrvstatus24c_DrvstateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[19];
}
bool Brkdrvstatus24c_DrvstateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Brkdrvstatus24c_DrvstateType Brkdrvstatus24c::DrvStateParked;
constexpr Brkdrvstatus24c_DrvstateType Brkdrvstatus24c::DrvStateReadyForDrving;
constexpr Brkdrvstatus24c_DrvstateType Brkdrvstatus24c::DrvStatedriving;
constexpr Brkdrvstatus24c_DrvstateType Brkdrvstatus24c::DrvStateinvalid;
constexpr Brkdrvstatus24c_DrvstateType Brkdrvstatus24c::DrvStateInvalidOtherValuesReserved;
constexpr Brkdrvstatus24c_DrvstateType Brkdrvstatus24c::DrvstateType_MIN;
constexpr Brkdrvstatus24c_DrvstateType Brkdrvstatus24c::DrvstateType_MAX;
constexpr int Brkdrvstatus24c::DrvstateType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brkdrvstatus24c_BrkpedlstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[20];
}
bool Brkdrvstatus24c_BrkpedlstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Brkdrvstatus24c_BrkpedlstsType Brkdrvstatus24c::BrkPedlStsNotPressed;
constexpr Brkdrvstatus24c_BrkpedlstsType Brkdrvstatus24c::BrkPedlStspressed;
constexpr Brkdrvstatus24c_BrkpedlstsType Brkdrvstatus24c::BrkPedlStsreserved;
constexpr Brkdrvstatus24c_BrkpedlstsType Brkdrvstatus24c::BrkPedlStsinvalid;
constexpr Brkdrvstatus24c_BrkpedlstsType Brkdrvstatus24c::BrkpedlstsType_MIN;
constexpr Brkdrvstatus24c_BrkpedlstsType Brkdrvstatus24c::BrkpedlstsType_MAX;
constexpr int Brkdrvstatus24c::BrkpedlstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brkdrvstatus24c_BrklistsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[21];
}
bool Brkdrvstatus24c_BrklistsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Brkdrvstatus24c_BrklistsType Brkdrvstatus24c::BrkListsNoRequest;
constexpr Brkdrvstatus24c_BrklistsType Brkdrvstatus24c::BrkListsrequest;
constexpr Brkdrvstatus24c_BrklistsType Brkdrvstatus24c::BrkListsreserved;
constexpr Brkdrvstatus24c_BrklistsType Brkdrvstatus24c::BrkListsinvalid;
constexpr Brkdrvstatus24c_BrklistsType Brkdrvstatus24c::BrklistsType_MIN;
constexpr Brkdrvstatus24c_BrklistsType Brkdrvstatus24c::BrklistsType_MAX;
constexpr int Brkdrvstatus24c::BrklistsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brkdrvstatus24c_EpbfaillampType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[22];
}
bool Brkdrvstatus24c_EpbfaillampType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Brkdrvstatus24c_EpbfaillampType Brkdrvstatus24c::EPBfaillampoff;
constexpr Brkdrvstatus24c_EpbfaillampType Brkdrvstatus24c::EPBfaillampon;
constexpr Brkdrvstatus24c_EpbfaillampType Brkdrvstatus24c::EPBfaillampblinking;
constexpr Brkdrvstatus24c_EpbfaillampType Brkdrvstatus24c::EPBfaillampinvalid;
constexpr Brkdrvstatus24c_EpbfaillampType Brkdrvstatus24c::EpbfaillampType_MIN;
constexpr Brkdrvstatus24c_EpbfaillampType Brkdrvstatus24c::EpbfaillampType_MAX;
constexpr int Brkdrvstatus24c::EpbfaillampType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Brkdrvstatus24c_EpbwarnlampType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[23];
}
bool Brkdrvstatus24c_EpbwarnlampType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Brkdrvstatus24c_EpbwarnlampType Brkdrvstatus24c::EPBwarnlampOnlyReadyDuringFunction;
constexpr Brkdrvstatus24c_EpbwarnlampType Brkdrvstatus24c::EPBwarnlampDoorOpenDuringAuto;
constexpr Brkdrvstatus24c_EpbwarnlampType Brkdrvstatus24c::EPBwarnlampSeatBeltUnbuckled;
constexpr Brkdrvstatus24c_EpbwarnlampType Brkdrvstatus24c::EPBwarnlampDoorOpenAndBeltUnbuckled;
constexpr Brkdrvstatus24c_EpbwarnlampType Brkdrvstatus24c::EpbwarnlampType_MIN;
constexpr Brkdrvstatus24c_EpbwarnlampType Brkdrvstatus24c::EpbwarnlampType_MAX;
constexpr int Brkdrvstatus24c::EpbwarnlampType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bodystatus24d_DoorajarfrntlestsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[24];
}
bool Bodystatus24d_DoorajarfrntlestsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bodystatus24d_DoorajarfrntlestsType Bodystatus24d::DoorAjarFrntLeStsOpened;
constexpr Bodystatus24d_DoorajarfrntlestsType Bodystatus24d::DoorAjarFrntLeStsClosed;
constexpr Bodystatus24d_DoorajarfrntlestsType Bodystatus24d::DoorAjarFrntLeStsReserved;
constexpr Bodystatus24d_DoorajarfrntlestsType Bodystatus24d::DoorAjarFrntLeStsInvalid;
constexpr Bodystatus24d_DoorajarfrntlestsType Bodystatus24d::DoorajarfrntlestsType_MIN;
constexpr Bodystatus24d_DoorajarfrntlestsType Bodystatus24d::DoorajarfrntlestsType_MAX;
constexpr int Bodystatus24d::DoorajarfrntlestsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bodystatus24d_DoorajarfrntristsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[25];
}
bool Bodystatus24d_DoorajarfrntristsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bodystatus24d_DoorajarfrntristsType Bodystatus24d::DoorAjarFrntRiStsOpened;
constexpr Bodystatus24d_DoorajarfrntristsType Bodystatus24d::DoorAjarFrntRiStsClosed;
constexpr Bodystatus24d_DoorajarfrntristsType Bodystatus24d::DoorAjarFrntRiStsReserved;
constexpr Bodystatus24d_DoorajarfrntristsType Bodystatus24d::DoorAjarFrntRiStsInvalid;
constexpr Bodystatus24d_DoorajarfrntristsType Bodystatus24d::DoorajarfrntristsType_MIN;
constexpr Bodystatus24d_DoorajarfrntristsType Bodystatus24d::DoorajarfrntristsType_MAX;
constexpr int Bodystatus24d::DoorajarfrntristsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bodystatus24d_DoorajarrelestsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[26];
}
bool Bodystatus24d_DoorajarrelestsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bodystatus24d_DoorajarrelestsType Bodystatus24d::DoorAjarReLeStsOpened;
constexpr Bodystatus24d_DoorajarrelestsType Bodystatus24d::DoorAjarReLeStsClosed;
constexpr Bodystatus24d_DoorajarrelestsType Bodystatus24d::DoorAjarReLeStsReserved;
constexpr Bodystatus24d_DoorajarrelestsType Bodystatus24d::DoorAjarReLeStsInvalid;
constexpr Bodystatus24d_DoorajarrelestsType Bodystatus24d::DoorajarrelestsType_MIN;
constexpr Bodystatus24d_DoorajarrelestsType Bodystatus24d::DoorajarrelestsType_MAX;
constexpr int Bodystatus24d::DoorajarrelestsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bodystatus24d_SeatoccpfrntlefailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[27];
}
bool Bodystatus24d_SeatoccpfrntlefailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bodystatus24d_SeatoccpfrntlefailType Bodystatus24d::SeatOccpFrntLeFailNoFailure;
constexpr Bodystatus24d_SeatoccpfrntlefailType Bodystatus24d::SeatOccpFrntLeFailFailure;
constexpr Bodystatus24d_SeatoccpfrntlefailType Bodystatus24d::SeatOccpFrntLeFailReserved;
constexpr Bodystatus24d_SeatoccpfrntlefailType Bodystatus24d::SeatOccpFrntLeFailInvalid;
constexpr Bodystatus24d_SeatoccpfrntlefailType Bodystatus24d::SeatoccpfrntlefailType_MIN;
constexpr Bodystatus24d_SeatoccpfrntlefailType Bodystatus24d::SeatoccpfrntlefailType_MAX;
constexpr int Bodystatus24d::SeatoccpfrntlefailType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bodystatus24d_SteerwhlheatstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[28];
}
bool Bodystatus24d_SteerwhlheatstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bodystatus24d_SteerwhlheatstsType Bodystatus24d::SteerWhlHeatStsHeaterOff;
constexpr Bodystatus24d_SteerwhlheatstsType Bodystatus24d::SteerWhlHeatStsHeaterOn;
constexpr Bodystatus24d_SteerwhlheatstsType Bodystatus24d::SteerWhlHeatStsReserved;
constexpr Bodystatus24d_SteerwhlheatstsType Bodystatus24d::SteerWhlHeatStsInvalid;
constexpr Bodystatus24d_SteerwhlheatstsType Bodystatus24d::SteerwhlheatstsType_MIN;
constexpr Bodystatus24d_SteerwhlheatstsType Bodystatus24d::SteerwhlheatstsType_MAX;
constexpr int Bodystatus24d::SteerwhlheatstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bodystatus24d_TrajarstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[29];
}
bool Bodystatus24d_TrajarstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bodystatus24d_TrajarstsType Bodystatus24d::TrAjarStsOpened;
constexpr Bodystatus24d_TrajarstsType Bodystatus24d::TrAjarStsClosed;
constexpr Bodystatus24d_TrajarstsType Bodystatus24d::TrAjarStsReserved;
constexpr Bodystatus24d_TrajarstsType Bodystatus24d::TrAjarStsInvalid;
constexpr Bodystatus24d_TrajarstsType Bodystatus24d::TrajarstsType_MIN;
constexpr Bodystatus24d_TrajarstsType Bodystatus24d::TrajarstsType_MAX;
constexpr int Bodystatus24d::TrajarstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bodystatus24d_HoodajarstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[30];
}
bool Bodystatus24d_HoodajarstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bodystatus24d_HoodajarstsType Bodystatus24d::HoodAjarStsOpened;
constexpr Bodystatus24d_HoodajarstsType Bodystatus24d::HoodAjarStsClosed;
constexpr Bodystatus24d_HoodajarstsType Bodystatus24d::HoodAjarStsReserved;
constexpr Bodystatus24d_HoodajarstsType Bodystatus24d::HoodAjarStsInvalid;
constexpr Bodystatus24d_HoodajarstsType Bodystatus24d::HoodajarstsType_MIN;
constexpr Bodystatus24d_HoodajarstsType Bodystatus24d::HoodajarstsType_MAX;
constexpr int Bodystatus24d::HoodajarstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bodystatus24d_DoorajarreristsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[31];
}
bool Bodystatus24d_DoorajarreristsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bodystatus24d_DoorajarreristsType Bodystatus24d::DoorAjarReRiStsOpened;
constexpr Bodystatus24d_DoorajarreristsType Bodystatus24d::DoorAjarReRiStsClosed;
constexpr Bodystatus24d_DoorajarreristsType Bodystatus24d::DoorAjarReRiStsReserved;
constexpr Bodystatus24d_DoorajarreristsType Bodystatus24d::DoorAjarReRiStsInvalid;
constexpr Bodystatus24d_DoorajarreristsType Bodystatus24d::DoorajarreristsType_MIN;
constexpr Bodystatus24d_DoorajarreristsType Bodystatus24d::DoorajarreristsType_MAX;
constexpr int Bodystatus24d::DoorajarreristsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bodystatus24d_SeatoccpfrntlestsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[32];
}
bool Bodystatus24d_SeatoccpfrntlestsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bodystatus24d_SeatoccpfrntlestsType Bodystatus24d::SeatOccpFrntLeStsNoOccupant;
constexpr Bodystatus24d_SeatoccpfrntlestsType Bodystatus24d::SeatOccpFrntLeStsOccupant;
constexpr Bodystatus24d_SeatoccpfrntlestsType Bodystatus24d::SeatOccpFrntLeStsReserved;
constexpr Bodystatus24d_SeatoccpfrntlestsType Bodystatus24d::SeatOccpFrntLeStsInvalid;
constexpr Bodystatus24d_SeatoccpfrntlestsType Bodystatus24d::SeatoccpfrntlestsType_MIN;
constexpr Bodystatus24d_SeatoccpfrntlestsType Bodystatus24d::SeatoccpfrntlestsType_MAX;
constexpr int Bodystatus24d::SeatoccpfrntlestsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bodystatus24d_CooltlvllowwarnreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[33];
}
bool Bodystatus24d_CooltlvllowwarnreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bodystatus24d_CooltlvllowwarnreqType Bodystatus24d::CooltLvlLowWarnReqNoRequest;
constexpr Bodystatus24d_CooltlvllowwarnreqType Bodystatus24d::CooltLvlLowWarnReqRequest;
constexpr Bodystatus24d_CooltlvllowwarnreqType Bodystatus24d::CooltLvlLowWarnReqReserved;
constexpr Bodystatus24d_CooltlvllowwarnreqType Bodystatus24d::CooltLvlLowWarnReqInvalid;
constexpr Bodystatus24d_CooltlvllowwarnreqType Bodystatus24d::CooltlvllowwarnreqType_MIN;
constexpr Bodystatus24d_CooltlvllowwarnreqType Bodystatus24d::CooltlvllowwarnreqType_MAX;
constexpr int Bodystatus24d::CooltlvllowwarnreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_EpbstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[34];
}
bool Driverstatus24e_EpbstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_EpbstsType Driverstatus24e::EPBstsunknow;
constexpr Driverstatus24e_EpbstsType Driverstatus24e::EPBstsapplied;
constexpr Driverstatus24e_EpbstsType Driverstatus24e::EPBstsreleasing;
constexpr Driverstatus24e_EpbstsType Driverstatus24e::EPBstsNotApplied;
constexpr Driverstatus24e_EpbstsType Driverstatus24e::EPBstsapplying;
constexpr Driverstatus24e_EpbstsType Driverstatus24e::EPBstsreserved4;
constexpr Driverstatus24e_EpbstsType Driverstatus24e::EPBstsreserved6;
constexpr Driverstatus24e_EpbstsType Driverstatus24e::EPBstsreserved7;
constexpr Driverstatus24e_EpbstsType Driverstatus24e::EpbstsType_MIN;
constexpr Driverstatus24e_EpbstsType Driverstatus24e::EpbstsType_MAX;
constexpr int Driverstatus24e::EpbstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_VcuaccrpedlovrdType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[35];
}
bool Driverstatus24e_VcuaccrpedlovrdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_VcuaccrpedlovrdType Driverstatus24e::VCUAccrPedlOvrdNoRequest;
constexpr Driverstatus24e_VcuaccrpedlovrdType Driverstatus24e::VCUAccrPedlOvrdrequest;
constexpr Driverstatus24e_VcuaccrpedlovrdType Driverstatus24e::VcuaccrpedlovrdType_MIN;
constexpr Driverstatus24e_VcuaccrpedlovrdType Driverstatus24e::VcuaccrpedlovrdType_MAX;
constexpr int Driverstatus24e::VcuaccrpedlovrdType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_Ibesp2warningType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[36];
}
bool Driverstatus24e_Ibesp2warningType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_Ibesp2warningType Driverstatus24e::Ibesp2WarningIBoosterSystemOK;
constexpr Driverstatus24e_Ibesp2warningType Driverstatus24e::Ibesp2WarningIBoosterInReducedPerformanceYellowLamp;
constexpr Driverstatus24e_Ibesp2warningType Driverstatus24e::Ibesp2WarningIBoosterDeactivatedYellowLamp;
constexpr Driverstatus24e_Ibesp2warningType Driverstatus24e::Ibesp2WarningIBoosterInDiagnosisOrPlantMode;
constexpr Driverstatus24e_Ibesp2warningType Driverstatus24e::Ibesp2warningType_MIN;
constexpr Driverstatus24e_Ibesp2warningType Driverstatus24e::Ibesp2warningType_MAX;
constexpr int Driverstatus24e::Ibesp2warningType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_AirbwarnreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[37];
}
bool Driverstatus24e_AirbwarnreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_AirbwarnreqType Driverstatus24e::AirbWarnReqWarningLampOff;
constexpr Driverstatus24e_AirbwarnreqType Driverstatus24e::AirbWarnReqWarningLampOnFaultDetected;
constexpr Driverstatus24e_AirbwarnreqType Driverstatus24e::AirbWarnReqWarningLampIsBlinking;
constexpr Driverstatus24e_AirbwarnreqType Driverstatus24e::AirbWarnReqWarningLampOnSystemInitialization;
constexpr Driverstatus24e_AirbwarnreqType Driverstatus24e::AirbwarnreqType_MIN;
constexpr Driverstatus24e_AirbwarnreqType Driverstatus24e::AirbwarnreqType_MAX;
constexpr int Driverstatus24e::AirbwarnreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_SeatbltmidrowristsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[38];
}
bool Driverstatus24e_SeatbltmidrowristsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_SeatbltmidrowristsType Driverstatus24e::SeatBltMidRowRiStsSeabeltMiddleRowRightNotBuckled;
constexpr Driverstatus24e_SeatbltmidrowristsType Driverstatus24e::SeatBltMidRowRiStsSeatbeltMiddleRowRightBuckled;
constexpr Driverstatus24e_SeatbltmidrowristsType Driverstatus24e::SeatbltmidrowristsType_MIN;
constexpr Driverstatus24e_SeatbltmidrowristsType Driverstatus24e::SeatbltmidrowristsType_MAX;
constexpr int Driverstatus24e::SeatbltmidrowristsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_SeatbltmidrowmidstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[39];
}
bool Driverstatus24e_SeatbltmidrowmidstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_SeatbltmidrowmidstsType Driverstatus24e::SeatBltMidRowMidStsSeabeltMiddleRowMiddleNotBuckled;
constexpr Driverstatus24e_SeatbltmidrowmidstsType Driverstatus24e::SeatBltMidRowMidStsSeatbeltMiddleRowMiddleBuckled;
constexpr Driverstatus24e_SeatbltmidrowmidstsType Driverstatus24e::SeatbltmidrowmidstsType_MIN;
constexpr Driverstatus24e_SeatbltmidrowmidstsType Driverstatus24e::SeatbltmidrowmidstsType_MAX;
constexpr int Driverstatus24e::SeatbltmidrowmidstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_SeatbltfrntlestsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[40];
}
bool Driverstatus24e_SeatbltfrntlestsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_SeatbltfrntlestsType Driverstatus24e::SeatBltFrntLeStsSeabeltFrontLeftNotBuckled;
constexpr Driverstatus24e_SeatbltfrntlestsType Driverstatus24e::SeatBltFrntLeStsSeatbeltFrontLeftBuckled;
constexpr Driverstatus24e_SeatbltfrntlestsType Driverstatus24e::SeatbltfrntlestsType_MIN;
constexpr Driverstatus24e_SeatbltfrntlestsType Driverstatus24e::SeatbltfrntlestsType_MAX;
constexpr int Driverstatus24e::SeatbltfrntlestsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_PassairbginhbnlampreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[41];
}
bool Driverstatus24e_PassairbginhbnlampreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_PassairbginhbnlampreqType Driverstatus24e::PassAirbgInhbnLampReqPassengerAirbagInhibitionLampOff;
constexpr Driverstatus24e_PassairbginhbnlampreqType Driverstatus24e::PassAirbgInhbnLampReqPassengerAirbagInhibitionLampOn;
constexpr Driverstatus24e_PassairbginhbnlampreqType Driverstatus24e::PassAirbgInhbnLampReqPassengerAirbagInhibitionLampOnSystemInitialization;
constexpr Driverstatus24e_PassairbginhbnlampreqType Driverstatus24e::PassAirbgInhbnLampReqReserved;
constexpr Driverstatus24e_PassairbginhbnlampreqType Driverstatus24e::PassairbginhbnlampreqType_MIN;
constexpr Driverstatus24e_PassairbginhbnlampreqType Driverstatus24e::PassairbginhbnlampreqType_MAX;
constexpr int Driverstatus24e::PassairbginhbnlampreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_SeatoccptfrntristsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[42];
}
bool Driverstatus24e_SeatoccptfrntristsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_SeatoccptfrntristsType Driverstatus24e::SeatOccptFrntRiStsNoOccupant;
constexpr Driverstatus24e_SeatoccptfrntristsType Driverstatus24e::SeatOccptFrntRiStsOccupant;
constexpr Driverstatus24e_SeatoccptfrntristsType Driverstatus24e::SeatoccptfrntristsType_MIN;
constexpr Driverstatus24e_SeatoccptfrntristsType Driverstatus24e::SeatoccptfrntristsType_MAX;
constexpr int Driverstatus24e::SeatoccptfrntristsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_CrashdetdType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[43];
}
bool Driverstatus24e_CrashdetdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_CrashdetdType Driverstatus24e::CrashDetdCrashNotDetected;
constexpr Driverstatus24e_CrashdetdType Driverstatus24e::CrashDetdCrashDetected;
constexpr Driverstatus24e_CrashdetdType Driverstatus24e::CrashdetdType_MIN;
constexpr Driverstatus24e_CrashdetdType Driverstatus24e::CrashdetdType_MAX;
constexpr int Driverstatus24e::CrashdetdType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_SeatbltfrntristsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[44];
}
bool Driverstatus24e_SeatbltfrntristsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_SeatbltfrntristsType Driverstatus24e::SeatBltFrntRiStsSeabeltFrontRightNotBuckled;
constexpr Driverstatus24e_SeatbltfrntristsType Driverstatus24e::SeatBltFrntRiStsSeatbeltFrontRightBuckled;
constexpr Driverstatus24e_SeatbltfrntristsType Driverstatus24e::SeatbltfrntristsType_MIN;
constexpr Driverstatus24e_SeatbltfrntristsType Driverstatus24e::SeatbltfrntristsType_MAX;
constexpr int Driverstatus24e::SeatbltfrntristsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Driverstatus24e_SeatbltmidrowlestsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[45];
}
bool Driverstatus24e_SeatbltmidrowlestsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Driverstatus24e_SeatbltmidrowlestsType Driverstatus24e::SeatBltMidRowLeStsSeabeltMiddleRowLeftNotBuckled;
constexpr Driverstatus24e_SeatbltmidrowlestsType Driverstatus24e::SeatBltMidRowLeStsSeatbeltMiddleRowLeftBuckled;
constexpr Driverstatus24e_SeatbltmidrowlestsType Driverstatus24e::SeatbltmidrowlestsType_MIN;
constexpr Driverstatus24e_SeatbltmidrowlestsType Driverstatus24e::SeatbltmidrowlestsType_MAX;
constexpr int Driverstatus24e::SeatbltmidrowlestsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vehiclelights2c7_FogfrntlightstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[46];
}
bool Vehiclelights2c7_FogfrntlightstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vehiclelights2c7_FogfrntlightstsType Vehiclelights2c7::FogFrntlightStsoff;
constexpr Vehiclelights2c7_FogfrntlightstsType Vehiclelights2c7::FogFrntlightStson;
constexpr Vehiclelights2c7_FogfrntlightstsType Vehiclelights2c7::FogFrntlightStsreserved;
constexpr Vehiclelights2c7_FogfrntlightstsType Vehiclelights2c7::FogFrntlightStsinvalid;
constexpr Vehiclelights2c7_FogfrntlightstsType Vehiclelights2c7::FogfrntlightstsType_MIN;
constexpr Vehiclelights2c7_FogfrntlightstsType Vehiclelights2c7::FogfrntlightstsType_MAX;
constexpr int Vehiclelights2c7::FogfrntlightstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vehiclelights2c7_LeftturnlightstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[47];
}
bool Vehiclelights2c7_LeftturnlightstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vehiclelights2c7_LeftturnlightstsType Vehiclelights2c7::LeftTurnlightstsoff;
constexpr Vehiclelights2c7_LeftturnlightstsType Vehiclelights2c7::LeftTurnlightstson;
constexpr Vehiclelights2c7_LeftturnlightstsType Vehiclelights2c7::LeftTurnlightstsreserved;
constexpr Vehiclelights2c7_LeftturnlightstsType Vehiclelights2c7::LeftTurnlightstsinvalid;
constexpr Vehiclelights2c7_LeftturnlightstsType Vehiclelights2c7::LeftturnlightstsType_MIN;
constexpr Vehiclelights2c7_LeftturnlightstsType Vehiclelights2c7::LeftturnlightstsType_MAX;
constexpr int Vehiclelights2c7::LeftturnlightstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vehiclelights2c7_RightturnlightstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[48];
}
bool Vehiclelights2c7_RightturnlightstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vehiclelights2c7_RightturnlightstsType Vehiclelights2c7::RightTurnlightstsoff;
constexpr Vehiclelights2c7_RightturnlightstsType Vehiclelights2c7::RightTurnlightstson;
constexpr Vehiclelights2c7_RightturnlightstsType Vehiclelights2c7::RightTurnlightstsreserved;
constexpr Vehiclelights2c7_RightturnlightstsType Vehiclelights2c7::RightTurnlightstsinvalid;
constexpr Vehiclelights2c7_RightturnlightstsType Vehiclelights2c7::RightturnlightstsType_MIN;
constexpr Vehiclelights2c7_RightturnlightstsType Vehiclelights2c7::RightturnlightstsType_MAX;
constexpr int Vehiclelights2c7::RightturnlightstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vehiclelights2c7_LobeamlightstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[49];
}
bool Vehiclelights2c7_LobeamlightstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vehiclelights2c7_LobeamlightstsType Vehiclelights2c7::LobeamlightStsoff;
constexpr Vehiclelights2c7_LobeamlightstsType Vehiclelights2c7::LobeamlightStson;
constexpr Vehiclelights2c7_LobeamlightstsType Vehiclelights2c7::LobeamlightStsreserved;
constexpr Vehiclelights2c7_LobeamlightstsType Vehiclelights2c7::LobeamlightStsinvalid;
constexpr Vehiclelights2c7_LobeamlightstsType Vehiclelights2c7::LobeamlightstsType_MIN;
constexpr Vehiclelights2c7_LobeamlightstsType Vehiclelights2c7::LobeamlightstsType_MAX;
constexpr int Vehiclelights2c7::LobeamlightstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vehiclelights2c7_HibeamlightstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[50];
}
bool Vehiclelights2c7_HibeamlightstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vehiclelights2c7_HibeamlightstsType Vehiclelights2c7::HibeamlightStsoff;
constexpr Vehiclelights2c7_HibeamlightstsType Vehiclelights2c7::HibeamlightStson;
constexpr Vehiclelights2c7_HibeamlightstsType Vehiclelights2c7::HibeamlightStsreserved;
constexpr Vehiclelights2c7_HibeamlightstsType Vehiclelights2c7::HibeamlightStsinvalid;
constexpr Vehiclelights2c7_HibeamlightstsType Vehiclelights2c7::HibeamlightstsType_MIN;
constexpr Vehiclelights2c7_HibeamlightstsType Vehiclelights2c7::HibeamlightstsType_MAX;
constexpr int Vehiclelights2c7::HibeamlightstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vehiclelights2c7_EmergcylightstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[51];
}
bool Vehiclelights2c7_EmergcylightstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vehiclelights2c7_EmergcylightstsType Vehiclelights2c7::EmergcyLightStsoff;
constexpr Vehiclelights2c7_EmergcylightstsType Vehiclelights2c7::EmergcyLightSts125Hz;
constexpr Vehiclelights2c7_EmergcylightstsType Vehiclelights2c7::EmergcyLightSts1Hz;
constexpr Vehiclelights2c7_EmergcylightstsType Vehiclelights2c7::EmergcyLightStsinvalid;
constexpr Vehiclelights2c7_EmergcylightstsType Vehiclelights2c7::EmergcylightstsType_MIN;
constexpr Vehiclelights2c7_EmergcylightstsType Vehiclelights2c7::EmergcylightstsType_MAX;
constexpr int Vehiclelights2c7::EmergcylightstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Vehiclelights2c7_FrntwiperstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[52];
}
bool Vehiclelights2c7_FrntwiperstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Vehiclelights2c7_FrntwiperstsType Vehiclelights2c7::FrntwiperStsoff;
constexpr Vehiclelights2c7_FrntwiperstsType Vehiclelights2c7::FrntwiperStsLowSpeed;
constexpr Vehiclelights2c7_FrntwiperstsType Vehiclelights2c7::FrntwiperStsHighSpeed;
constexpr Vehiclelights2c7_FrntwiperstsType Vehiclelights2c7::FrntwiperStsreserved2;
constexpr Vehiclelights2c7_FrntwiperstsType Vehiclelights2c7::FrntwiperStsreserved3;
constexpr Vehiclelights2c7_FrntwiperstsType Vehiclelights2c7::FrntwiperStsreserved5;
constexpr Vehiclelights2c7_FrntwiperstsType Vehiclelights2c7::FrntwiperStsreserved6;
constexpr Vehiclelights2c7_FrntwiperstsType Vehiclelights2c7::FrntwiperStsinvalid;
constexpr Vehiclelights2c7_FrntwiperstsType Vehiclelights2c7::FrntwiperstsType_MIN;
constexpr Vehiclelights2c7_FrntwiperstsType Vehiclelights2c7::FrntwiperstsType_MAX;
constexpr int Vehiclelights2c7::FrntwiperstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Lightreq336_BrklireqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[53];
}
bool Lightreq336_BrklireqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Lightreq336_BrklireqType Lightreq336::BrkLiReqNoRequest;
constexpr Lightreq336_BrklireqType Lightreq336::BrkLiReqrequest;
constexpr Lightreq336_BrklireqType Lightreq336::BrkLiReqreserved;
constexpr Lightreq336_BrklireqType Lightreq336::BrkLiReqinvalid;
constexpr Lightreq336_BrklireqType Lightreq336::BrklireqType_MIN;
constexpr Lightreq336_BrklireqType Lightreq336::BrklireqType_MAX;
constexpr int Lightreq336::BrklireqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Lightreq336_FrntwiprstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[54];
}
bool Lightreq336_FrntwiprstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Lightreq336_FrntwiprstsType Lightreq336::Frntwiprstsoff;
constexpr Lightreq336_FrntwiprstsType Lightreq336::FrntwiprstsLowSpeed;
constexpr Lightreq336_FrntwiprstsType Lightreq336::FrntwiprstsHighSpeed;
constexpr Lightreq336_FrntwiprstsType Lightreq336::Frntwiprstsreserved3;
constexpr Lightreq336_FrntwiprstsType Lightreq336::Frntwiprstsreserved4;
constexpr Lightreq336_FrntwiprstsType Lightreq336::Frntwiprstsreserved5;
constexpr Lightreq336_FrntwiprstsType Lightreq336::Frntwiprstsreserved6;
constexpr Lightreq336_FrntwiprstsType Lightreq336::Frntwiprstsinvalid;
constexpr Lightreq336_FrntwiprstsType Lightreq336::FrntwiprstsType_MIN;
constexpr Lightreq336_FrntwiprstsType Lightreq336::FrntwiprstsType_MAX;
constexpr int Lightreq336::FrntwiprstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Lightreq336_TurnlightindType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[55];
}
bool Lightreq336_TurnlightindType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Lightreq336_TurnlightindType Lightreq336::TurnlightindNoTurn;
constexpr Lightreq336_TurnlightindType Lightreq336::TurnlightindTurnLeft;
constexpr Lightreq336_TurnlightindType Lightreq336::TurnlightindTurnRight;
constexpr Lightreq336_TurnlightindType Lightreq336::Turnlightindinvalid;
constexpr Lightreq336_TurnlightindType Lightreq336::TurnlightindType_MIN;
constexpr Lightreq336_TurnlightindType Lightreq336::TurnlightindType_MAX;
constexpr int Lightreq336::TurnlightindType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Lightreq336_BeamactivestsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[56];
}
bool Lightreq336_BeamactivestsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Lightreq336_BeamactivestsType Lightreq336::BeamactiveStsBeamStatusOff;
constexpr Lightreq336_BeamactivestsType Lightreq336::BeamactiveStsBeamStatusPassive;
constexpr Lightreq336_BeamactivestsType Lightreq336::BeamactiveStsBeamStatusActive;
constexpr Lightreq336_BeamactivestsType Lightreq336::BeamactiveStsreserved3;
constexpr Lightreq336_BeamactivestsType Lightreq336::BeamactiveStsreserved4;
constexpr Lightreq336_BeamactivestsType Lightreq336::BeamactiveStsreserved5;
constexpr Lightreq336_BeamactivestsType Lightreq336::BeamactiveStsreserved6;
constexpr Lightreq336_BeamactivestsType Lightreq336::BeamactiveStsinvalid;
constexpr Lightreq336_BeamactivestsType Lightreq336::BeamactivestsType_MIN;
constexpr Lightreq336_BeamactivestsType Lightreq336::BeamactivestsType_MAX;
constexpr int Lightreq336::BeamactivestsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Lightreq336_BeamlightreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[57];
}
bool Lightreq336_BeamlightreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Lightreq336_BeamlightreqType Lightreq336::BeamlightreqLowBeamRequest;
constexpr Lightreq336_BeamlightreqType Lightreq336::BeamlightreqHighBeamRequest;
constexpr Lightreq336_BeamlightreqType Lightreq336::BeamlightreqType_MIN;
constexpr Lightreq336_BeamlightreqType Lightreq336::BeamlightreqType_MAX;
constexpr int Lightreq336::BeamlightreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Lightreq336_EmeglampreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[58];
}
bool Lightreq336_EmeglampreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Lightreq336_EmeglampreqType Lightreq336::EmeglampReqoff;
constexpr Lightreq336_EmeglampreqType Lightreq336::EmeglampReq125Hz;
constexpr Lightreq336_EmeglampreqType Lightreq336::EmeglampReq1Hz;
constexpr Lightreq336_EmeglampreqType Lightreq336::EmeglampReqinvalid;
constexpr Lightreq336_EmeglampreqType Lightreq336::EmeglampreqType_MIN;
constexpr Lightreq336_EmeglampreqType Lightreq336::EmeglampreqType_MAX;
constexpr int Lightreq336::EmeglampreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Whlspdfront51_WhlspdfrstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[59];
}
bool Whlspdfront51_WhlspdfrstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Whlspdfront51_WhlspdfrstsType Whlspdfront51::WhlspdFRstsvalid;
constexpr Whlspdfront51_WhlspdfrstsType Whlspdfront51::WhlspdFRstsinvalid;
constexpr Whlspdfront51_WhlspdfrstsType Whlspdfront51::WhlspdFRstsinitial;
constexpr Whlspdfront51_WhlspdfrstsType Whlspdfront51::WhlspdFRstsreserved;
constexpr Whlspdfront51_WhlspdfrstsType Whlspdfront51::WhlspdfrstsType_MIN;
constexpr Whlspdfront51_WhlspdfrstsType Whlspdfront51::WhlspdfrstsType_MAX;
constexpr int Whlspdfront51::WhlspdfrstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Whlspdfront51_WhlspdfrdirType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[60];
}
bool Whlspdfront51_WhlspdfrdirType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Whlspdfront51_WhlspdfrdirType Whlspdfront51::WhlspdFRdirstandstill;
constexpr Whlspdfront51_WhlspdfrdirType Whlspdfront51::WhlspdFRdirforward;
constexpr Whlspdfront51_WhlspdfrdirType Whlspdfront51::WhlspdFRdirbackward;
constexpr Whlspdfront51_WhlspdfrdirType Whlspdfront51::WhlspdFRdirinvalid;
constexpr Whlspdfront51_WhlspdfrdirType Whlspdfront51::WhlspdfrdirType_MIN;
constexpr Whlspdfront51_WhlspdfrdirType Whlspdfront51::WhlspdfrdirType_MAX;
constexpr int Whlspdfront51::WhlspdfrdirType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Whlspdfront51_WhlspdflstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[61];
}
bool Whlspdfront51_WhlspdflstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Whlspdfront51_WhlspdflstsType Whlspdfront51::WhlspdFLstsvalid;
constexpr Whlspdfront51_WhlspdflstsType Whlspdfront51::WhlspdFLstsinvalid;
constexpr Whlspdfront51_WhlspdflstsType Whlspdfront51::WhlspdFLstsinitial;
constexpr Whlspdfront51_WhlspdflstsType Whlspdfront51::WhlspdFLstsreserved;
constexpr Whlspdfront51_WhlspdflstsType Whlspdfront51::WhlspdflstsType_MIN;
constexpr Whlspdfront51_WhlspdflstsType Whlspdfront51::WhlspdflstsType_MAX;
constexpr int Whlspdfront51::WhlspdflstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Whlspdfront51_WhlspdfldirType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[62];
}
bool Whlspdfront51_WhlspdfldirType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Whlspdfront51_WhlspdfldirType Whlspdfront51::WhlspdFLdirstandstill;
constexpr Whlspdfront51_WhlspdfldirType Whlspdfront51::WhlspdFLdirforward;
constexpr Whlspdfront51_WhlspdfldirType Whlspdfront51::WhlspdFLdirbackward;
constexpr Whlspdfront51_WhlspdfldirType Whlspdfront51::WhlspdFLdirinvalid;
constexpr Whlspdfront51_WhlspdfldirType Whlspdfront51::WhlspdfldirType_MIN;
constexpr Whlspdfront51_WhlspdfldirType Whlspdfront51::WhlspdfldirType_MAX;
constexpr int Whlspdfront51::WhlspdfldirType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Whlspdrear52_WhlspdrrstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[63];
}
bool Whlspdrear52_WhlspdrrstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Whlspdrear52_WhlspdrrstsType Whlspdrear52::WhlspdRRstsvalid;
constexpr Whlspdrear52_WhlspdrrstsType Whlspdrear52::WhlspdRRstsinvalid;
constexpr Whlspdrear52_WhlspdrrstsType Whlspdrear52::WhlspdRRstsinitial;
constexpr Whlspdrear52_WhlspdrrstsType Whlspdrear52::WhlspdRRstsreserved;
constexpr Whlspdrear52_WhlspdrrstsType Whlspdrear52::WhlspdrrstsType_MIN;
constexpr Whlspdrear52_WhlspdrrstsType Whlspdrear52::WhlspdrrstsType_MAX;
constexpr int Whlspdrear52::WhlspdrrstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Whlspdrear52_WhlspdrrdirType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[64];
}
bool Whlspdrear52_WhlspdrrdirType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Whlspdrear52_WhlspdrrdirType Whlspdrear52::WhlspdRRdirstandstill;
constexpr Whlspdrear52_WhlspdrrdirType Whlspdrear52::WhlspdRRdirforward;
constexpr Whlspdrear52_WhlspdrrdirType Whlspdrear52::WhlspdRRdirbackward;
constexpr Whlspdrear52_WhlspdrrdirType Whlspdrear52::WhlspdRRdirinvalid;
constexpr Whlspdrear52_WhlspdrrdirType Whlspdrear52::WhlspdrrdirType_MIN;
constexpr Whlspdrear52_WhlspdrrdirType Whlspdrear52::WhlspdrrdirType_MAX;
constexpr int Whlspdrear52::WhlspdrrdirType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Whlspdrear52_WhlspdrlstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[65];
}
bool Whlspdrear52_WhlspdrlstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Whlspdrear52_WhlspdrlstsType Whlspdrear52::WhlspdRLstsvalid;
constexpr Whlspdrear52_WhlspdrlstsType Whlspdrear52::WhlspdRLstsinvalid;
constexpr Whlspdrear52_WhlspdrlstsType Whlspdrear52::WhlspdRLstsinitial;
constexpr Whlspdrear52_WhlspdrlstsType Whlspdrear52::WhlspdRLstsreserved;
constexpr Whlspdrear52_WhlspdrlstsType Whlspdrear52::WhlspdrlstsType_MIN;
constexpr Whlspdrear52_WhlspdrlstsType Whlspdrear52::WhlspdrlstsType_MAX;
constexpr int Whlspdrear52::WhlspdrlstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Whlspdrear52_WhlspdrldirType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[66];
}
bool Whlspdrear52_WhlspdrldirType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Whlspdrear52_WhlspdrldirType Whlspdrear52::WhlspdRLdirstandstill;
constexpr Whlspdrear52_WhlspdrldirType Whlspdrear52::WhlspdRLdirforward;
constexpr Whlspdrear52_WhlspdrldirType Whlspdrear52::WhlspdRLdirbackward;
constexpr Whlspdrear52_WhlspdrldirType Whlspdrear52::WhlspdRLdirinvalid;
constexpr Whlspdrear52_WhlspdrldirType Whlspdrear52::WhlspdrldirType_MIN;
constexpr Whlspdrear52_WhlspdrldirType Whlspdrear52::WhlspdrldirType_MAX;
constexpr int Whlspdrear52::WhlspdrldirType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_TcsactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[67];
}
bool Bcusts5e_TcsactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_TcsactvType Bcusts5e::TCSActvNotActive;
constexpr Bcusts5e_TcsactvType Bcusts5e::TCSActvActive;
constexpr Bcusts5e_TcsactvType Bcusts5e::TcsactvType_MIN;
constexpr Bcusts5e_TcsactvType Bcusts5e::TcsactvType_MAX;
constexpr int Bcusts5e::TcsactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_ScmavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[68];
}
bool Bcusts5e_ScmavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_ScmavlType Bcusts5e::SCMAvlNotAvailable;
constexpr Bcusts5e_ScmavlType Bcusts5e::SCMAvlavailable;
constexpr Bcusts5e_ScmavlType Bcusts5e::ScmavlType_MIN;
constexpr Bcusts5e_ScmavlType Bcusts5e::ScmavlType_MAX;
constexpr int Bcusts5e::ScmavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_HfcactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[69];
}
bool Bcusts5e_HfcactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_HfcactvType Bcusts5e::HFCActvNotActive;
constexpr Bcusts5e_HfcactvType Bcusts5e::HFCActvActive;
constexpr Bcusts5e_HfcactvType Bcusts5e::HfcactvType_MIN;
constexpr Bcusts5e_HfcactvType Bcusts5e::HfcactvType_MAX;
constexpr int Bcusts5e::HfcactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_VdcactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[70];
}
bool Bcusts5e_VdcactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_VdcactvType Bcusts5e::VDCActvNotActive;
constexpr Bcusts5e_VdcactvType Bcusts5e::VDCActvActive;
constexpr Bcusts5e_VdcactvType Bcusts5e::VdcactvType_MIN;
constexpr Bcusts5e_VdcactvType Bcusts5e::VdcactvType_MAX;
constexpr int Bcusts5e::VdcactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AvhstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[71];
}
bool Bcusts5e_AvhstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AvhstsType Bcusts5e::AVHStsFailureAVHLampOnWithYellowColor;
constexpr Bcusts5e_AvhstsType Bcusts5e::AVHStsStandbyAVHLampOff;
constexpr Bcusts5e_AvhstsType Bcusts5e::AVHStsActiveAVHLampOnWithGreenColor;
constexpr Bcusts5e_AvhstsType Bcusts5e::AVHStsReserved;
constexpr Bcusts5e_AvhstsType Bcusts5e::AvhstsType_MIN;
constexpr Bcusts5e_AvhstsType Bcusts5e::AvhstsType_MAX;
constexpr int Bcusts5e::AvhstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AutobrkgactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[72];
}
bool Bcusts5e_AutobrkgactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AutobrkgactvType Bcusts5e::AutoBrkgActvNotActive;
constexpr Bcusts5e_AutobrkgactvType Bcusts5e::AutoBrkgActvActive;
constexpr Bcusts5e_AutobrkgactvType Bcusts5e::AutobrkgactvType_MIN;
constexpr Bcusts5e_AutobrkgactvType Bcusts5e::AutobrkgactvType_MAX;
constexpr int Bcusts5e::AutobrkgactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_VdcdeactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[73];
}
bool Bcusts5e_VdcdeactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_VdcdeactvType Bcusts5e::VDCDeactvNotDeactivated;
constexpr Bcusts5e_VdcdeactvType Bcusts5e::VDCDeactvDeactivated;
constexpr Bcusts5e_VdcdeactvType Bcusts5e::VdcdeactvType_MIN;
constexpr Bcusts5e_VdcdeactvType Bcusts5e::VdcdeactvType_MAX;
constexpr int Bcusts5e::VdcdeactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AbaactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[74];
}
bool Bcusts5e_AbaactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AbaactvType Bcusts5e::ABAActvNotActive;
constexpr Bcusts5e_AbaactvType Bcusts5e::ABAActvActive;
constexpr Bcusts5e_AbaactvType Bcusts5e::AbaactvType_MIN;
constexpr Bcusts5e_AbaactvType Bcusts5e::AbaactvType_MAX;
constexpr int Bcusts5e::AbaactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AutobrkgavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[75];
}
bool Bcusts5e_AutobrkgavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AutobrkgavlType Bcusts5e::AutoBrkgAvlNotAvailable;
constexpr Bcusts5e_AutobrkgavlType Bcusts5e::AutoBrkgAvlAvailable;
constexpr Bcusts5e_AutobrkgavlType Bcusts5e::AutobrkgavlType_MIN;
constexpr Bcusts5e_AutobrkgavlType Bcusts5e::AutobrkgavlType_MAX;
constexpr int Bcusts5e::AutobrkgavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_HbaactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[76];
}
bool Bcusts5e_HbaactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_HbaactvType Bcusts5e::HBAActvNotActive;
constexpr Bcusts5e_HbaactvType Bcusts5e::HBAActvActive;
constexpr Bcusts5e_HbaactvType Bcusts5e::HbaactvType_MIN;
constexpr Bcusts5e_HbaactvType Bcusts5e::HbaactvType_MAX;
constexpr int Bcusts5e::HbaactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AebavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[77];
}
bool Bcusts5e_AebavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AebavlType Bcusts5e::AEBAvlNotAvailable;
constexpr Bcusts5e_AebavlType Bcusts5e::AEBAvlavailable;
constexpr Bcusts5e_AebavlType Bcusts5e::AebavlType_MIN;
constexpr Bcusts5e_AebavlType Bcusts5e::AebavlType_MAX;
constexpr int Bcusts5e::AebavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AebactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[78];
}
bool Bcusts5e_AebactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AebactvType Bcusts5e::AEBActvNotActive;
constexpr Bcusts5e_AebactvType Bcusts5e::AEBActvActive;
constexpr Bcusts5e_AebactvType Bcusts5e::AebactvType_MIN;
constexpr Bcusts5e_AebactvType Bcusts5e::AebactvType_MAX;
constexpr int Bcusts5e::AebactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_CdpavailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[79];
}
bool Bcusts5e_CdpavailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_CdpavailType Bcusts5e::CDPAvailNotAvailable;
constexpr Bcusts5e_CdpavailType Bcusts5e::CDPAvailavailable;
constexpr Bcusts5e_CdpavailType Bcusts5e::CdpavailType_MIN;
constexpr Bcusts5e_CdpavailType Bcusts5e::CdpavailType_MAX;
constexpr int Bcusts5e::CdpavailType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AbaavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[80];
}
bool Bcusts5e_AbaavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AbaavlType Bcusts5e::ABAAvlNotAvailable;
constexpr Bcusts5e_AbaavlType Bcusts5e::ABAAvlavailable;
constexpr Bcusts5e_AbaavlType Bcusts5e::AbaavlType_MIN;
constexpr Bcusts5e_AbaavlType Bcusts5e::AbaavlType_MAX;
constexpr int Bcusts5e::AbaavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_HdcstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[81];
}
bool Bcusts5e_HdcstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_HdcstsType Bcusts5e::HDCStsOff;
constexpr Bcusts5e_HdcstsType Bcusts5e::HDCStsFailure;
constexpr Bcusts5e_HdcstsType Bcusts5e::HDCStsStandby;
constexpr Bcusts5e_HdcstsType Bcusts5e::HDCStsActive;
constexpr Bcusts5e_HdcstsType Bcusts5e::HdcstsType_MIN;
constexpr Bcusts5e_HdcstsType Bcusts5e::HdcstsType_MAX;
constexpr int Bcusts5e::HdcstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_TcsdeactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[82];
}
bool Bcusts5e_TcsdeactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_TcsdeactvType Bcusts5e::TCSDeactvNotDeactivated;
constexpr Bcusts5e_TcsdeactvType Bcusts5e::TCSDeactvDeactivated;
constexpr Bcusts5e_TcsdeactvType Bcusts5e::TcsdeactvType_MIN;
constexpr Bcusts5e_TcsdeactvType Bcusts5e::TcsdeactvType_MAX;
constexpr int Bcusts5e::TcsdeactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AwbavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[83];
}
bool Bcusts5e_AwbavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AwbavlType Bcusts5e::AWBAvlNotAvailable;
constexpr Bcusts5e_AwbavlType Bcusts5e::AWBAvlavailable;
constexpr Bcusts5e_AwbavlType Bcusts5e::AwbavlType_MIN;
constexpr Bcusts5e_AwbavlType Bcusts5e::AwbavlType_MAX;
constexpr int Bcusts5e::AwbavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AbpavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[84];
}
bool Bcusts5e_AbpavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AbpavlType Bcusts5e::ABPAvlNotAvailable;
constexpr Bcusts5e_AbpavlType Bcusts5e::ABPAvlavailable;
constexpr Bcusts5e_AbpavlType Bcusts5e::AbpavlType_MIN;
constexpr Bcusts5e_AbpavlType Bcusts5e::AbpavlType_MAX;
constexpr int Bcusts5e::AbpavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AwbactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[85];
}
bool Bcusts5e_AwbactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AwbactvType Bcusts5e::AWBActvNotActive;
constexpr Bcusts5e_AwbactvType Bcusts5e::AWBActvActive;
constexpr Bcusts5e_AwbactvType Bcusts5e::AwbactvType_MIN;
constexpr Bcusts5e_AwbactvType Bcusts5e::AwbactvType_MAX;
constexpr int Bcusts5e::AwbactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_EbaavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[86];
}
bool Bcusts5e_EbaavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_EbaavlType Bcusts5e::EBAAvlNotAvailable;
constexpr Bcusts5e_EbaavlType Bcusts5e::EBAAvlavailable;
constexpr Bcusts5e_EbaavlType Bcusts5e::EbaavlType_MIN;
constexpr Bcusts5e_EbaavlType Bcusts5e::EbaavlType_MAX;
constexpr int Bcusts5e::EbaavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_QdcaccfailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[87];
}
bool Bcusts5e_QdcaccfailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_QdcaccfailType Bcusts5e::QDCACCFailNoError;
constexpr Bcusts5e_QdcaccfailType Bcusts5e::QDCACCFailError;
constexpr Bcusts5e_QdcaccfailType Bcusts5e::QDCACCFailReserved2;
constexpr Bcusts5e_QdcaccfailType Bcusts5e::QDCACCFailReserved3;
constexpr Bcusts5e_QdcaccfailType Bcusts5e::QdcaccfailType_MIN;
constexpr Bcusts5e_QdcaccfailType Bcusts5e::QdcaccfailType_MAX;
constexpr int Bcusts5e::QdcaccfailType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AbpactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[88];
}
bool Bcusts5e_AbpactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AbpactvType Bcusts5e::ABPActvNotActive;
constexpr Bcusts5e_AbpactvType Bcusts5e::ABPActvActive;
constexpr Bcusts5e_AbpactvType Bcusts5e::AbpactvType_MIN;
constexpr Bcusts5e_AbpactvType Bcusts5e::AbpactvType_MAX;
constexpr int Bcusts5e::AbpactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_PedpavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[89];
}
bool Bcusts5e_PedpavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_PedpavlType Bcusts5e::PEDPAvlNotAvailable;
constexpr Bcusts5e_PedpavlType Bcusts5e::PEDPAvlavailable;
constexpr Bcusts5e_PedpavlType Bcusts5e::PedpavlType_MIN;
constexpr Bcusts5e_PedpavlType Bcusts5e::PedpavlType_MAX;
constexpr int Bcusts5e::PedpavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_CddsavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[90];
}
bool Bcusts5e_CddsavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_CddsavlType Bcusts5e::CDDSAvlNotAvailable;
constexpr Bcusts5e_CddsavlType Bcusts5e::CDDSAvlavailable;
constexpr Bcusts5e_CddsavlType Bcusts5e::CddsavlType_MIN;
constexpr Bcusts5e_CddsavlType Bcusts5e::CddsavlType_MAX;
constexpr int Bcusts5e::CddsavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_StandstillstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[91];
}
bool Bcusts5e_StandstillstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_StandstillstsType Bcusts5e::StandstillStsNonHold;
constexpr Bcusts5e_StandstillstsType Bcusts5e::StandstillStsSoftStop;
constexpr Bcusts5e_StandstillstsType Bcusts5e::StandstillStsTemporaryHoldByServiceBrakes;
constexpr Bcusts5e_StandstillstsType Bcusts5e::StandstillStsHoldByServiceBrakes;
constexpr Bcusts5e_StandstillstsType Bcusts5e::StandstillStsTransitionToANonHold;
constexpr Bcusts5e_StandstillstsType Bcusts5e::StandstillStsParkedVehicleAutonomousParkBrake;
constexpr Bcusts5e_StandstillstsType Bcusts5e::StandstillStsReserved6;
constexpr Bcusts5e_StandstillstsType Bcusts5e::StandstillStsReserved7;
constexpr Bcusts5e_StandstillstsType Bcusts5e::StandstillstsType_MIN;
constexpr Bcusts5e_StandstillstsType Bcusts5e::StandstillstsType_MAX;
constexpr int Bcusts5e::StandstillstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_HhcavailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[92];
}
bool Bcusts5e_HhcavailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_HhcavailType Bcusts5e::HHCAvailNotAvailable;
constexpr Bcusts5e_HhcavailType Bcusts5e::HHCAvailavailable;
constexpr Bcusts5e_HhcavailType Bcusts5e::HhcavailType_MIN;
constexpr Bcusts5e_HhcavailType Bcusts5e::HhcavailType_MAX;
constexpr int Bcusts5e::HhcavailType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_AbsactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[93];
}
bool Bcusts5e_AbsactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_AbsactvType Bcusts5e::ABSActvNotActive;
constexpr Bcusts5e_AbsactvType Bcusts5e::ABSActvActive;
constexpr Bcusts5e_AbsactvType Bcusts5e::AbsactvType_MIN;
constexpr Bcusts5e_AbsactvType Bcusts5e::AbsactvType_MAX;
constexpr int Bcusts5e::AbsactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_PedpactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[94];
}
bool Bcusts5e_PedpactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_PedpactvType Bcusts5e::PEDPActvNotActive;
constexpr Bcusts5e_PedpactvType Bcusts5e::PEDPActvActive;
constexpr Bcusts5e_PedpactvType Bcusts5e::PedpactvType_MIN;
constexpr Bcusts5e_PedpactvType Bcusts5e::PedpactvType_MAX;
constexpr int Bcusts5e::PedpactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_EbaactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[95];
}
bool Bcusts5e_EbaactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_EbaactvType Bcusts5e::EBAActvNotActive;
constexpr Bcusts5e_EbaactvType Bcusts5e::EBAActvActive;
constexpr Bcusts5e_EbaactvType Bcusts5e::EbaactvType_MIN;
constexpr Bcusts5e_EbaactvType Bcusts5e::EbaactvType_MAX;
constexpr int Bcusts5e::EbaactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_CdpactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[96];
}
bool Bcusts5e_CdpactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_CdpactvType Bcusts5e::CDPActvNotActive;
constexpr Bcusts5e_CdpactvType Bcusts5e::CDPActvActive;
constexpr Bcusts5e_CdpactvType Bcusts5e::CdpactvType_MIN;
constexpr Bcusts5e_CdpactvType Bcusts5e::CdpactvType_MAX;
constexpr int Bcusts5e::CdpactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_EbdactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[97];
}
bool Bcusts5e_EbdactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_EbdactvType Bcusts5e::EBDActvNotActive;
constexpr Bcusts5e_EbdactvType Bcusts5e::EBDActvActive;
constexpr Bcusts5e_EbdactvType Bcusts5e::EbdactvType_MIN;
constexpr Bcusts5e_EbdactvType Bcusts5e::EbdactvType_MAX;
constexpr int Bcusts5e::EbdactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_ScmactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[98];
}
bool Bcusts5e_ScmactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_ScmactvType Bcusts5e::SCMActvNotActive;
constexpr Bcusts5e_ScmactvType Bcusts5e::SCMActvActive;
constexpr Bcusts5e_ScmactvType Bcusts5e::ScmactvType_MIN;
constexpr Bcusts5e_ScmactvType Bcusts5e::ScmactvType_MAX;
constexpr int Bcusts5e::ScmactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_DtcactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[99];
}
bool Bcusts5e_DtcactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_DtcactvType Bcusts5e::DTCActvNotActive;
constexpr Bcusts5e_DtcactvType Bcusts5e::DTCActvActive;
constexpr Bcusts5e_DtcactvType Bcusts5e::DtcactvType_MIN;
constexpr Bcusts5e_DtcactvType Bcusts5e::DtcactvType_MAX;
constexpr int Bcusts5e::DtcactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_HrbactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[100];
}
bool Bcusts5e_HrbactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_HrbactvType Bcusts5e::HRBActvNotActive;
constexpr Bcusts5e_HrbactvType Bcusts5e::HRBActvActive;
constexpr Bcusts5e_HrbactvType Bcusts5e::HrbactvType_MIN;
constexpr Bcusts5e_HrbactvType Bcusts5e::HrbactvType_MAX;
constexpr int Bcusts5e::HrbactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_EcdttempoffsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[101];
}
bool Bcusts5e_EcdttempoffsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_EcdttempoffsType Bcusts5e::ECDTTempOffsTemperatureNotHigh;
constexpr Bcusts5e_EcdttempoffsType Bcusts5e::ECDTTempOffsTemepratureTooHigh;
constexpr Bcusts5e_EcdttempoffsType Bcusts5e::EcdttempoffsType_MIN;
constexpr Bcusts5e_EcdttempoffsType Bcusts5e::EcdttempoffsType_MAX;
constexpr int Bcusts5e::EcdttempoffsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_CddsactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[102];
}
bool Bcusts5e_CddsactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_CddsactvType Bcusts5e::CDDSActvNotActive;
constexpr Bcusts5e_CddsactvType Bcusts5e::CDDSActvActive;
constexpr Bcusts5e_CddsactvType Bcusts5e::CddsactvType_MIN;
constexpr Bcusts5e_CddsactvType Bcusts5e::CddsactvType_MAX;
constexpr int Bcusts5e::CddsactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Bcusts5e_HhcactvType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[103];
}
bool Bcusts5e_HhcactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Bcusts5e_HhcactvType Bcusts5e::HHCActvNotActive;
constexpr Bcusts5e_HhcactvType Bcusts5e::HHCActvActive;
constexpr Bcusts5e_HhcactvType Bcusts5e::HhcactvType_MIN;
constexpr Bcusts5e_HhcactvType Bcusts5e::HhcactvType_MAX;
constexpr int Bcusts5e::HhcactvType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Pulsecnt65_WhlplscntrrvldType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[104];
}
bool Pulsecnt65_WhlplscntrrvldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Pulsecnt65_WhlplscntrrvldType Pulsecnt65::WhlplscntRRvldvalid;
constexpr Pulsecnt65_WhlplscntrrvldType Pulsecnt65::WhlplscntRRvldinvalid;
constexpr Pulsecnt65_WhlplscntrrvldType Pulsecnt65::WhlplscntrrvldType_MIN;
constexpr Pulsecnt65_WhlplscntrrvldType Pulsecnt65::WhlplscntrrvldType_MAX;
constexpr int Pulsecnt65::WhlplscntrrvldType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Pulsecnt65_WhlplscntrlvldType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[105];
}
bool Pulsecnt65_WhlplscntrlvldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Pulsecnt65_WhlplscntrlvldType Pulsecnt65::WhlplscntRLvldvalid;
constexpr Pulsecnt65_WhlplscntrlvldType Pulsecnt65::WhlplscntRLvldinvalid;
constexpr Pulsecnt65_WhlplscntrlvldType Pulsecnt65::WhlplscntrlvldType_MIN;
constexpr Pulsecnt65_WhlplscntrlvldType Pulsecnt65::WhlplscntrlvldType_MAX;
constexpr int Pulsecnt65::WhlplscntrlvldType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Pulsecnt65_WhlplscntfrvldType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[106];
}
bool Pulsecnt65_WhlplscntfrvldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Pulsecnt65_WhlplscntfrvldType Pulsecnt65::WhlplscntFRvldvalid;
constexpr Pulsecnt65_WhlplscntfrvldType Pulsecnt65::WhlplscntFRvldinvalid;
constexpr Pulsecnt65_WhlplscntfrvldType Pulsecnt65::WhlplscntfrvldType_MIN;
constexpr Pulsecnt65_WhlplscntfrvldType Pulsecnt65::WhlplscntfrvldType_MAX;
constexpr int Pulsecnt65::WhlplscntfrvldType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Pulsecnt65_WhlplscntflvldType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[107];
}
bool Pulsecnt65_WhlplscntflvldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Pulsecnt65_WhlplscntflvldType Pulsecnt65::WhlplscntFLvldvalid;
constexpr Pulsecnt65_WhlplscntflvldType Pulsecnt65::WhlplscntFLvldinvalid;
constexpr Pulsecnt65_WhlplscntflvldType Pulsecnt65::WhlplscntflvldType_MIN;
constexpr Pulsecnt65_WhlplscntflvldType Pulsecnt65::WhlplscntflvldType_MAX;
constexpr int Pulsecnt65::WhlplscntflvldType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Aebreq79_AbareqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[108];
}
bool Aebreq79_AbareqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Aebreq79_AbareqType Aebreq79::ABAReqNoRequest;
constexpr Aebreq79_AbareqType Aebreq79::ABAReqRequest;
constexpr Aebreq79_AbareqType Aebreq79::AbareqType_MIN;
constexpr Aebreq79_AbareqType Aebreq79::AbareqType_MAX;
constexpr int Aebreq79::AbareqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Aebreq79_AbasnvtylvlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[109];
}
bool Aebreq79_AbasnvtylvlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Aebreq79_AbasnvtylvlType Aebreq79::ABASnvtyLvlLevel0;
constexpr Aebreq79_AbasnvtylvlType Aebreq79::ABASnvtyLvlLevel1;
constexpr Aebreq79_AbasnvtylvlType Aebreq79::ABASnvtyLvlLevel2;
constexpr Aebreq79_AbasnvtylvlType Aebreq79::ABASnvtyLvlLevel3;
constexpr Aebreq79_AbasnvtylvlType Aebreq79::AbasnvtylvlType_MIN;
constexpr Aebreq79_AbasnvtylvlType Aebreq79::AbasnvtylvlType_MAX;
constexpr int Aebreq79::AbasnvtylvlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Aebreq79_AwbsnvtylvlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[110];
}
bool Aebreq79_AwbsnvtylvlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Aebreq79_AwbsnvtylvlType Aebreq79::AWBSnvtyLvlLevel0;
constexpr Aebreq79_AwbsnvtylvlType Aebreq79::AWBSnvtyLvlLevel1;
constexpr Aebreq79_AwbsnvtylvlType Aebreq79::AWBSnvtyLvlLevel2;
constexpr Aebreq79_AwbsnvtylvlType Aebreq79::AWBSnvtyLvlLevel3;
constexpr Aebreq79_AwbsnvtylvlType Aebreq79::AwbsnvtylvlType_MIN;
constexpr Aebreq79_AwbsnvtylvlType Aebreq79::AwbsnvtylvlType_MAX;
constexpr int Aebreq79::AwbsnvtylvlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Aebreq79_AwbreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[111];
}
bool Aebreq79_AwbreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Aebreq79_AwbreqType Aebreq79::AWBReqNoRequest;
constexpr Aebreq79_AwbreqType Aebreq79::AWBReqRequest;
constexpr Aebreq79_AwbreqType Aebreq79::AwbreqType_MIN;
constexpr Aebreq79_AwbreqType Aebreq79::AwbreqType_MAX;
constexpr int Aebreq79::AwbreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Aebreq79_ScmdecelreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[112];
}
bool Aebreq79_ScmdecelreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Aebreq79_ScmdecelreqType Aebreq79::SCMDecelReqNoRequest;
constexpr Aebreq79_ScmdecelreqType Aebreq79::SCMDecelReqRequest;
constexpr Aebreq79_ScmdecelreqType Aebreq79::ScmdecelreqType_MIN;
constexpr Aebreq79_ScmdecelreqType Aebreq79::ScmdecelreqType_MAX;
constexpr int Aebreq79::ScmdecelreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Aebreq79_AebdecelreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[113];
}
bool Aebreq79_AebdecelreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Aebreq79_AebdecelreqType Aebreq79::AEBDecelReqNoRequest;
constexpr Aebreq79_AebdecelreqType Aebreq79::AEBDecelReqRequest;
constexpr Aebreq79_AebdecelreqType Aebreq79::AebdecelreqType_MIN;
constexpr Aebreq79_AebdecelreqType Aebreq79::AebdecelreqType_MAX;
constexpr int Aebreq79::AebdecelreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Aebreq79_EbadecelreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[114];
}
bool Aebreq79_EbadecelreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Aebreq79_EbadecelreqType Aebreq79::EBADecelReqNoRequest;
constexpr Aebreq79_EbadecelreqType Aebreq79::EBADecelReqRequest;
constexpr Aebreq79_EbadecelreqType Aebreq79::EbadecelreqType_MIN;
constexpr Aebreq79_EbadecelreqType Aebreq79::EbadecelreqType_MAX;
constexpr int Aebreq79::EbadecelreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Aebreq79_AbpreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[115];
}
bool Aebreq79_AbpreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Aebreq79_AbpreqType Aebreq79::ABPReqNoRequest;
constexpr Aebreq79_AbpreqType Aebreq79::ABPReqRequest;
constexpr Aebreq79_AbpreqType Aebreq79::AbpreqType_MIN;
constexpr Aebreq79_AbpreqType Aebreq79::AbpreqType_MAX;
constexpr int Aebreq79::AbpreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Aebreq79_PedpdecreqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[116];
}
bool Aebreq79_PedpdecreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Aebreq79_PedpdecreqType Aebreq79::PEDPDecReqNoRequest;
constexpr Aebreq79_PedpdecreqType Aebreq79::PEDPDecReqRequest;
constexpr Aebreq79_PedpdecreqType Aebreq79::PedpdecreqType_MIN;
constexpr Aebreq79_PedpdecreqType Aebreq79::PedpdecreqType_MAX;
constexpr int Aebreq79::PedpdecreqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_ScmfailstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[117];
}
bool Scmsts7b_ScmfailstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_ScmfailstsType Scmsts7b::SCMFailStsNormal;
constexpr Scmsts7b_ScmfailstsType Scmsts7b::SCMFailStsFail;
constexpr Scmsts7b_ScmfailstsType Scmsts7b::SCMFailStsReserved;
constexpr Scmsts7b_ScmfailstsType Scmsts7b::SCMFailStsInvalid;
constexpr Scmsts7b_ScmfailstsType Scmsts7b::ScmfailstsType_MIN;
constexpr Scmsts7b_ScmfailstsType Scmsts7b::ScmfailstsType_MAX;
constexpr int Scmsts7b::ScmfailstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_HilowbeampushswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[118];
}
bool Scmsts7b_HilowbeampushswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_HilowbeampushswtstsType Scmsts7b::HiLowBeamPushSwtStsNoCommandDefaultPosition;
constexpr Scmsts7b_HilowbeampushswtstsType Scmsts7b::HiLowBeamPushSwtStsFlashCommand;
constexpr Scmsts7b_HilowbeampushswtstsType Scmsts7b::HiLowBeamPushSwtStsLowBeamOrHighBeamCommand;
constexpr Scmsts7b_HilowbeampushswtstsType Scmsts7b::HiLowBeamPushSwtStsInvalid;
constexpr Scmsts7b_HilowbeampushswtstsType Scmsts7b::HilowbeampushswtstsType_MIN;
constexpr Scmsts7b_HilowbeampushswtstsType Scmsts7b::HilowbeampushswtstsType_MAX;
constexpr int Scmsts7b::HilowbeampushswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_FrntwiprswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[119];
}
bool Scmsts7b_FrntwiprswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_FrntwiprswtstsType Scmsts7b::FrntWiprSwtStsFrontWiperOff;
constexpr Scmsts7b_FrntwiprswtstsType Scmsts7b::FrntWiprSwtStsFrontWiperLowSpeed;
constexpr Scmsts7b_FrntwiprswtstsType Scmsts7b::FrntWiprSwtStsFrontWiperHighSpeed;
constexpr Scmsts7b_FrntwiprswtstsType Scmsts7b::FrntWiprSwtStsFrontWiperIntermediateSpeed;
constexpr Scmsts7b_FrntwiprswtstsType Scmsts7b::FrntWiprSwtStsFrontWiperWipeOneTime;
constexpr Scmsts7b_FrntwiprswtstsType Scmsts7b::FrntWiprSwtStsReserved5;
constexpr Scmsts7b_FrntwiprswtstsType Scmsts7b::FrntWiprSwtStsReserved6;
constexpr Scmsts7b_FrntwiprswtstsType Scmsts7b::FrntWiprSwtStsInvalid;
constexpr Scmsts7b_FrntwiprswtstsType Scmsts7b::FrntwiprswtstsType_MIN;
constexpr Scmsts7b_FrntwiprswtstsType Scmsts7b::FrntwiprswtstsType_MAX;
constexpr int Scmsts7b::FrntwiprswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_TurnindcrswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[120];
}
bool Scmsts7b_TurnindcrswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_TurnindcrswtstsType Scmsts7b::TurnIndcrSwtStsNoTurnIndicator;
constexpr Scmsts7b_TurnindcrswtstsType Scmsts7b::TurnIndcrSwtStsTurnIndicatorLeft;
constexpr Scmsts7b_TurnindcrswtstsType Scmsts7b::TurnIndcrSwtStsTurnIndicatorRight;
constexpr Scmsts7b_TurnindcrswtstsType Scmsts7b::TurnIndcrSwtStsInvalid;
constexpr Scmsts7b_TurnindcrswtstsType Scmsts7b::TurnindcrswtstsType_MIN;
constexpr Scmsts7b_TurnindcrswtstsType Scmsts7b::TurnindcrswtstsType_MAX;
constexpr int Scmsts7b::TurnindcrswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_FoglipushswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[121];
}
bool Scmsts7b_FoglipushswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_FoglipushswtstsType Scmsts7b::FogLiPushSwtStsPushSwitchNotPressed;
constexpr Scmsts7b_FoglipushswtstsType Scmsts7b::FogLiPushSwtStsPushSwitchPressed;
constexpr Scmsts7b_FoglipushswtstsType Scmsts7b::FogLiPushSwtStsReserved;
constexpr Scmsts7b_FoglipushswtstsType Scmsts7b::FogLiPushSwtStsInvalid;
constexpr Scmsts7b_FoglipushswtstsType Scmsts7b::FoglipushswtstsType_MIN;
constexpr Scmsts7b_FoglipushswtstsType Scmsts7b::FoglipushswtstsType_MAX;
constexpr int Scmsts7b::FoglipushswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_FrntwiprinterspdType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[122];
}
bool Scmsts7b_FrntwiprinterspdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_FrntwiprinterspdType Scmsts7b::FrntWiprInterSpdReserved;
constexpr Scmsts7b_FrntwiprinterspdType Scmsts7b::FrntWiprInterSpdIntermediateSpeed1;
constexpr Scmsts7b_FrntwiprinterspdType Scmsts7b::FrntWiprInterSpdIntermediateSpeed2;
constexpr Scmsts7b_FrntwiprinterspdType Scmsts7b::FrntWiprInterSpdIntermediateSpeed3;
constexpr Scmsts7b_FrntwiprinterspdType Scmsts7b::FrntWiprInterSpdIntermediateSpeed4;
constexpr Scmsts7b_FrntwiprinterspdType Scmsts7b::FrntWiprInterSpdReserved5;
constexpr Scmsts7b_FrntwiprinterspdType Scmsts7b::FrntWiprInterSpdReserved6;
constexpr Scmsts7b_FrntwiprinterspdType Scmsts7b::FrntWiprInterSpdInvalid;
constexpr Scmsts7b_FrntwiprinterspdType Scmsts7b::FrntwiprinterspdType_MIN;
constexpr Scmsts7b_FrntwiprinterspdType Scmsts7b::FrntwiprinterspdType_MAX;
constexpr int Scmsts7b::FrntwiprinterspdType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_MenuorvoldwnpushswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[123];
}
bool Scmsts7b_MenuorvoldwnpushswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_MenuorvoldwnpushswtstsType Scmsts7b::MenuOrVolDwnPushSwtStsNotPressed;
constexpr Scmsts7b_MenuorvoldwnpushswtstsType Scmsts7b::MenuOrVolDwnPushSwtStsPressed;
constexpr Scmsts7b_MenuorvoldwnpushswtstsType Scmsts7b::MenuOrVolDwnPushSwtStsReserved;
constexpr Scmsts7b_MenuorvoldwnpushswtstsType Scmsts7b::MenuOrVolDwnPushSwtStsInvalid;
constexpr Scmsts7b_MenuorvoldwnpushswtstsType Scmsts7b::MenuorvoldwnpushswtstsType_MIN;
constexpr Scmsts7b_MenuorvoldwnpushswtstsType Scmsts7b::MenuorvoldwnpushswtstsType_MAX;
constexpr int Scmsts7b::MenuorvoldwnpushswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_AccspdincorresuswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[124];
}
bool Scmsts7b_AccspdincorresuswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_AccspdincorresuswtstsType Scmsts7b::AccSpdIncOrResuSwtStsNotPressed;
constexpr Scmsts7b_AccspdincorresuswtstsType Scmsts7b::AccSpdIncOrResuSwtStsPressed;
constexpr Scmsts7b_AccspdincorresuswtstsType Scmsts7b::AccSpdIncOrResuSwtStsReserved;
constexpr Scmsts7b_AccspdincorresuswtstsType Scmsts7b::AccSpdIncOrResuSwtStsInvalid;
constexpr Scmsts7b_AccspdincorresuswtstsType Scmsts7b::AccspdincorresuswtstsType_MIN;
constexpr Scmsts7b_AccspdincorresuswtstsType Scmsts7b::AccspdincorresuswtstsType_MAX;
constexpr int Scmsts7b::AccspdincorresuswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_AcctimegapincswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[125];
}
bool Scmsts7b_AcctimegapincswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_AcctimegapincswtstsType Scmsts7b::AccTimeGapIncSwtStsNotPressed;
constexpr Scmsts7b_AcctimegapincswtstsType Scmsts7b::AccTimeGapIncSwtStsPressed;
constexpr Scmsts7b_AcctimegapincswtstsType Scmsts7b::AccTimeGapIncSwtStsReserved;
constexpr Scmsts7b_AcctimegapincswtstsType Scmsts7b::AccTimeGapIncSwtStsInvalid;
constexpr Scmsts7b_AcctimegapincswtstsType Scmsts7b::AcctimegapincswtstsType_MIN;
constexpr Scmsts7b_AcctimegapincswtstsType Scmsts7b::AcctimegapincswtstsType_MAX;
constexpr int Scmsts7b::AcctimegapincswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_SelnpushswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[126];
}
bool Scmsts7b_SelnpushswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_SelnpushswtstsType Scmsts7b::SelnPushSwtStsNotPressed;
constexpr Scmsts7b_SelnpushswtstsType Scmsts7b::SelnPushSwtStsPressed;
constexpr Scmsts7b_SelnpushswtstsType Scmsts7b::SelnPushSwtStsReserved;
constexpr Scmsts7b_SelnpushswtstsType Scmsts7b::SelnPushSwtStsInvalid;
constexpr Scmsts7b_SelnpushswtstsType Scmsts7b::SelnpushswtstsType_MIN;
constexpr Scmsts7b_SelnpushswtstsType Scmsts7b::SelnpushswtstsType_MAX;
constexpr int Scmsts7b::SelnpushswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_ModetogdecswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[127];
}
bool Scmsts7b_ModetogdecswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_ModetogdecswtstsType Scmsts7b::ModeTogDecSwtStsNotPressed;
constexpr Scmsts7b_ModetogdecswtstsType Scmsts7b::ModeTogDecSwtStsPressed;
constexpr Scmsts7b_ModetogdecswtstsType Scmsts7b::ModeTogDecSwtStsReserved;
constexpr Scmsts7b_ModetogdecswtstsType Scmsts7b::ModeTogDecSwtStsInvalid;
constexpr Scmsts7b_ModetogdecswtstsType Scmsts7b::ModetogdecswtstsType_MIN;
constexpr Scmsts7b_ModetogdecswtstsType Scmsts7b::ModetogdecswtstsType_MAX;
constexpr int Scmsts7b::ModetogdecswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_ModetogincswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[128];
}
bool Scmsts7b_ModetogincswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_ModetogincswtstsType Scmsts7b::ModeTogIncSwtStsNotPressed;
constexpr Scmsts7b_ModetogincswtstsType Scmsts7b::ModeTogIncSwtStsPressed;
constexpr Scmsts7b_ModetogincswtstsType Scmsts7b::ModeTogIncSwtStsReserved;
constexpr Scmsts7b_ModetogincswtstsType Scmsts7b::ModeTogIncSwtStsInvalid;
constexpr Scmsts7b_ModetogincswtstsType Scmsts7b::ModetogincswtstsType_MIN;
constexpr Scmsts7b_ModetogincswtstsType Scmsts7b::ModetogincswtstsType_MAX;
constexpr int Scmsts7b::ModetogincswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_MenupushswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[129];
}
bool Scmsts7b_MenupushswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_MenupushswtstsType Scmsts7b::MenuPushSwtStsNotPressed;
constexpr Scmsts7b_MenupushswtstsType Scmsts7b::MenuPushSwtStsPressed;
constexpr Scmsts7b_MenupushswtstsType Scmsts7b::MenuPushSwtStsReserved;
constexpr Scmsts7b_MenupushswtstsType Scmsts7b::MenuPushSwtStsInvalid;
constexpr Scmsts7b_MenupushswtstsType Scmsts7b::MenupushswtstsType_MIN;
constexpr Scmsts7b_MenupushswtstsType Scmsts7b::MenupushswtstsType_MAX;
constexpr int Scmsts7b::MenupushswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_SwcfailstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[130];
}
bool Scmsts7b_SwcfailstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_SwcfailstsType Scmsts7b::SWCFailStsNormal;
constexpr Scmsts7b_SwcfailstsType Scmsts7b::SWCFailStsFail;
constexpr Scmsts7b_SwcfailstsType Scmsts7b::SWCFailStsReserved;
constexpr Scmsts7b_SwcfailstsType Scmsts7b::SWCFailStsInvalid;
constexpr Scmsts7b_SwcfailstsType Scmsts7b::SwcfailstsType_MIN;
constexpr Scmsts7b_SwcfailstsType Scmsts7b::SwcfailstsType_MAX;
constexpr int Scmsts7b::SwcfailstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_AccspddecswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[131];
}
bool Scmsts7b_AccspddecswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_AccspddecswtstsType Scmsts7b::AccSpdDecSwtStsNotPressed;
constexpr Scmsts7b_AccspddecswtstsType Scmsts7b::AccSpdDecSwtStsPressed;
constexpr Scmsts7b_AccspddecswtstsType Scmsts7b::AccSpdDecSwtStsReserved;
constexpr Scmsts7b_AccspddecswtstsType Scmsts7b::AccSpdDecSwtStsInvalid;
constexpr Scmsts7b_AccspddecswtstsType Scmsts7b::AccspddecswtstsType_MIN;
constexpr Scmsts7b_AccspddecswtstsType Scmsts7b::AccspddecswtstsType_MAX;
constexpr int Scmsts7b::AccspddecswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_MenulepushswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[132];
}
bool Scmsts7b_MenulepushswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_MenulepushswtstsType Scmsts7b::MenuLePushSwtStsNotPressed;
constexpr Scmsts7b_MenulepushswtstsType Scmsts7b::MenuLePushSwtStsPressed;
constexpr Scmsts7b_MenulepushswtstsType Scmsts7b::MenuLePushSwtStsReserved;
constexpr Scmsts7b_MenulepushswtstsType Scmsts7b::MenuLePushSwtStsInvalid;
constexpr Scmsts7b_MenulepushswtstsType Scmsts7b::MenulepushswtstsType_MIN;
constexpr Scmsts7b_MenulepushswtstsType Scmsts7b::MenulepushswtstsType_MAX;
constexpr int Scmsts7b::MenulepushswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_MenuorvoluppushswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[133];
}
bool Scmsts7b_MenuorvoluppushswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_MenuorvoluppushswtstsType Scmsts7b::MenuOrVolUpPushSwtStsNotPressed;
constexpr Scmsts7b_MenuorvoluppushswtstsType Scmsts7b::MenuOrVolUpPushSwtStsPressed;
constexpr Scmsts7b_MenuorvoluppushswtstsType Scmsts7b::MenuOrVolUpPushSwtStsReserved;
constexpr Scmsts7b_MenuorvoluppushswtstsType Scmsts7b::MenuOrVolUpPushSwtStsInvalid;
constexpr Scmsts7b_MenuorvoluppushswtstsType Scmsts7b::MenuorvoluppushswtstsType_MIN;
constexpr Scmsts7b_MenuorvoluppushswtstsType Scmsts7b::MenuorvoluppushswtstsType_MAX;
constexpr int Scmsts7b::MenuorvoluppushswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_AcctimegapdecswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[134];
}
bool Scmsts7b_AcctimegapdecswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_AcctimegapdecswtstsType Scmsts7b::AccTimeGapDecSwtStsNotPressed;
constexpr Scmsts7b_AcctimegapdecswtstsType Scmsts7b::AccTimeGapDecSwtStsPressed;
constexpr Scmsts7b_AcctimegapdecswtstsType Scmsts7b::AccTimeGapDecSwtStsReserved;
constexpr Scmsts7b_AcctimegapdecswtstsType Scmsts7b::AccTimeGapDecSwtStsInvalid;
constexpr Scmsts7b_AcctimegapdecswtstsType Scmsts7b::AcctimegapdecswtstsType_MIN;
constexpr Scmsts7b_AcctimegapdecswtstsType Scmsts7b::AcctimegapdecswtstsType_MAX;
constexpr int Scmsts7b::AcctimegapdecswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_MenuripushswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[135];
}
bool Scmsts7b_MenuripushswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_MenuripushswtstsType Scmsts7b::MenuRiPushSwtStsNotPressed;
constexpr Scmsts7b_MenuripushswtstsType Scmsts7b::MenuRiPushSwtStsPressed;
constexpr Scmsts7b_MenuripushswtstsType Scmsts7b::MenuRiPushSwtStsReserved;
constexpr Scmsts7b_MenuripushswtstsType Scmsts7b::MenuRiPushSwtStsInvalid;
constexpr Scmsts7b_MenuripushswtstsType Scmsts7b::MenuripushswtstsType_MIN;
constexpr Scmsts7b_MenuripushswtstsType Scmsts7b::MenuripushswtstsType_MAX;
constexpr int Scmsts7b::MenuripushswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scmsts7b_AccsetswtstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[136];
}
bool Scmsts7b_AccsetswtstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scmsts7b_AccsetswtstsType Scmsts7b::AccSetSwtStsNotPressed;
constexpr Scmsts7b_AccsetswtstsType Scmsts7b::AccSetSwtStsPressed;
constexpr Scmsts7b_AccsetswtstsType Scmsts7b::AccSetSwtStsReserved;
constexpr Scmsts7b_AccsetswtstsType Scmsts7b::AccSetSwtStsInvalid;
constexpr Scmsts7b_AccsetswtstsType Scmsts7b::AccsetswtstsType_MIN;
constexpr Scmsts7b_AccsetswtstsType Scmsts7b::AccsetswtstsType_MAX;
constexpr int Scmsts7b::AccsetswtstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Accreq7f_AccdrvoffType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[137];
}
bool Accreq7f_AccdrvoffType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Accreq7f_AccdrvoffType Accreq7f::AccDrvoffNoRequest;
constexpr Accreq7f_AccdrvoffType Accreq7f::AccDrvoffRequest;
constexpr Accreq7f_AccdrvoffType Accreq7f::AccdrvoffType_MIN;
constexpr Accreq7f_AccdrvoffType Accreq7f::AccdrvoffType_MAX;
constexpr int Accreq7f::AccdrvoffType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Accreq7f_AccdestopType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[138];
}
bool Accreq7f_AccdestopType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Accreq7f_AccdestopType Accreq7f::AccDeStopNoRequest;
constexpr Accreq7f_AccdestopType Accreq7f::AccDeStoprequest;
constexpr Accreq7f_AccdestopType Accreq7f::AccdestopType_MIN;
constexpr Accreq7f_AccdestopType Accreq7f::AccdestopType_MAX;
constexpr int Accreq7f::AccdestopType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Accreq7f_AccmodeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[139];
}
bool Accreq7f_AccmodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Accreq7f_AccmodeType Accreq7f::AccModeOffMode;
constexpr Accreq7f_AccmodeType Accreq7f::AccModePassiveMode;
constexpr Accreq7f_AccmodeType Accreq7f::AccModeStandbyMode;
constexpr Accreq7f_AccmodeType Accreq7f::AccModeActiveControlMode;
constexpr Accreq7f_AccmodeType Accreq7f::AccModeBrakeOnlyMode;
constexpr Accreq7f_AccmodeType Accreq7f::AccModeOverrideMode;
constexpr Accreq7f_AccmodeType Accreq7f::AccModeStandstillMode;
constexpr Accreq7f_AccmodeType Accreq7f::AccModeFailureMode;
constexpr Accreq7f_AccmodeType Accreq7f::AccmodeType_MIN;
constexpr Accreq7f_AccmodeType Accreq7f::AccmodeType_MAX;
constexpr int Accreq7f::AccmodeType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Accreq7f_AcchvydecelType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[140];
}
bool Accreq7f_AcchvydecelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Accreq7f_AcchvydecelType Accreq7f::AccHvydecelNotRequest;
constexpr Accreq7f_AcchvydecelType Accreq7f::AccHvydecelrequest;
constexpr Accreq7f_AcchvydecelType Accreq7f::AcchvydecelType_MIN;
constexpr Accreq7f_AcchvydecelType Accreq7f::AcchvydecelType_MAX;
constexpr int Accreq7f::AcchvydecelType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Accreq7f_AccheavymodeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[141];
}
bool Accreq7f_AccheavymodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Accreq7f_AccheavymodeType Accreq7f::AccHeavymodeinactive;
constexpr Accreq7f_AccheavymodeType Accreq7f::AccHeavymodereserved1;
constexpr Accreq7f_AccheavymodeType Accreq7f::AccHeavymodereserved2;
constexpr Accreq7f_AccheavymodeType Accreq7f::AccHeavymodeactive;
constexpr Accreq7f_AccheavymodeType Accreq7f::AccheavymodeType_MIN;
constexpr Accreq7f_AccheavymodeType Accreq7f::AccheavymodeType_MAX;
constexpr int Accreq7f::AccheavymodeType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Motorsts0286_FrntmottqvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[142];
}
bool Motorsts0286_FrntmottqvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Motorsts0286_FrntmottqvalidType Motorsts0286::FrntMotTqValidvalid;
constexpr Motorsts0286_FrntmottqvalidType Motorsts0286::FrntMotTqValidinvalid;
constexpr Motorsts0286_FrntmottqvalidType Motorsts0286::FrntmottqvalidType_MIN;
constexpr Motorsts0286_FrntmottqvalidType Motorsts0286::FrntmottqvalidType_MAX;
constexpr int Motorsts0286::FrntmottqvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Motorsts0286_FrntmotspdvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[143];
}
bool Motorsts0286_FrntmotspdvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Motorsts0286_FrntmotspdvalidType Motorsts0286::FrntMotSpdValidvalid;
constexpr Motorsts0286_FrntmotspdvalidType Motorsts0286::FrntMotSpdValidinvalid;
constexpr Motorsts0286_FrntmotspdvalidType Motorsts0286::FrntmotspdvalidType_MIN;
constexpr Motorsts0286_FrntmotspdvalidType Motorsts0286::FrntmotspdvalidType_MAX;
constexpr int Motorsts0286::FrntmotspdvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Motorsts018e_RearmottqvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[144];
}
bool Motorsts018e_RearmottqvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Motorsts018e_RearmottqvalidType Motorsts018e::RearMotTqValidvalid;
constexpr Motorsts018e_RearmottqvalidType Motorsts018e::RearMotTqValidinvalid;
constexpr Motorsts018e_RearmottqvalidType Motorsts018e::RearmottqvalidType_MIN;
constexpr Motorsts018e_RearmottqvalidType Motorsts018e::RearmottqvalidType_MAX;
constexpr int Motorsts018e::RearmottqvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Motorsts018e_RearmotspdvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[145];
}
bool Motorsts018e_RearmotspdvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Motorsts018e_RearmotspdvalidType Motorsts018e::RearMotSpdValidvalid;
constexpr Motorsts018e_RearmotspdvalidType Motorsts018e::RearMotSpdValidinvalid;
constexpr Motorsts018e_RearmotspdvalidType Motorsts018e::RearmotspdvalidType_MIN;
constexpr Motorsts018e_RearmotspdvalidType Motorsts018e::RearmotspdvalidType_MAX;
constexpr int Motorsts018e::RearmotspdvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsreqc6_EpsreqtypType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[146];
}
bool Epsreqc6_EpsreqtypType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypNoRequest;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypReserved1DSR;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypTOIRequest;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypPAIRequest;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypDAIRequest;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypHI1Request;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypHI2Request;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypReserved7;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypReserved8;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypReserved9;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypReserved10;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypReserved11;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypReserved12;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypReserved13;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypReserved14;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EPSReqTypSignalNotAvailable;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EpsreqtypType_MIN;
constexpr Epsreqc6_EpsreqtypType Epsreqc6::EpsreqtypType_MAX;
constexpr int Epsreqc6::EpsreqtypType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsreqc6_SysvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[147];
}
bool Epsreqc6_SysvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsreqc6_SysvalidType Epsreqc6::SysValidInvalid;
constexpr Epsreqc6_SysvalidType Epsreqc6::SysValidValid;
constexpr Epsreqc6_SysvalidType Epsreqc6::SysvalidType_MIN;
constexpr Epsreqc6_SysvalidType Epsreqc6::SysvalidType_MAX;
constexpr int Epsreqc6::SysvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsreqc6_PilotsymType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[148];
}
bool Epsreqc6_PilotsymType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsreqc6_PilotsymType Epsreqc6::PilotSymNoSymbol;
constexpr Epsreqc6_PilotsymType Epsreqc6::PilotSymGraySymbol;
constexpr Epsreqc6_PilotsymType Epsreqc6::PilotSymWhiteSymbol;
constexpr Epsreqc6_PilotsymType Epsreqc6::PilotSymreserved;
constexpr Epsreqc6_PilotsymType Epsreqc6::PilotsymType_MIN;
constexpr Epsreqc6_PilotsymType Epsreqc6::PilotsymType_MAX;
constexpr int Epsreqc6::PilotsymType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsreqc6_AdcaccsymType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[149];
}
bool Epsreqc6_AdcaccsymType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsreqc6_AdcaccsymType Epsreqc6::AdcAccsymNoSymbol;
constexpr Epsreqc6_AdcaccsymType Epsreqc6::AdcAccsymGraySymbol;
constexpr Epsreqc6_AdcaccsymType Epsreqc6::AdcAccsymWhiteSymbol;
constexpr Epsreqc6_AdcaccsymType Epsreqc6::AdcAccsymreserved;
constexpr Epsreqc6_AdcaccsymType Epsreqc6::AdcaccsymType_MIN;
constexpr Epsreqc6_AdcaccsymType Epsreqc6::AdcaccsymType_MAX;
constexpr int Epsreqc6::AdcaccsymType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus01d5_EpswarnlampType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[150];
}
bool Epsstatus01d5_EpswarnlampType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus01d5_EpswarnlampType Epsstatus01d5::EPSwarnLampoff;
constexpr Epsstatus01d5_EpswarnlampType Epsstatus01d5::EPSwarnLampon;
constexpr Epsstatus01d5_EpswarnlampType Epsstatus01d5::EPSwarnLampNotAvailable;
constexpr Epsstatus01d5_EpswarnlampType Epsstatus01d5::EPSwarnLampreserved;
constexpr Epsstatus01d5_EpswarnlampType Epsstatus01d5::EpswarnlampType_MIN;
constexpr Epsstatus01d5_EpswarnlampType Epsstatus01d5::EpswarnlampType_MAX;
constexpr int Epsstatus01d5::EpswarnlampType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus01d5_AbsagreqavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[151];
}
bool Epsstatus01d5_AbsagreqavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus01d5_AbsagreqavlType Epsstatus01d5::AbsAgreqavlNotAvailable;
constexpr Epsstatus01d5_AbsagreqavlType Epsstatus01d5::AbsAgreqavlavailable;
constexpr Epsstatus01d5_AbsagreqavlType Epsstatus01d5::AbsagreqavlType_MIN;
constexpr Epsstatus01d5_AbsagreqavlType Epsstatus01d5::AbsagreqavlType_MAX;
constexpr int Epsstatus01d5::AbsagreqavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus01d5_EpsstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[152];
}
bool Epsstatus01d5_EpsstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus01d5_EpsstsType Epsstatus01d5::EPSstsinit;
constexpr Epsstatus01d5_EpsstsType Epsstatus01d5::EPSstsnormal;
constexpr Epsstatus01d5_EpsstsType Epsstatus01d5::EPSstsDegradedDueToTempOrVol;
constexpr Epsstatus01d5_EpsstsType Epsstatus01d5::EPSstsTemporaryError;
constexpr Epsstatus01d5_EpsstsType Epsstatus01d5::EPSstsPermamemtError;
constexpr Epsstatus01d5_EpsstsType Epsstatus01d5::EPSstsreserved5;
constexpr Epsstatus01d5_EpsstsType Epsstatus01d5::EPSstsreserved6;
constexpr Epsstatus01d5_EpsstsType Epsstatus01d5::EPSstsinvalid;
constexpr Epsstatus01d5_EpsstsType Epsstatus01d5::EpsstsType_MIN;
constexpr Epsstatus01d5_EpsstsType Epsstatus01d5::EpsstsType_MAX;
constexpr int Epsstatus01d5::EpsstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus01d5_EpsmodType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[153];
}
bool Epsstatus01d5_EpsmodType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus01d5_EpsmodType Epsstatus01d5::EPSModNone;
constexpr Epsstatus01d5_EpsmodType Epsstatus01d5::EPSModPAI;
constexpr Epsstatus01d5_EpsmodType Epsstatus01d5::EPSModDAI;
constexpr Epsstatus01d5_EpsmodType Epsstatus01d5::EPSModTOI;
constexpr Epsstatus01d5_EpsmodType Epsstatus01d5::EPSModinvalid;
constexpr Epsstatus01d5_EpsmodType Epsstatus01d5::EpsmodType_MIN;
constexpr Epsstatus01d5_EpsmodType Epsstatus01d5::EpsmodType_MAX;
constexpr int Epsstatus01d5::EpsmodType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus01d5_SteeragspddirType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[154];
}
bool Epsstatus01d5_SteeragspddirType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus01d5_SteeragspddirType Epsstatus01d5::SteeragspddirLeftPlus;
constexpr Epsstatus01d5_SteeragspddirType Epsstatus01d5::SteeragspddirRightMinus;
constexpr Epsstatus01d5_SteeragspddirType Epsstatus01d5::SteeragspddirType_MIN;
constexpr Epsstatus01d5_SteeragspddirType Epsstatus01d5::SteeragspddirType_MAX;
constexpr int Epsstatus01d5::SteeragspddirType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus01d5_SteerangledirType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[155];
}
bool Epsstatus01d5_SteerangledirType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus01d5_SteerangledirType Epsstatus01d5::SteerAngledirLeftPlus;
constexpr Epsstatus01d5_SteerangledirType Epsstatus01d5::SteerAngledirRightMinus;
constexpr Epsstatus01d5_SteerangledirType Epsstatus01d5::SteerangledirType_MIN;
constexpr Epsstatus01d5_SteerangledirType Epsstatus01d5::SteerangledirType_MAX;
constexpr int Epsstatus01d5::SteerangledirType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus01d5_SteerangleandspdvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[156];
}
bool Epsstatus01d5_SteerangleandspdvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus01d5_SteerangleandspdvalidType Epsstatus01d5::SteerAngleandspdvalidvalid;
constexpr Epsstatus01d5_SteerangleandspdvalidType Epsstatus01d5::SteerAngleandspdvalidinvalid;
constexpr Epsstatus01d5_SteerangleandspdvalidType Epsstatus01d5::SteerangleandspdvalidType_MIN;
constexpr Epsstatus01d5_SteerangleandspdvalidType Epsstatus01d5::SteerangleandspdvalidType_MAX;
constexpr int Epsstatus01d5::SteerangleandspdvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus02d6_EpstqreqavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[157];
}
bool Epsstatus02d6_EpstqreqavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus02d6_EpstqreqavlType Epsstatus02d6::EpsTqreqavlNotAvailable;
constexpr Epsstatus02d6_EpstqreqavlType Epsstatus02d6::EpsTqreqavlAvailable;
constexpr Epsstatus02d6_EpstqreqavlType Epsstatus02d6::EpstqreqavlType_MIN;
constexpr Epsstatus02d6_EpstqreqavlType Epsstatus02d6::EpstqreqavlType_MAX;
constexpr int Epsstatus02d6::EpstqreqavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus02d6_EpspinionangreqavlType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[158];
}
bool Epsstatus02d6_EpspinionangreqavlType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus02d6_EpspinionangreqavlType Epsstatus02d6::EpsPinionangreqavlNotAvailable;
constexpr Epsstatus02d6_EpspinionangreqavlType Epsstatus02d6::EpsPinionangreqavlAvailable;
constexpr Epsstatus02d6_EpspinionangreqavlType Epsstatus02d6::EpspinionangreqavlType_MIN;
constexpr Epsstatus02d6_EpspinionangreqavlType Epsstatus02d6::EpspinionangreqavlType_MAX;
constexpr int Epsstatus02d6::EpspinionangreqavlType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus02d6_EpshandsoffdetnconfidenceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[159];
}
bool Epsstatus02d6_EpshandsoffdetnconfidenceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOn;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel1;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel2;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel3;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel4;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel5;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel6;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel7;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel8;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel9;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel10;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel11;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel12;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel13;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceHandsOffConfidenceLevel14;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpsHandsoffdetnconfidenceSignalNotAvalible;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpshandsoffdetnconfidenceType_MIN;
constexpr Epsstatus02d6_EpshandsoffdetnconfidenceType Epsstatus02d6::EpshandsoffdetnconfidenceType_MAX;
constexpr int Epsstatus02d6::EpshandsoffdetnconfidenceType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus02d6_EpspinionagvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[160];
}
bool Epsstatus02d6_EpspinionagvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus02d6_EpspinionagvalidType Epsstatus02d6::EpsPinionagvalidValid;
constexpr Epsstatus02d6_EpspinionagvalidType Epsstatus02d6::EpsPinionagvalidInvalid;
constexpr Epsstatus02d6_EpspinionagvalidType Epsstatus02d6::EpsPinionagvalidSignalNotAvailable;
constexpr Epsstatus02d6_EpspinionagvalidType Epsstatus02d6::EpsPinionagvalidReserved;
constexpr Epsstatus02d6_EpspinionagvalidType Epsstatus02d6::EpspinionagvalidType_MIN;
constexpr Epsstatus02d6_EpspinionagvalidType Epsstatus02d6::EpspinionagvalidType_MAX;
constexpr int Epsstatus02d6::EpspinionagvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus02d6_EpsdrvoverridedetnType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[161];
}
bool Epsstatus02d6_EpsdrvoverridedetnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus02d6_EpsdrvoverridedetnType Epsstatus02d6::EpsDrvoverridedetnOverrideDetected;
constexpr Epsstatus02d6_EpsdrvoverridedetnType Epsstatus02d6::EpsDrvoverridedetnOverrideNotDetected;
constexpr Epsstatus02d6_EpsdrvoverridedetnType Epsstatus02d6::EpsDrvoverridedetnSignalNotAvailable;
constexpr Epsstatus02d6_EpsdrvoverridedetnType Epsstatus02d6::EpsDrvoverridedetnNoActiveADCRequest;
constexpr Epsstatus02d6_EpsdrvoverridedetnType Epsstatus02d6::EpsdrvoverridedetnType_MIN;
constexpr Epsstatus02d6_EpsdrvoverridedetnType Epsstatus02d6::EpsdrvoverridedetnType_MAX;
constexpr int Epsstatus02d6::EpsdrvoverridedetnType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus02d6_EpsmotortqvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[162];
}
bool Epsstatus02d6_EpsmotortqvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus02d6_EpsmotortqvalidType Epsstatus02d6::EpsMotortqvalidValid;
constexpr Epsstatus02d6_EpsmotortqvalidType Epsstatus02d6::EpsMotortqvalidInvalid;
constexpr Epsstatus02d6_EpsmotortqvalidType Epsstatus02d6::EpsMotortqvalidSignalNotAvailable;
constexpr Epsstatus02d6_EpsmotortqvalidType Epsstatus02d6::EpsMotortqvalidReserved;
constexpr Epsstatus02d6_EpsmotortqvalidType Epsstatus02d6::EpsmotortqvalidType_MIN;
constexpr Epsstatus02d6_EpsmotortqvalidType Epsstatus02d6::EpsmotortqvalidType_MAX;
constexpr int Epsstatus02d6::EpsmotortqvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Epsstatus02d6_EpsestrackforcevalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_nio_2eproto);
  return file_level_enum_descriptors_nio_2eproto[163];
}
bool Epsstatus02d6_EpsestrackforcevalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Epsstatus02d6_EpsestrackforcevalidType Epsstatus02d6::EpsEstrackforcevalidValid;
constexpr Epsstatus02d6_EpsestrackforcevalidType Epsstatus02d6::EpsEstrackforcevalidInvalid;
constexpr Epsstatus02d6_EpsestrackforcevalidType Epsstatus02d6::EpsEstrackforcevalidSignalNotAvailable;
constexpr Epsstatus02d6_EpsestrackforcevalidType Epsstatus02d6::EpsEstrackforcevalidReserved;
constexpr Epsstatus02d6_EpsestrackforcevalidType Epsstatus02d6::EpsestrackforcevalidType_MIN;
constexpr Epsstatus02d6_EpsestrackforcevalidType Epsstatus02d6::EpsestrackforcevalidType_MAX;
constexpr int Epsstatus02d6::EpsestrackforcevalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class Avpreq15e::_Internal {
 public:
  using HasBits = decltype(std::declval<Avpreq15e>()._has_bits_);
  static void set_has_avpapaparkmod(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_avpnbssts(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_avpadcvcunbssts(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_avpapasts(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_avpbrkmodsts(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_avpspdlmt(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_avpgearreqactv(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_avpmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_avpcrc(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_avpdstreq(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_avptargearreq(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_avpcrtlmode(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
};

Avpreq15e::Avpreq15e(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Avpreq15e)
}
Avpreq15e::Avpreq15e(const Avpreq15e& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&avpapaparkmod_, &from.avpapaparkmod_,
    static_cast<size_t>(reinterpret_cast<char*>(&avpcrtlmode_) -
    reinterpret_cast<char*>(&avpapaparkmod_)) + sizeof(avpcrtlmode_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Avpreq15e)
}

void Avpreq15e::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&avpapaparkmod_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&avpcrtlmode_) -
      reinterpret_cast<char*>(&avpapaparkmod_)) + sizeof(avpcrtlmode_));
}

Avpreq15e::~Avpreq15e() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Avpreq15e)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Avpreq15e::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Avpreq15e::ArenaDtor(void* object) {
  Avpreq15e* _this = reinterpret_cast< Avpreq15e* >(object);
  (void)_this;
}
void Avpreq15e::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Avpreq15e::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Avpreq15e& Avpreq15e::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Avpreq15e_nio_2eproto.base);
  return *internal_default_instance();
}


void Avpreq15e::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Avpreq15e)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&avpapaparkmod_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&avpmsgcntr_) -
        reinterpret_cast<char*>(&avpapaparkmod_)) + sizeof(avpmsgcntr_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&avpcrc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&avpcrtlmode_) -
        reinterpret_cast<char*>(&avpcrc_)) + sizeof(avpcrtlmode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Avpreq15e::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Avpreq15e.AvpapaparkmodType avpapaparkmod = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Avpreq15e_AvpapaparkmodType_IsValid(val))) {
            _internal_set_avpapaparkmod(static_cast<::apollo::canbus::Avpreq15e_AvpapaparkmodType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Avpreq15e.AvpnbsstsType avpnbssts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Avpreq15e_AvpnbsstsType_IsValid(val))) {
            _internal_set_avpnbssts(static_cast<::apollo::canbus::Avpreq15e_AvpnbsstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Avpreq15e.AvpadcvcunbsstsType avpadcvcunbssts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Avpreq15e_AvpadcvcunbsstsType_IsValid(val))) {
            _internal_set_avpadcvcunbssts(static_cast<::apollo::canbus::Avpreq15e_AvpadcvcunbsstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Avpreq15e.AvpapastsType avpapasts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Avpreq15e_AvpapastsType_IsValid(val))) {
            _internal_set_avpapasts(static_cast<::apollo::canbus::Avpreq15e_AvpapastsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Avpreq15e.AvpbrkmodstsType avpbrkmodsts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Avpreq15e_AvpbrkmodstsType_IsValid(val))) {
            _internal_set_avpbrkmodsts(static_cast<::apollo::canbus::Avpreq15e_AvpbrkmodstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double avpspdlmt = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          _Internal::set_has_avpspdlmt(&has_bits);
          avpspdlmt_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional bool avpgearreqactv = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_avpgearreqactv(&has_bits);
          avpgearreqactv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 avpmsgcntr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_avpmsgcntr(&has_bits);
          avpmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 avpcrc = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_avpcrc(&has_bits);
          avpcrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 avpdstreq = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_avpdstreq(&has_bits);
          avpdstreq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Avpreq15e.AvptargearreqType avptargearreq = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Avpreq15e_AvptargearreqType_IsValid(val))) {
            _internal_set_avptargearreq(static_cast<::apollo::canbus::Avpreq15e_AvptargearreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Avpreq15e.AvpcrtlmodeType avpcrtlmode = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Avpreq15e_AvpcrtlmodeType_IsValid(val))) {
            _internal_set_avpcrtlmode(static_cast<::apollo::canbus::Avpreq15e_AvpcrtlmodeType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Avpreq15e::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Avpreq15e)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Avpreq15e.AvpapaparkmodType avpapaparkmod = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_avpapaparkmod(), target);
  }

  // optional .apollo.canbus.Avpreq15e.AvpnbsstsType avpnbssts = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_avpnbssts(), target);
  }

  // optional .apollo.canbus.Avpreq15e.AvpadcvcunbsstsType avpadcvcunbssts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_avpadcvcunbssts(), target);
  }

  // optional .apollo.canbus.Avpreq15e.AvpapastsType avpapasts = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_avpapasts(), target);
  }

  // optional .apollo.canbus.Avpreq15e.AvpbrkmodstsType avpbrkmodsts = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_avpbrkmodsts(), target);
  }

  // optional double avpspdlmt = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_avpspdlmt(), target);
  }

  // optional bool avpgearreqactv = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_avpgearreqactv(), target);
  }

  // optional int32 avpmsgcntr = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_avpmsgcntr(), target);
  }

  // optional int32 avpcrc = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_avpcrc(), target);
  }

  // optional int32 avpdstreq = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_avpdstreq(), target);
  }

  // optional .apollo.canbus.Avpreq15e.AvptargearreqType avptargearreq = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_avptargearreq(), target);
  }

  // optional .apollo.canbus.Avpreq15e.AvpcrtlmodeType avpcrtlmode = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_avpcrtlmode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Avpreq15e)
  return target;
}

size_t Avpreq15e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Avpreq15e)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Avpreq15e.AvpapaparkmodType avpapaparkmod = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_avpapaparkmod());
    }

    // optional .apollo.canbus.Avpreq15e.AvpnbsstsType avpnbssts = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_avpnbssts());
    }

    // optional .apollo.canbus.Avpreq15e.AvpadcvcunbsstsType avpadcvcunbssts = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_avpadcvcunbssts());
    }

    // optional .apollo.canbus.Avpreq15e.AvpapastsType avpapasts = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_avpapasts());
    }

    // optional double avpspdlmt = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Avpreq15e.AvpbrkmodstsType avpbrkmodsts = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_avpbrkmodsts());
    }

    // optional bool avpgearreqactv = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional int32 avpmsgcntr = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_avpmsgcntr());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional int32 avpcrc = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_avpcrc());
    }

    // optional int32 avpdstreq = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_avpdstreq());
    }

    // optional .apollo.canbus.Avpreq15e.AvptargearreqType avptargearreq = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_avptargearreq());
    }

    // optional .apollo.canbus.Avpreq15e.AvpcrtlmodeType avpcrtlmode = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_avpcrtlmode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Avpreq15e::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Avpreq15e)
  GOOGLE_DCHECK_NE(&from, this);
  const Avpreq15e* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Avpreq15e>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Avpreq15e)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Avpreq15e)
    MergeFrom(*source);
  }
}

void Avpreq15e::MergeFrom(const Avpreq15e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Avpreq15e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      avpapaparkmod_ = from.avpapaparkmod_;
    }
    if (cached_has_bits & 0x00000002u) {
      avpnbssts_ = from.avpnbssts_;
    }
    if (cached_has_bits & 0x00000004u) {
      avpadcvcunbssts_ = from.avpadcvcunbssts_;
    }
    if (cached_has_bits & 0x00000008u) {
      avpapasts_ = from.avpapasts_;
    }
    if (cached_has_bits & 0x00000010u) {
      avpspdlmt_ = from.avpspdlmt_;
    }
    if (cached_has_bits & 0x00000020u) {
      avpbrkmodsts_ = from.avpbrkmodsts_;
    }
    if (cached_has_bits & 0x00000040u) {
      avpgearreqactv_ = from.avpgearreqactv_;
    }
    if (cached_has_bits & 0x00000080u) {
      avpmsgcntr_ = from.avpmsgcntr_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      avpcrc_ = from.avpcrc_;
    }
    if (cached_has_bits & 0x00000200u) {
      avpdstreq_ = from.avpdstreq_;
    }
    if (cached_has_bits & 0x00000400u) {
      avptargearreq_ = from.avptargearreq_;
    }
    if (cached_has_bits & 0x00000800u) {
      avpcrtlmode_ = from.avpcrtlmode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Avpreq15e::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Avpreq15e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Avpreq15e::CopyFrom(const Avpreq15e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Avpreq15e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Avpreq15e::IsInitialized() const {
  return true;
}

void Avpreq15e::InternalSwap(Avpreq15e* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Avpreq15e, avpcrtlmode_)
      + sizeof(Avpreq15e::avpcrtlmode_)
      - PROTOBUF_FIELD_OFFSET(Avpreq15e, avpapaparkmod_)>(
          reinterpret_cast<char*>(&avpapaparkmod_),
          reinterpret_cast<char*>(&other->avpapaparkmod_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Avpreq15e::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Vcusts01218::_Internal {
 public:
  using HasBits = decltype(std::declval<Vcusts01218>()._has_bits_);
  static void set_has_vcunbssts(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_vcuvlcsts(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_vcullcsts(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_taggearvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_taggear(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_actualgearvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_actualgear(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_vcu17msgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_vcu17crc(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_vcuepfail(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_vcumodind(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
};

Vcusts01218::Vcusts01218(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Vcusts01218)
}
Vcusts01218::Vcusts01218(const Vcusts01218& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&vcunbssts_, &from.vcunbssts_,
    static_cast<size_t>(reinterpret_cast<char*>(&vcumodind_) -
    reinterpret_cast<char*>(&vcunbssts_)) + sizeof(vcumodind_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcusts01218)
}

void Vcusts01218::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&vcunbssts_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&vcumodind_) -
      reinterpret_cast<char*>(&vcunbssts_)) + sizeof(vcumodind_));
}

Vcusts01218::~Vcusts01218() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcusts01218)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vcusts01218::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Vcusts01218::ArenaDtor(void* object) {
  Vcusts01218* _this = reinterpret_cast< Vcusts01218* >(object);
  (void)_this;
}
void Vcusts01218::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vcusts01218::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vcusts01218& Vcusts01218::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vcusts01218_nio_2eproto.base);
  return *internal_default_instance();
}


void Vcusts01218::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcusts01218)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&vcunbssts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vcu17msgcntr_) -
        reinterpret_cast<char*>(&vcunbssts_)) + sizeof(vcu17msgcntr_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&vcu17crc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vcumodind_) -
        reinterpret_cast<char*>(&vcu17crc_)) + sizeof(vcumodind_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vcusts01218::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Vcusts01218.VcunbsstsType vcunbssts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcusts01218_VcunbsstsType_IsValid(val))) {
            _internal_set_vcunbssts(static_cast<::apollo::canbus::Vcusts01218_VcunbsstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 vcuvlcsts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_vcuvlcsts(&has_bits);
          vcuvlcsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vcullcsts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_vcullcsts(&has_bits);
          vcullcsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcusts01218.TaggearvalidType taggearvalid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcusts01218_TaggearvalidType_IsValid(val))) {
            _internal_set_taggearvalid(static_cast<::apollo::canbus::Vcusts01218_TaggearvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 taggear = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_taggear(&has_bits);
          taggear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcusts01218.ActualgearvalidType actualgearvalid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcusts01218_ActualgearvalidType_IsValid(val))) {
            _internal_set_actualgearvalid(static_cast<::apollo::canbus::Vcusts01218_ActualgearvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcusts01218.ActualgearType actualgear = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcusts01218_ActualgearType_IsValid(val))) {
            _internal_set_actualgear(static_cast<::apollo::canbus::Vcusts01218_ActualgearType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 vcu17msgcntr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_vcu17msgcntr(&has_bits);
          vcu17msgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vcu17crc = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_vcu17crc(&has_bits);
          vcu17crc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcusts01218.VcuepfailType vcuepfail = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcusts01218_VcuepfailType_IsValid(val))) {
            _internal_set_vcuepfail(static_cast<::apollo::canbus::Vcusts01218_VcuepfailType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcusts01218.VcumodindType vcumodind = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcusts01218_VcumodindType_IsValid(val))) {
            _internal_set_vcumodind(static_cast<::apollo::canbus::Vcusts01218_VcumodindType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vcusts01218::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcusts01218)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Vcusts01218.VcunbsstsType vcunbssts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_vcunbssts(), target);
  }

  // optional int32 vcuvlcsts = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_vcuvlcsts(), target);
  }

  // optional int32 vcullcsts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_vcullcsts(), target);
  }

  // optional .apollo.canbus.Vcusts01218.TaggearvalidType taggearvalid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_taggearvalid(), target);
  }

  // optional int32 taggear = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_taggear(), target);
  }

  // optional .apollo.canbus.Vcusts01218.ActualgearvalidType actualgearvalid = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_actualgearvalid(), target);
  }

  // optional .apollo.canbus.Vcusts01218.ActualgearType actualgear = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_actualgear(), target);
  }

  // optional int32 vcu17msgcntr = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_vcu17msgcntr(), target);
  }

  // optional int32 vcu17crc = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_vcu17crc(), target);
  }

  // optional .apollo.canbus.Vcusts01218.VcuepfailType vcuepfail = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_vcuepfail(), target);
  }

  // optional .apollo.canbus.Vcusts01218.VcumodindType vcumodind = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_vcumodind(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcusts01218)
  return target;
}

size_t Vcusts01218::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcusts01218)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Vcusts01218.VcunbsstsType vcunbssts = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_vcunbssts());
    }

    // optional int32 vcuvlcsts = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vcuvlcsts());
    }

    // optional int32 vcullcsts = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vcullcsts());
    }

    // optional .apollo.canbus.Vcusts01218.TaggearvalidType taggearvalid = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_taggearvalid());
    }

    // optional int32 taggear = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_taggear());
    }

    // optional .apollo.canbus.Vcusts01218.ActualgearvalidType actualgearvalid = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_actualgearvalid());
    }

    // optional .apollo.canbus.Vcusts01218.ActualgearType actualgear = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_actualgear());
    }

    // optional int32 vcu17msgcntr = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vcu17msgcntr());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional int32 vcu17crc = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vcu17crc());
    }

    // optional .apollo.canbus.Vcusts01218.VcuepfailType vcuepfail = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_vcuepfail());
    }

    // optional .apollo.canbus.Vcusts01218.VcumodindType vcumodind = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_vcumodind());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vcusts01218::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vcusts01218)
  GOOGLE_DCHECK_NE(&from, this);
  const Vcusts01218* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vcusts01218>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vcusts01218)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vcusts01218)
    MergeFrom(*source);
  }
}

void Vcusts01218::MergeFrom(const Vcusts01218& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcusts01218)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      vcunbssts_ = from.vcunbssts_;
    }
    if (cached_has_bits & 0x00000002u) {
      vcuvlcsts_ = from.vcuvlcsts_;
    }
    if (cached_has_bits & 0x00000004u) {
      vcullcsts_ = from.vcullcsts_;
    }
    if (cached_has_bits & 0x00000008u) {
      taggearvalid_ = from.taggearvalid_;
    }
    if (cached_has_bits & 0x00000010u) {
      taggear_ = from.taggear_;
    }
    if (cached_has_bits & 0x00000020u) {
      actualgearvalid_ = from.actualgearvalid_;
    }
    if (cached_has_bits & 0x00000040u) {
      actualgear_ = from.actualgear_;
    }
    if (cached_has_bits & 0x00000080u) {
      vcu17msgcntr_ = from.vcu17msgcntr_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      vcu17crc_ = from.vcu17crc_;
    }
    if (cached_has_bits & 0x00000200u) {
      vcuepfail_ = from.vcuepfail_;
    }
    if (cached_has_bits & 0x00000400u) {
      vcumodind_ = from.vcumodind_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcusts01218::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vcusts01218)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vcusts01218::CopyFrom(const Vcusts01218& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcusts01218)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcusts01218::IsInitialized() const {
  return true;
}

void Vcusts01218::InternalSwap(Vcusts01218* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vcusts01218, vcumodind_)
      + sizeof(Vcusts01218::vcumodind_)
      - PROTOBUF_FIELD_OFFSET(Vcusts01218, vcunbssts_)>(
          reinterpret_cast<char*>(&vcunbssts_),
          reinterpret_cast<char*>(&other->vcunbssts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vcusts01218::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Vcusts0221c::_Internal {
 public:
  using HasBits = decltype(std::declval<Vcusts0221c>()._has_bits_);
  static void set_has_accpedelftravelvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_accpedelftravel(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_accpedacttravelvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_accpedacttravel(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_vcu4msgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_vcu4crc(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

Vcusts0221c::Vcusts0221c(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Vcusts0221c)
}
Vcusts0221c::Vcusts0221c(const Vcusts0221c& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&accpedelftravel_, &from.accpedelftravel_,
    static_cast<size_t>(reinterpret_cast<char*>(&vcu4crc_) -
    reinterpret_cast<char*>(&accpedelftravel_)) + sizeof(vcu4crc_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vcusts0221c)
}

void Vcusts0221c::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&accpedelftravel_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&vcu4crc_) -
      reinterpret_cast<char*>(&accpedelftravel_)) + sizeof(vcu4crc_));
}

Vcusts0221c::~Vcusts0221c() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vcusts0221c)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vcusts0221c::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Vcusts0221c::ArenaDtor(void* object) {
  Vcusts0221c* _this = reinterpret_cast< Vcusts0221c* >(object);
  (void)_this;
}
void Vcusts0221c::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vcusts0221c::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vcusts0221c& Vcusts0221c::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vcusts0221c_nio_2eproto.base);
  return *internal_default_instance();
}


void Vcusts0221c::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vcusts0221c)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&accpedelftravel_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vcu4crc_) -
        reinterpret_cast<char*>(&accpedelftravel_)) + sizeof(vcu4crc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vcusts0221c::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Vcusts0221c.AccpedelftravelvalidType accpedelftravelvalid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcusts0221c_AccpedelftravelvalidType_IsValid(val))) {
            _internal_set_accpedelftravelvalid(static_cast<::apollo::canbus::Vcusts0221c_AccpedelftravelvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double accpedelftravel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_accpedelftravel(&has_bits);
          accpedelftravel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcusts0221c.AccpedacttravelvalidType accpedacttravelvalid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vcusts0221c_AccpedacttravelvalidType_IsValid(val))) {
            _internal_set_accpedacttravelvalid(static_cast<::apollo::canbus::Vcusts0221c_AccpedacttravelvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double accpedacttravel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_accpedacttravel(&has_bits);
          accpedacttravel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional int32 vcu4msgcntr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_vcu4msgcntr(&has_bits);
          vcu4msgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vcu4crc = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_vcu4crc(&has_bits);
          vcu4crc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vcusts0221c::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vcusts0221c)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Vcusts0221c.AccpedelftravelvalidType accpedelftravelvalid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_accpedelftravelvalid(), target);
  }

  // optional double accpedelftravel = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_accpedelftravel(), target);
  }

  // optional .apollo.canbus.Vcusts0221c.AccpedacttravelvalidType accpedacttravelvalid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_accpedacttravelvalid(), target);
  }

  // optional double accpedacttravel = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_accpedacttravel(), target);
  }

  // optional int32 vcu4msgcntr = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_vcu4msgcntr(), target);
  }

  // optional int32 vcu4crc = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_vcu4crc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vcusts0221c)
  return target;
}

size_t Vcusts0221c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vcusts0221c)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional double accpedelftravel = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Vcusts0221c.AccpedelftravelvalidType accpedelftravelvalid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_accpedelftravelvalid());
    }

    // optional .apollo.canbus.Vcusts0221c.AccpedacttravelvalidType accpedacttravelvalid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_accpedacttravelvalid());
    }

    // optional double accpedacttravel = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional int32 vcu4msgcntr = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vcu4msgcntr());
    }

    // optional int32 vcu4crc = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vcu4crc());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vcusts0221c::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vcusts0221c)
  GOOGLE_DCHECK_NE(&from, this);
  const Vcusts0221c* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vcusts0221c>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vcusts0221c)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vcusts0221c)
    MergeFrom(*source);
  }
}

void Vcusts0221c::MergeFrom(const Vcusts0221c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vcusts0221c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      accpedelftravel_ = from.accpedelftravel_;
    }
    if (cached_has_bits & 0x00000002u) {
      accpedelftravelvalid_ = from.accpedelftravelvalid_;
    }
    if (cached_has_bits & 0x00000004u) {
      accpedacttravelvalid_ = from.accpedacttravelvalid_;
    }
    if (cached_has_bits & 0x00000008u) {
      accpedacttravel_ = from.accpedacttravel_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu4msgcntr_ = from.vcu4msgcntr_;
    }
    if (cached_has_bits & 0x00000020u) {
      vcu4crc_ = from.vcu4crc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vcusts0221c::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vcusts0221c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vcusts0221c::CopyFrom(const Vcusts0221c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vcusts0221c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vcusts0221c::IsInitialized() const {
  return true;
}

void Vcusts0221c::InternalSwap(Vcusts0221c* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vcusts0221c, vcu4crc_)
      + sizeof(Vcusts0221c::vcu4crc_)
      - PROTOBUF_FIELD_OFFSET(Vcusts0221c, accpedelftravel_)>(
          reinterpret_cast<char*>(&accpedelftravel_),
          reinterpret_cast<char*>(&other->accpedelftravel_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vcusts0221c::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Brkdrvstatus24c::_Internal {
 public:
  using HasBits = decltype(std::declval<Brkdrvstatus24c>()._has_bits_);
  static void set_has_brkmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_brkpressurests(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_brkpressure(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_longaccvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_vehspdsts(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_vehspddir(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_vehspd(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_epbswsts(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_drvstate(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_brkpedlsts(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_brklists(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_epbfaillamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_epbwarnlamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
};

Brkdrvstatus24c::Brkdrvstatus24c(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Brkdrvstatus24c)
}
Brkdrvstatus24c::Brkdrvstatus24c(const Brkdrvstatus24c& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&brkmsgcntr_, &from.brkmsgcntr_,
    static_cast<size_t>(reinterpret_cast<char*>(&epbwarnlamp_) -
    reinterpret_cast<char*>(&brkmsgcntr_)) + sizeof(epbwarnlamp_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Brkdrvstatus24c)
}

void Brkdrvstatus24c::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&brkmsgcntr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&epbwarnlamp_) -
      reinterpret_cast<char*>(&brkmsgcntr_)) + sizeof(epbwarnlamp_));
}

Brkdrvstatus24c::~Brkdrvstatus24c() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Brkdrvstatus24c)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Brkdrvstatus24c::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Brkdrvstatus24c::ArenaDtor(void* object) {
  Brkdrvstatus24c* _this = reinterpret_cast< Brkdrvstatus24c* >(object);
  (void)_this;
}
void Brkdrvstatus24c::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Brkdrvstatus24c::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Brkdrvstatus24c& Brkdrvstatus24c::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Brkdrvstatus24c_nio_2eproto.base);
  return *internal_default_instance();
}


void Brkdrvstatus24c::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Brkdrvstatus24c)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&brkmsgcntr_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&epbswsts_) -
        reinterpret_cast<char*>(&brkmsgcntr_)) + sizeof(epbswsts_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&drvstate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&epbwarnlamp_) -
        reinterpret_cast<char*>(&drvstate_)) + sizeof(epbwarnlamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Brkdrvstatus24c::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 brkmsgcntr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_brkmsgcntr(&has_bits);
          brkmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brkdrvstatus24c.BrkpressurestsType brkpressurests = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brkdrvstatus24c_BrkpressurestsType_IsValid(val))) {
            _internal_set_brkpressurests(static_cast<::apollo::canbus::Brkdrvstatus24c_BrkpressurestsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double brkpressure = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_brkpressure(&has_bits);
          brkpressure_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double longaccvalue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_longaccvalue(&has_bits);
          longaccvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brkdrvstatus24c.VehspdstsType vehspdsts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brkdrvstatus24c_VehspdstsType_IsValid(val))) {
            _internal_set_vehspdsts(static_cast<::apollo::canbus::Brkdrvstatus24c_VehspdstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brkdrvstatus24c.VehspddirType vehspddir = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brkdrvstatus24c_VehspddirType_IsValid(val))) {
            _internal_set_vehspddir(static_cast<::apollo::canbus::Brkdrvstatus24c_VehspddirType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 vehspd = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_vehspd(&has_bits);
          vehspd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brkdrvstatus24c.EpbswstsType epbswsts = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brkdrvstatus24c_EpbswstsType_IsValid(val))) {
            _internal_set_epbswsts(static_cast<::apollo::canbus::Brkdrvstatus24c_EpbswstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brkdrvstatus24c.DrvstateType drvstate = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brkdrvstatus24c_DrvstateType_IsValid(val))) {
            _internal_set_drvstate(static_cast<::apollo::canbus::Brkdrvstatus24c_DrvstateType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brkdrvstatus24c.BrkpedlstsType brkpedlsts = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brkdrvstatus24c_BrkpedlstsType_IsValid(val))) {
            _internal_set_brkpedlsts(static_cast<::apollo::canbus::Brkdrvstatus24c_BrkpedlstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brkdrvstatus24c.BrklistsType brklists = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brkdrvstatus24c_BrklistsType_IsValid(val))) {
            _internal_set_brklists(static_cast<::apollo::canbus::Brkdrvstatus24c_BrklistsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brkdrvstatus24c.EpbfaillampType epbfaillamp = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brkdrvstatus24c_EpbfaillampType_IsValid(val))) {
            _internal_set_epbfaillamp(static_cast<::apollo::canbus::Brkdrvstatus24c_EpbfaillampType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brkdrvstatus24c.EpbwarnlampType epbwarnlamp = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Brkdrvstatus24c_EpbwarnlampType_IsValid(val))) {
            _internal_set_epbwarnlamp(static_cast<::apollo::canbus::Brkdrvstatus24c_EpbwarnlampType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(13, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Brkdrvstatus24c::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Brkdrvstatus24c)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 brkmsgcntr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_brkmsgcntr(), target);
  }

  // optional .apollo.canbus.Brkdrvstatus24c.BrkpressurestsType brkpressurests = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_brkpressurests(), target);
  }

  // optional double brkpressure = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_brkpressure(), target);
  }

  // optional double longaccvalue = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_longaccvalue(), target);
  }

  // optional .apollo.canbus.Brkdrvstatus24c.VehspdstsType vehspdsts = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_vehspdsts(), target);
  }

  // optional .apollo.canbus.Brkdrvstatus24c.VehspddirType vehspddir = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_vehspddir(), target);
  }

  // optional int32 vehspd = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_vehspd(), target);
  }

  // optional .apollo.canbus.Brkdrvstatus24c.EpbswstsType epbswsts = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_epbswsts(), target);
  }

  // optional .apollo.canbus.Brkdrvstatus24c.DrvstateType drvstate = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_drvstate(), target);
  }

  // optional .apollo.canbus.Brkdrvstatus24c.BrkpedlstsType brkpedlsts = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_brkpedlsts(), target);
  }

  // optional .apollo.canbus.Brkdrvstatus24c.BrklistsType brklists = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_brklists(), target);
  }

  // optional .apollo.canbus.Brkdrvstatus24c.EpbfaillampType epbfaillamp = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_epbfaillamp(), target);
  }

  // optional .apollo.canbus.Brkdrvstatus24c.EpbwarnlampType epbwarnlamp = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      13, this->_internal_epbwarnlamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Brkdrvstatus24c)
  return target;
}

size_t Brkdrvstatus24c::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Brkdrvstatus24c)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 brkmsgcntr = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_brkmsgcntr());
    }

    // optional .apollo.canbus.Brkdrvstatus24c.BrkpressurestsType brkpressurests = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_brkpressurests());
    }

    // optional double brkpressure = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double longaccvalue = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Brkdrvstatus24c.VehspdstsType vehspdsts = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_vehspdsts());
    }

    // optional .apollo.canbus.Brkdrvstatus24c.VehspddirType vehspddir = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_vehspddir());
    }

    // optional int32 vehspd = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vehspd());
    }

    // optional .apollo.canbus.Brkdrvstatus24c.EpbswstsType epbswsts = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epbswsts());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional .apollo.canbus.Brkdrvstatus24c.DrvstateType drvstate = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_drvstate());
    }

    // optional .apollo.canbus.Brkdrvstatus24c.BrkpedlstsType brkpedlsts = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_brkpedlsts());
    }

    // optional .apollo.canbus.Brkdrvstatus24c.BrklistsType brklists = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_brklists());
    }

    // optional .apollo.canbus.Brkdrvstatus24c.EpbfaillampType epbfaillamp = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epbfaillamp());
    }

    // optional .apollo.canbus.Brkdrvstatus24c.EpbwarnlampType epbwarnlamp = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epbwarnlamp());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Brkdrvstatus24c::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Brkdrvstatus24c)
  GOOGLE_DCHECK_NE(&from, this);
  const Brkdrvstatus24c* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Brkdrvstatus24c>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Brkdrvstatus24c)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Brkdrvstatus24c)
    MergeFrom(*source);
  }
}

void Brkdrvstatus24c::MergeFrom(const Brkdrvstatus24c& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Brkdrvstatus24c)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      brkmsgcntr_ = from.brkmsgcntr_;
    }
    if (cached_has_bits & 0x00000002u) {
      brkpressurests_ = from.brkpressurests_;
    }
    if (cached_has_bits & 0x00000004u) {
      brkpressure_ = from.brkpressure_;
    }
    if (cached_has_bits & 0x00000008u) {
      longaccvalue_ = from.longaccvalue_;
    }
    if (cached_has_bits & 0x00000010u) {
      vehspdsts_ = from.vehspdsts_;
    }
    if (cached_has_bits & 0x00000020u) {
      vehspddir_ = from.vehspddir_;
    }
    if (cached_has_bits & 0x00000040u) {
      vehspd_ = from.vehspd_;
    }
    if (cached_has_bits & 0x00000080u) {
      epbswsts_ = from.epbswsts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      drvstate_ = from.drvstate_;
    }
    if (cached_has_bits & 0x00000200u) {
      brkpedlsts_ = from.brkpedlsts_;
    }
    if (cached_has_bits & 0x00000400u) {
      brklists_ = from.brklists_;
    }
    if (cached_has_bits & 0x00000800u) {
      epbfaillamp_ = from.epbfaillamp_;
    }
    if (cached_has_bits & 0x00001000u) {
      epbwarnlamp_ = from.epbwarnlamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Brkdrvstatus24c::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Brkdrvstatus24c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Brkdrvstatus24c::CopyFrom(const Brkdrvstatus24c& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Brkdrvstatus24c)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Brkdrvstatus24c::IsInitialized() const {
  return true;
}

void Brkdrvstatus24c::InternalSwap(Brkdrvstatus24c* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Brkdrvstatus24c, epbwarnlamp_)
      + sizeof(Brkdrvstatus24c::epbwarnlamp_)
      - PROTOBUF_FIELD_OFFSET(Brkdrvstatus24c, brkmsgcntr_)>(
          reinterpret_cast<char*>(&brkmsgcntr_),
          reinterpret_cast<char*>(&other->brkmsgcntr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Brkdrvstatus24c::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Bodystatus24d::_Internal {
 public:
  using HasBits = decltype(std::declval<Bodystatus24d>()._has_bits_);
  static void set_has_doorajarfrntlests(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_doorajarfrntrists(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_doorajarrelests(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_bcmclosurecrc(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_seatoccpfrntlefail(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_steerwhlheatsts(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_bcmclosuremsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_trajarsts(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_hoodajarsts(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_doorajarrerists(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_seatoccpfrntlests(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_cooltlvllowwarnreq(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_vehspd(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
};

Bodystatus24d::Bodystatus24d(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Bodystatus24d)
}
Bodystatus24d::Bodystatus24d(const Bodystatus24d& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&doorajarfrntlests_, &from.doorajarfrntlests_,
    static_cast<size_t>(reinterpret_cast<char*>(&vehspd_) -
    reinterpret_cast<char*>(&doorajarfrntlests_)) + sizeof(vehspd_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Bodystatus24d)
}

void Bodystatus24d::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&doorajarfrntlests_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&vehspd_) -
      reinterpret_cast<char*>(&doorajarfrntlests_)) + sizeof(vehspd_));
}

Bodystatus24d::~Bodystatus24d() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Bodystatus24d)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Bodystatus24d::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Bodystatus24d::ArenaDtor(void* object) {
  Bodystatus24d* _this = reinterpret_cast< Bodystatus24d* >(object);
  (void)_this;
}
void Bodystatus24d::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Bodystatus24d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Bodystatus24d& Bodystatus24d::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Bodystatus24d_nio_2eproto.base);
  return *internal_default_instance();
}


void Bodystatus24d::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Bodystatus24d)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&doorajarfrntlests_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trajarsts_) -
        reinterpret_cast<char*>(&doorajarfrntlests_)) + sizeof(trajarsts_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&hoodajarsts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vehspd_) -
        reinterpret_cast<char*>(&hoodajarsts_)) + sizeof(vehspd_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Bodystatus24d::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Bodystatus24d.DoorajarfrntlestsType doorajarfrntlests = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bodystatus24d_DoorajarfrntlestsType_IsValid(val))) {
            _internal_set_doorajarfrntlests(static_cast<::apollo::canbus::Bodystatus24d_DoorajarfrntlestsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bodystatus24d.DoorajarfrntristsType doorajarfrntrists = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bodystatus24d_DoorajarfrntristsType_IsValid(val))) {
            _internal_set_doorajarfrntrists(static_cast<::apollo::canbus::Bodystatus24d_DoorajarfrntristsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bodystatus24d.DoorajarrelestsType doorajarrelests = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bodystatus24d_DoorajarrelestsType_IsValid(val))) {
            _internal_set_doorajarrelests(static_cast<::apollo::canbus::Bodystatus24d_DoorajarrelestsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 bcmclosurecrc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_bcmclosurecrc(&has_bits);
          bcmclosurecrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bodystatus24d.SeatoccpfrntlefailType seatoccpfrntlefail = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bodystatus24d_SeatoccpfrntlefailType_IsValid(val))) {
            _internal_set_seatoccpfrntlefail(static_cast<::apollo::canbus::Bodystatus24d_SeatoccpfrntlefailType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bodystatus24d.SteerwhlheatstsType steerwhlheatsts = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bodystatus24d_SteerwhlheatstsType_IsValid(val))) {
            _internal_set_steerwhlheatsts(static_cast<::apollo::canbus::Bodystatus24d_SteerwhlheatstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 bcmclosuremsgcntr = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_bcmclosuremsgcntr(&has_bits);
          bcmclosuremsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bodystatus24d.TrajarstsType trajarsts = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bodystatus24d_TrajarstsType_IsValid(val))) {
            _internal_set_trajarsts(static_cast<::apollo::canbus::Bodystatus24d_TrajarstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bodystatus24d.HoodajarstsType hoodajarsts = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bodystatus24d_HoodajarstsType_IsValid(val))) {
            _internal_set_hoodajarsts(static_cast<::apollo::canbus::Bodystatus24d_HoodajarstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bodystatus24d.DoorajarreristsType doorajarrerists = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bodystatus24d_DoorajarreristsType_IsValid(val))) {
            _internal_set_doorajarrerists(static_cast<::apollo::canbus::Bodystatus24d_DoorajarreristsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bodystatus24d.SeatoccpfrntlestsType seatoccpfrntlests = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bodystatus24d_SeatoccpfrntlestsType_IsValid(val))) {
            _internal_set_seatoccpfrntlests(static_cast<::apollo::canbus::Bodystatus24d_SeatoccpfrntlestsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bodystatus24d.CooltlvllowwarnreqType cooltlvllowwarnreq = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bodystatus24d_CooltlvllowwarnreqType_IsValid(val))) {
            _internal_set_cooltlvllowwarnreq(static_cast<::apollo::canbus::Bodystatus24d_CooltlvllowwarnreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double vehspd = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 105)) {
          _Internal::set_has_vehspd(&has_bits);
          vehspd_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Bodystatus24d::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Bodystatus24d)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Bodystatus24d.DoorajarfrntlestsType doorajarfrntlests = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_doorajarfrntlests(), target);
  }

  // optional .apollo.canbus.Bodystatus24d.DoorajarfrntristsType doorajarfrntrists = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_doorajarfrntrists(), target);
  }

  // optional .apollo.canbus.Bodystatus24d.DoorajarrelestsType doorajarrelests = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_doorajarrelests(), target);
  }

  // optional int32 bcmclosurecrc = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_bcmclosurecrc(), target);
  }

  // optional .apollo.canbus.Bodystatus24d.SeatoccpfrntlefailType seatoccpfrntlefail = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_seatoccpfrntlefail(), target);
  }

  // optional .apollo.canbus.Bodystatus24d.SteerwhlheatstsType steerwhlheatsts = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_steerwhlheatsts(), target);
  }

  // optional int32 bcmclosuremsgcntr = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_bcmclosuremsgcntr(), target);
  }

  // optional .apollo.canbus.Bodystatus24d.TrajarstsType trajarsts = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_trajarsts(), target);
  }

  // optional .apollo.canbus.Bodystatus24d.HoodajarstsType hoodajarsts = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_hoodajarsts(), target);
  }

  // optional .apollo.canbus.Bodystatus24d.DoorajarreristsType doorajarrerists = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_doorajarrerists(), target);
  }

  // optional .apollo.canbus.Bodystatus24d.SeatoccpfrntlestsType seatoccpfrntlests = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_seatoccpfrntlests(), target);
  }

  // optional .apollo.canbus.Bodystatus24d.CooltlvllowwarnreqType cooltlvllowwarnreq = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_cooltlvllowwarnreq(), target);
  }

  // optional double vehspd = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(13, this->_internal_vehspd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Bodystatus24d)
  return target;
}

size_t Bodystatus24d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Bodystatus24d)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Bodystatus24d.DoorajarfrntlestsType doorajarfrntlests = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_doorajarfrntlests());
    }

    // optional .apollo.canbus.Bodystatus24d.DoorajarfrntristsType doorajarfrntrists = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_doorajarfrntrists());
    }

    // optional .apollo.canbus.Bodystatus24d.DoorajarrelestsType doorajarrelests = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_doorajarrelests());
    }

    // optional int32 bcmclosurecrc = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_bcmclosurecrc());
    }

    // optional .apollo.canbus.Bodystatus24d.SeatoccpfrntlefailType seatoccpfrntlefail = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_seatoccpfrntlefail());
    }

    // optional .apollo.canbus.Bodystatus24d.SteerwhlheatstsType steerwhlheatsts = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_steerwhlheatsts());
    }

    // optional int32 bcmclosuremsgcntr = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_bcmclosuremsgcntr());
    }

    // optional .apollo.canbus.Bodystatus24d.TrajarstsType trajarsts = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_trajarsts());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional .apollo.canbus.Bodystatus24d.HoodajarstsType hoodajarsts = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hoodajarsts());
    }

    // optional .apollo.canbus.Bodystatus24d.DoorajarreristsType doorajarrerists = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_doorajarrerists());
    }

    // optional .apollo.canbus.Bodystatus24d.SeatoccpfrntlestsType seatoccpfrntlests = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_seatoccpfrntlests());
    }

    // optional .apollo.canbus.Bodystatus24d.CooltlvllowwarnreqType cooltlvllowwarnreq = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cooltlvllowwarnreq());
    }

    // optional double vehspd = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bodystatus24d::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Bodystatus24d)
  GOOGLE_DCHECK_NE(&from, this);
  const Bodystatus24d* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Bodystatus24d>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Bodystatus24d)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Bodystatus24d)
    MergeFrom(*source);
  }
}

void Bodystatus24d::MergeFrom(const Bodystatus24d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Bodystatus24d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      doorajarfrntlests_ = from.doorajarfrntlests_;
    }
    if (cached_has_bits & 0x00000002u) {
      doorajarfrntrists_ = from.doorajarfrntrists_;
    }
    if (cached_has_bits & 0x00000004u) {
      doorajarrelests_ = from.doorajarrelests_;
    }
    if (cached_has_bits & 0x00000008u) {
      bcmclosurecrc_ = from.bcmclosurecrc_;
    }
    if (cached_has_bits & 0x00000010u) {
      seatoccpfrntlefail_ = from.seatoccpfrntlefail_;
    }
    if (cached_has_bits & 0x00000020u) {
      steerwhlheatsts_ = from.steerwhlheatsts_;
    }
    if (cached_has_bits & 0x00000040u) {
      bcmclosuremsgcntr_ = from.bcmclosuremsgcntr_;
    }
    if (cached_has_bits & 0x00000080u) {
      trajarsts_ = from.trajarsts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      hoodajarsts_ = from.hoodajarsts_;
    }
    if (cached_has_bits & 0x00000200u) {
      doorajarrerists_ = from.doorajarrerists_;
    }
    if (cached_has_bits & 0x00000400u) {
      seatoccpfrntlests_ = from.seatoccpfrntlests_;
    }
    if (cached_has_bits & 0x00000800u) {
      cooltlvllowwarnreq_ = from.cooltlvllowwarnreq_;
    }
    if (cached_has_bits & 0x00001000u) {
      vehspd_ = from.vehspd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Bodystatus24d::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Bodystatus24d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bodystatus24d::CopyFrom(const Bodystatus24d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Bodystatus24d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bodystatus24d::IsInitialized() const {
  return true;
}

void Bodystatus24d::InternalSwap(Bodystatus24d* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Bodystatus24d, vehspd_)
      + sizeof(Bodystatus24d::vehspd_)
      - PROTOBUF_FIELD_OFFSET(Bodystatus24d, doorajarfrntlests_)>(
          reinterpret_cast<char*>(&doorajarfrntlests_),
          reinterpret_cast<char*>(&other->doorajarfrntlests_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Bodystatus24d::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Driverstatus24e::_Internal {
 public:
  using HasBits = decltype(std::declval<Driverstatus24e>()._has_bits_);
  static void set_has_epbsts(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_vcuaccrpedlovrd(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ibesp2warning(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_airbwarnreq(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_driverstsmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_seatbltmidrowrists(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_seatbltmidrowmidsts(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_seatbltfrntlests(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_passairbginhbnlampreq(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_seatoccptfrntrists(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_crashdetd(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_seatbltfrntrists(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_driverstscrc(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_seatbltmidrowlests(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_bmssoc(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
};

Driverstatus24e::Driverstatus24e(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Driverstatus24e)
}
Driverstatus24e::Driverstatus24e(const Driverstatus24e& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&epbsts_, &from.epbsts_,
    static_cast<size_t>(reinterpret_cast<char*>(&bmssoc_) -
    reinterpret_cast<char*>(&epbsts_)) + sizeof(bmssoc_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Driverstatus24e)
}

void Driverstatus24e::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&epbsts_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&bmssoc_) -
      reinterpret_cast<char*>(&epbsts_)) + sizeof(bmssoc_));
}

Driverstatus24e::~Driverstatus24e() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Driverstatus24e)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Driverstatus24e::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Driverstatus24e::ArenaDtor(void* object) {
  Driverstatus24e* _this = reinterpret_cast< Driverstatus24e* >(object);
  (void)_this;
}
void Driverstatus24e::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Driverstatus24e::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Driverstatus24e& Driverstatus24e::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Driverstatus24e_nio_2eproto.base);
  return *internal_default_instance();
}


void Driverstatus24e::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Driverstatus24e)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&epbsts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seatbltfrntlests_) -
        reinterpret_cast<char*>(&epbsts_)) + sizeof(seatbltfrntlests_));
  }
  if (cached_has_bits & 0x00007f00u) {
    ::memset(&passairbginhbnlampreq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bmssoc_) -
        reinterpret_cast<char*>(&passairbginhbnlampreq_)) + sizeof(bmssoc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Driverstatus24e::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Driverstatus24e.EpbstsType epbsts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_EpbstsType_IsValid(val))) {
            _internal_set_epbsts(static_cast<::apollo::canbus::Driverstatus24e_EpbstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.VcuaccrpedlovrdType vcuaccrpedlovrd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_VcuaccrpedlovrdType_IsValid(val))) {
            _internal_set_vcuaccrpedlovrd(static_cast<::apollo::canbus::Driverstatus24e_VcuaccrpedlovrdType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.Ibesp2warningType ibesp2warning = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_Ibesp2warningType_IsValid(val))) {
            _internal_set_ibesp2warning(static_cast<::apollo::canbus::Driverstatus24e_Ibesp2warningType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.AirbwarnreqType airbwarnreq = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_AirbwarnreqType_IsValid(val))) {
            _internal_set_airbwarnreq(static_cast<::apollo::canbus::Driverstatus24e_AirbwarnreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 driverstsmsgcntr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_driverstsmsgcntr(&has_bits);
          driverstsmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.SeatbltmidrowristsType seatbltmidrowrists = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_SeatbltmidrowristsType_IsValid(val))) {
            _internal_set_seatbltmidrowrists(static_cast<::apollo::canbus::Driverstatus24e_SeatbltmidrowristsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.SeatbltmidrowmidstsType seatbltmidrowmidsts = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_SeatbltmidrowmidstsType_IsValid(val))) {
            _internal_set_seatbltmidrowmidsts(static_cast<::apollo::canbus::Driverstatus24e_SeatbltmidrowmidstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.SeatbltfrntlestsType seatbltfrntlests = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_SeatbltfrntlestsType_IsValid(val))) {
            _internal_set_seatbltfrntlests(static_cast<::apollo::canbus::Driverstatus24e_SeatbltfrntlestsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.PassairbginhbnlampreqType passairbginhbnlampreq = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_PassairbginhbnlampreqType_IsValid(val))) {
            _internal_set_passairbginhbnlampreq(static_cast<::apollo::canbus::Driverstatus24e_PassairbginhbnlampreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.SeatoccptfrntristsType seatoccptfrntrists = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_SeatoccptfrntristsType_IsValid(val))) {
            _internal_set_seatoccptfrntrists(static_cast<::apollo::canbus::Driverstatus24e_SeatoccptfrntristsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.CrashdetdType crashdetd = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_CrashdetdType_IsValid(val))) {
            _internal_set_crashdetd(static_cast<::apollo::canbus::Driverstatus24e_CrashdetdType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.SeatbltfrntristsType seatbltfrntrists = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_SeatbltfrntristsType_IsValid(val))) {
            _internal_set_seatbltfrntrists(static_cast<::apollo::canbus::Driverstatus24e_SeatbltfrntristsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 driverstscrc = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_driverstscrc(&has_bits);
          driverstscrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e.SeatbltmidrowlestsType seatbltmidrowlests = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Driverstatus24e_SeatbltmidrowlestsType_IsValid(val))) {
            _internal_set_seatbltmidrowlests(static_cast<::apollo::canbus::Driverstatus24e_SeatbltmidrowlestsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(14, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double bmssoc = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 121)) {
          _Internal::set_has_bmssoc(&has_bits);
          bmssoc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Driverstatus24e::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Driverstatus24e)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Driverstatus24e.EpbstsType epbsts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_epbsts(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.VcuaccrpedlovrdType vcuaccrpedlovrd = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_vcuaccrpedlovrd(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.Ibesp2warningType ibesp2warning = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_ibesp2warning(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.AirbwarnreqType airbwarnreq = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_airbwarnreq(), target);
  }

  // optional int32 driverstsmsgcntr = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_driverstsmsgcntr(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.SeatbltmidrowristsType seatbltmidrowrists = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_seatbltmidrowrists(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.SeatbltmidrowmidstsType seatbltmidrowmidsts = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_seatbltmidrowmidsts(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.SeatbltfrntlestsType seatbltfrntlests = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_seatbltfrntlests(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.PassairbginhbnlampreqType passairbginhbnlampreq = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_passairbginhbnlampreq(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.SeatoccptfrntristsType seatoccptfrntrists = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_seatoccptfrntrists(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.CrashdetdType crashdetd = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_crashdetd(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.SeatbltfrntristsType seatbltfrntrists = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_seatbltfrntrists(), target);
  }

  // optional int32 driverstscrc = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_driverstscrc(), target);
  }

  // optional .apollo.canbus.Driverstatus24e.SeatbltmidrowlestsType seatbltmidrowlests = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      14, this->_internal_seatbltmidrowlests(), target);
  }

  // optional double bmssoc = 15;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(15, this->_internal_bmssoc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Driverstatus24e)
  return target;
}

size_t Driverstatus24e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Driverstatus24e)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Driverstatus24e.EpbstsType epbsts = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epbsts());
    }

    // optional .apollo.canbus.Driverstatus24e.VcuaccrpedlovrdType vcuaccrpedlovrd = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_vcuaccrpedlovrd());
    }

    // optional .apollo.canbus.Driverstatus24e.Ibesp2warningType ibesp2warning = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ibesp2warning());
    }

    // optional .apollo.canbus.Driverstatus24e.AirbwarnreqType airbwarnreq = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_airbwarnreq());
    }

    // optional int32 driverstsmsgcntr = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_driverstsmsgcntr());
    }

    // optional .apollo.canbus.Driverstatus24e.SeatbltmidrowristsType seatbltmidrowrists = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_seatbltmidrowrists());
    }

    // optional .apollo.canbus.Driverstatus24e.SeatbltmidrowmidstsType seatbltmidrowmidsts = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_seatbltmidrowmidsts());
    }

    // optional .apollo.canbus.Driverstatus24e.SeatbltfrntlestsType seatbltfrntlests = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_seatbltfrntlests());
    }

  }
  if (cached_has_bits & 0x00007f00u) {
    // optional .apollo.canbus.Driverstatus24e.PassairbginhbnlampreqType passairbginhbnlampreq = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_passairbginhbnlampreq());
    }

    // optional .apollo.canbus.Driverstatus24e.SeatoccptfrntristsType seatoccptfrntrists = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_seatoccptfrntrists());
    }

    // optional .apollo.canbus.Driverstatus24e.CrashdetdType crashdetd = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_crashdetd());
    }

    // optional .apollo.canbus.Driverstatus24e.SeatbltfrntristsType seatbltfrntrists = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_seatbltfrntrists());
    }

    // optional int32 driverstscrc = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_driverstscrc());
    }

    // optional .apollo.canbus.Driverstatus24e.SeatbltmidrowlestsType seatbltmidrowlests = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_seatbltmidrowlests());
    }

    // optional double bmssoc = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Driverstatus24e::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Driverstatus24e)
  GOOGLE_DCHECK_NE(&from, this);
  const Driverstatus24e* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Driverstatus24e>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Driverstatus24e)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Driverstatus24e)
    MergeFrom(*source);
  }
}

void Driverstatus24e::MergeFrom(const Driverstatus24e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Driverstatus24e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      epbsts_ = from.epbsts_;
    }
    if (cached_has_bits & 0x00000002u) {
      vcuaccrpedlovrd_ = from.vcuaccrpedlovrd_;
    }
    if (cached_has_bits & 0x00000004u) {
      ibesp2warning_ = from.ibesp2warning_;
    }
    if (cached_has_bits & 0x00000008u) {
      airbwarnreq_ = from.airbwarnreq_;
    }
    if (cached_has_bits & 0x00000010u) {
      driverstsmsgcntr_ = from.driverstsmsgcntr_;
    }
    if (cached_has_bits & 0x00000020u) {
      seatbltmidrowrists_ = from.seatbltmidrowrists_;
    }
    if (cached_has_bits & 0x00000040u) {
      seatbltmidrowmidsts_ = from.seatbltmidrowmidsts_;
    }
    if (cached_has_bits & 0x00000080u) {
      seatbltfrntlests_ = from.seatbltfrntlests_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      passairbginhbnlampreq_ = from.passairbginhbnlampreq_;
    }
    if (cached_has_bits & 0x00000200u) {
      seatoccptfrntrists_ = from.seatoccptfrntrists_;
    }
    if (cached_has_bits & 0x00000400u) {
      crashdetd_ = from.crashdetd_;
    }
    if (cached_has_bits & 0x00000800u) {
      seatbltfrntrists_ = from.seatbltfrntrists_;
    }
    if (cached_has_bits & 0x00001000u) {
      driverstscrc_ = from.driverstscrc_;
    }
    if (cached_has_bits & 0x00002000u) {
      seatbltmidrowlests_ = from.seatbltmidrowlests_;
    }
    if (cached_has_bits & 0x00004000u) {
      bmssoc_ = from.bmssoc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Driverstatus24e::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Driverstatus24e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Driverstatus24e::CopyFrom(const Driverstatus24e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Driverstatus24e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Driverstatus24e::IsInitialized() const {
  return true;
}

void Driverstatus24e::InternalSwap(Driverstatus24e* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Driverstatus24e, bmssoc_)
      + sizeof(Driverstatus24e::bmssoc_)
      - PROTOBUF_FIELD_OFFSET(Driverstatus24e, epbsts_)>(
          reinterpret_cast<char*>(&epbsts_),
          reinterpret_cast<char*>(&other->epbsts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Driverstatus24e::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Vehiclelights2c7::_Internal {
 public:
  using HasBits = decltype(std::declval<Vehiclelights2c7>()._has_bits_);
  static void set_has_fogfrntlightsts(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_leftturnlightsts(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rightturnlightsts(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_lobeamlightsts(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_hibeamlightsts(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_emergcylightsts(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_frntwipersts(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

Vehiclelights2c7::Vehiclelights2c7(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Vehiclelights2c7)
}
Vehiclelights2c7::Vehiclelights2c7(const Vehiclelights2c7& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&fogfrntlightsts_, &from.fogfrntlightsts_,
    static_cast<size_t>(reinterpret_cast<char*>(&frntwipersts_) -
    reinterpret_cast<char*>(&fogfrntlightsts_)) + sizeof(frntwipersts_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vehiclelights2c7)
}

void Vehiclelights2c7::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&fogfrntlightsts_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&frntwipersts_) -
      reinterpret_cast<char*>(&fogfrntlightsts_)) + sizeof(frntwipersts_));
}

Vehiclelights2c7::~Vehiclelights2c7() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vehiclelights2c7)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vehiclelights2c7::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Vehiclelights2c7::ArenaDtor(void* object) {
  Vehiclelights2c7* _this = reinterpret_cast< Vehiclelights2c7* >(object);
  (void)_this;
}
void Vehiclelights2c7::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vehiclelights2c7::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vehiclelights2c7& Vehiclelights2c7::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vehiclelights2c7_nio_2eproto.base);
  return *internal_default_instance();
}


void Vehiclelights2c7::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vehiclelights2c7)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&fogfrntlightsts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&frntwipersts_) -
        reinterpret_cast<char*>(&fogfrntlightsts_)) + sizeof(frntwipersts_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vehiclelights2c7::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Vehiclelights2c7.FogfrntlightstsType fogfrntlightsts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vehiclelights2c7_FogfrntlightstsType_IsValid(val))) {
            _internal_set_fogfrntlightsts(static_cast<::apollo::canbus::Vehiclelights2c7_FogfrntlightstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vehiclelights2c7.LeftturnlightstsType leftturnlightsts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vehiclelights2c7_LeftturnlightstsType_IsValid(val))) {
            _internal_set_leftturnlightsts(static_cast<::apollo::canbus::Vehiclelights2c7_LeftturnlightstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vehiclelights2c7.RightturnlightstsType rightturnlightsts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vehiclelights2c7_RightturnlightstsType_IsValid(val))) {
            _internal_set_rightturnlightsts(static_cast<::apollo::canbus::Vehiclelights2c7_RightturnlightstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vehiclelights2c7.LobeamlightstsType lobeamlightsts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vehiclelights2c7_LobeamlightstsType_IsValid(val))) {
            _internal_set_lobeamlightsts(static_cast<::apollo::canbus::Vehiclelights2c7_LobeamlightstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vehiclelights2c7.HibeamlightstsType hibeamlightsts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vehiclelights2c7_HibeamlightstsType_IsValid(val))) {
            _internal_set_hibeamlightsts(static_cast<::apollo::canbus::Vehiclelights2c7_HibeamlightstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vehiclelights2c7.EmergcylightstsType emergcylightsts = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vehiclelights2c7_EmergcylightstsType_IsValid(val))) {
            _internal_set_emergcylightsts(static_cast<::apollo::canbus::Vehiclelights2c7_EmergcylightstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vehiclelights2c7.FrntwiperstsType frntwipersts = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Vehiclelights2c7_FrntwiperstsType_IsValid(val))) {
            _internal_set_frntwipersts(static_cast<::apollo::canbus::Vehiclelights2c7_FrntwiperstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vehiclelights2c7::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vehiclelights2c7)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Vehiclelights2c7.FogfrntlightstsType fogfrntlightsts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_fogfrntlightsts(), target);
  }

  // optional .apollo.canbus.Vehiclelights2c7.LeftturnlightstsType leftturnlightsts = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_leftturnlightsts(), target);
  }

  // optional .apollo.canbus.Vehiclelights2c7.RightturnlightstsType rightturnlightsts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_rightturnlightsts(), target);
  }

  // optional .apollo.canbus.Vehiclelights2c7.LobeamlightstsType lobeamlightsts = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_lobeamlightsts(), target);
  }

  // optional .apollo.canbus.Vehiclelights2c7.HibeamlightstsType hibeamlightsts = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_hibeamlightsts(), target);
  }

  // optional .apollo.canbus.Vehiclelights2c7.EmergcylightstsType emergcylightsts = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_emergcylightsts(), target);
  }

  // optional .apollo.canbus.Vehiclelights2c7.FrntwiperstsType frntwipersts = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_frntwipersts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vehiclelights2c7)
  return target;
}

size_t Vehiclelights2c7::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vehiclelights2c7)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .apollo.canbus.Vehiclelights2c7.FogfrntlightstsType fogfrntlightsts = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_fogfrntlightsts());
    }

    // optional .apollo.canbus.Vehiclelights2c7.LeftturnlightstsType leftturnlightsts = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_leftturnlightsts());
    }

    // optional .apollo.canbus.Vehiclelights2c7.RightturnlightstsType rightturnlightsts = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rightturnlightsts());
    }

    // optional .apollo.canbus.Vehiclelights2c7.LobeamlightstsType lobeamlightsts = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lobeamlightsts());
    }

    // optional .apollo.canbus.Vehiclelights2c7.HibeamlightstsType hibeamlightsts = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hibeamlightsts());
    }

    // optional .apollo.canbus.Vehiclelights2c7.EmergcylightstsType emergcylightsts = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_emergcylightsts());
    }

    // optional .apollo.canbus.Vehiclelights2c7.FrntwiperstsType frntwipersts = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_frntwipersts());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vehiclelights2c7::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vehiclelights2c7)
  GOOGLE_DCHECK_NE(&from, this);
  const Vehiclelights2c7* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vehiclelights2c7>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vehiclelights2c7)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vehiclelights2c7)
    MergeFrom(*source);
  }
}

void Vehiclelights2c7::MergeFrom(const Vehiclelights2c7& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vehiclelights2c7)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      fogfrntlightsts_ = from.fogfrntlightsts_;
    }
    if (cached_has_bits & 0x00000002u) {
      leftturnlightsts_ = from.leftturnlightsts_;
    }
    if (cached_has_bits & 0x00000004u) {
      rightturnlightsts_ = from.rightturnlightsts_;
    }
    if (cached_has_bits & 0x00000008u) {
      lobeamlightsts_ = from.lobeamlightsts_;
    }
    if (cached_has_bits & 0x00000010u) {
      hibeamlightsts_ = from.hibeamlightsts_;
    }
    if (cached_has_bits & 0x00000020u) {
      emergcylightsts_ = from.emergcylightsts_;
    }
    if (cached_has_bits & 0x00000040u) {
      frntwipersts_ = from.frntwipersts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vehiclelights2c7::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vehiclelights2c7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vehiclelights2c7::CopyFrom(const Vehiclelights2c7& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vehiclelights2c7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehiclelights2c7::IsInitialized() const {
  return true;
}

void Vehiclelights2c7::InternalSwap(Vehiclelights2c7* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vehiclelights2c7, frntwipersts_)
      + sizeof(Vehiclelights2c7::frntwipersts_)
      - PROTOBUF_FIELD_OFFSET(Vehiclelights2c7, fogfrntlightsts_)>(
          reinterpret_cast<char*>(&fogfrntlightsts_),
          reinterpret_cast<char*>(&other->fogfrntlightsts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vehiclelights2c7::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Lightreq336::_Internal {
 public:
  using HasBits = decltype(std::declval<Lightreq336>()._has_bits_);
  static void set_has_brklireq(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_frntwiprsts(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_turnlightind(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_beamactivests(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_beamlightreq(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_emeglampreq(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

Lightreq336::Lightreq336(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Lightreq336)
}
Lightreq336::Lightreq336(const Lightreq336& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&brklireq_, &from.brklireq_,
    static_cast<size_t>(reinterpret_cast<char*>(&emeglampreq_) -
    reinterpret_cast<char*>(&brklireq_)) + sizeof(emeglampreq_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Lightreq336)
}

void Lightreq336::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&brklireq_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&emeglampreq_) -
      reinterpret_cast<char*>(&brklireq_)) + sizeof(emeglampreq_));
}

Lightreq336::~Lightreq336() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Lightreq336)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Lightreq336::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Lightreq336::ArenaDtor(void* object) {
  Lightreq336* _this = reinterpret_cast< Lightreq336* >(object);
  (void)_this;
}
void Lightreq336::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Lightreq336::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Lightreq336& Lightreq336::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Lightreq336_nio_2eproto.base);
  return *internal_default_instance();
}


void Lightreq336::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Lightreq336)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&brklireq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&emeglampreq_) -
        reinterpret_cast<char*>(&brklireq_)) + sizeof(emeglampreq_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Lightreq336::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Lightreq336.BrklireqType brklireq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Lightreq336_BrklireqType_IsValid(val))) {
            _internal_set_brklireq(static_cast<::apollo::canbus::Lightreq336_BrklireqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Lightreq336.FrntwiprstsType frntwiprsts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Lightreq336_FrntwiprstsType_IsValid(val))) {
            _internal_set_frntwiprsts(static_cast<::apollo::canbus::Lightreq336_FrntwiprstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Lightreq336.TurnlightindType turnlightind = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Lightreq336_TurnlightindType_IsValid(val))) {
            _internal_set_turnlightind(static_cast<::apollo::canbus::Lightreq336_TurnlightindType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Lightreq336.BeamactivestsType beamactivests = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Lightreq336_BeamactivestsType_IsValid(val))) {
            _internal_set_beamactivests(static_cast<::apollo::canbus::Lightreq336_BeamactivestsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Lightreq336.BeamlightreqType beamlightreq = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Lightreq336_BeamlightreqType_IsValid(val))) {
            _internal_set_beamlightreq(static_cast<::apollo::canbus::Lightreq336_BeamlightreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Lightreq336.EmeglampreqType emeglampreq = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Lightreq336_EmeglampreqType_IsValid(val))) {
            _internal_set_emeglampreq(static_cast<::apollo::canbus::Lightreq336_EmeglampreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Lightreq336::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Lightreq336)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Lightreq336.BrklireqType brklireq = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_brklireq(), target);
  }

  // optional .apollo.canbus.Lightreq336.FrntwiprstsType frntwiprsts = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_frntwiprsts(), target);
  }

  // optional .apollo.canbus.Lightreq336.TurnlightindType turnlightind = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_turnlightind(), target);
  }

  // optional .apollo.canbus.Lightreq336.BeamactivestsType beamactivests = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_beamactivests(), target);
  }

  // optional .apollo.canbus.Lightreq336.BeamlightreqType beamlightreq = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_beamlightreq(), target);
  }

  // optional .apollo.canbus.Lightreq336.EmeglampreqType emeglampreq = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_emeglampreq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Lightreq336)
  return target;
}

size_t Lightreq336::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Lightreq336)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .apollo.canbus.Lightreq336.BrklireqType brklireq = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_brklireq());
    }

    // optional .apollo.canbus.Lightreq336.FrntwiprstsType frntwiprsts = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_frntwiprsts());
    }

    // optional .apollo.canbus.Lightreq336.TurnlightindType turnlightind = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_turnlightind());
    }

    // optional .apollo.canbus.Lightreq336.BeamactivestsType beamactivests = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_beamactivests());
    }

    // optional .apollo.canbus.Lightreq336.BeamlightreqType beamlightreq = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_beamlightreq());
    }

    // optional .apollo.canbus.Lightreq336.EmeglampreqType emeglampreq = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_emeglampreq());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Lightreq336::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Lightreq336)
  GOOGLE_DCHECK_NE(&from, this);
  const Lightreq336* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Lightreq336>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Lightreq336)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Lightreq336)
    MergeFrom(*source);
  }
}

void Lightreq336::MergeFrom(const Lightreq336& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Lightreq336)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      brklireq_ = from.brklireq_;
    }
    if (cached_has_bits & 0x00000002u) {
      frntwiprsts_ = from.frntwiprsts_;
    }
    if (cached_has_bits & 0x00000004u) {
      turnlightind_ = from.turnlightind_;
    }
    if (cached_has_bits & 0x00000008u) {
      beamactivests_ = from.beamactivests_;
    }
    if (cached_has_bits & 0x00000010u) {
      beamlightreq_ = from.beamlightreq_;
    }
    if (cached_has_bits & 0x00000020u) {
      emeglampreq_ = from.emeglampreq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Lightreq336::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Lightreq336)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lightreq336::CopyFrom(const Lightreq336& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Lightreq336)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lightreq336::IsInitialized() const {
  return true;
}

void Lightreq336::InternalSwap(Lightreq336* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Lightreq336, emeglampreq_)
      + sizeof(Lightreq336::emeglampreq_)
      - PROTOBUF_FIELD_OFFSET(Lightreq336, brklireq_)>(
          reinterpret_cast<char*>(&brklireq_),
          reinterpret_cast<char*>(&other->brklireq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Lightreq336::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Acmbody4a::_Internal {
 public:
  using HasBits = decltype(std::declval<Acmbody4a>()._has_bits_);
  static void set_has_acmmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_acmcrc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_latitudea(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_yawrate(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_seatoccptfrntlests(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

Acmbody4a::Acmbody4a(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Acmbody4a)
}
Acmbody4a::Acmbody4a(const Acmbody4a& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&acmmsgcntr_, &from.acmmsgcntr_,
    static_cast<size_t>(reinterpret_cast<char*>(&seatoccptfrntlests_) -
    reinterpret_cast<char*>(&acmmsgcntr_)) + sizeof(seatoccptfrntlests_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Acmbody4a)
}

void Acmbody4a::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&acmmsgcntr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&seatoccptfrntlests_) -
      reinterpret_cast<char*>(&acmmsgcntr_)) + sizeof(seatoccptfrntlests_));
}

Acmbody4a::~Acmbody4a() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Acmbody4a)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Acmbody4a::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Acmbody4a::ArenaDtor(void* object) {
  Acmbody4a* _this = reinterpret_cast< Acmbody4a* >(object);
  (void)_this;
}
void Acmbody4a::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Acmbody4a::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Acmbody4a& Acmbody4a::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Acmbody4a_nio_2eproto.base);
  return *internal_default_instance();
}


void Acmbody4a::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Acmbody4a)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&acmmsgcntr_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seatoccptfrntlests_) -
        reinterpret_cast<char*>(&acmmsgcntr_)) + sizeof(seatoccptfrntlests_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Acmbody4a::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 acmmsgcntr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_acmmsgcntr(&has_bits);
          acmmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 acmcrc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_acmcrc(&has_bits);
          acmcrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double latitudea = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_latitudea(&has_bits);
          latitudea_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double yawrate = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_yawrate(&has_bits);
          yawrate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional bool seatoccptfrntlests = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_seatoccptfrntlests(&has_bits);
          seatoccptfrntlests_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Acmbody4a::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Acmbody4a)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 acmmsgcntr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_acmmsgcntr(), target);
  }

  // optional int32 acmcrc = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_acmcrc(), target);
  }

  // optional double latitudea = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_latitudea(), target);
  }

  // optional double yawrate = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_yawrate(), target);
  }

  // optional bool seatoccptfrntlests = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_seatoccptfrntlests(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Acmbody4a)
  return target;
}

size_t Acmbody4a::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Acmbody4a)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional int32 acmmsgcntr = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_acmmsgcntr());
    }

    // optional int32 acmcrc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_acmcrc());
    }

    // optional double latitudea = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double yawrate = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional bool seatoccptfrntlests = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Acmbody4a::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Acmbody4a)
  GOOGLE_DCHECK_NE(&from, this);
  const Acmbody4a* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Acmbody4a>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Acmbody4a)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Acmbody4a)
    MergeFrom(*source);
  }
}

void Acmbody4a::MergeFrom(const Acmbody4a& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Acmbody4a)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      acmmsgcntr_ = from.acmmsgcntr_;
    }
    if (cached_has_bits & 0x00000002u) {
      acmcrc_ = from.acmcrc_;
    }
    if (cached_has_bits & 0x00000004u) {
      latitudea_ = from.latitudea_;
    }
    if (cached_has_bits & 0x00000008u) {
      yawrate_ = from.yawrate_;
    }
    if (cached_has_bits & 0x00000010u) {
      seatoccptfrntlests_ = from.seatoccptfrntlests_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Acmbody4a::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Acmbody4a)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acmbody4a::CopyFrom(const Acmbody4a& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Acmbody4a)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acmbody4a::IsInitialized() const {
  return true;
}

void Acmbody4a::InternalSwap(Acmbody4a* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Acmbody4a, seatoccptfrntlests_)
      + sizeof(Acmbody4a::seatoccptfrntlests_)
      - PROTOBUF_FIELD_OFFSET(Acmbody4a, acmmsgcntr_)>(
          reinterpret_cast<char*>(&acmmsgcntr_),
          reinterpret_cast<char*>(&other->acmmsgcntr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Acmbody4a::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Whlspdfront51::_Internal {
 public:
  using HasBits = decltype(std::declval<Whlspdfront51>()._has_bits_);
  static void set_has_wfmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_wfcrc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_whlspdfrsts(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_whlspdfrdir(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_whlspdfr(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_whlspdflsts(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_whlspdfldir(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_whlspdfl(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

Whlspdfront51::Whlspdfront51(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Whlspdfront51)
}
Whlspdfront51::Whlspdfront51(const Whlspdfront51& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&wfmsgcntr_, &from.wfmsgcntr_,
    static_cast<size_t>(reinterpret_cast<char*>(&whlspdfl_) -
    reinterpret_cast<char*>(&wfmsgcntr_)) + sizeof(whlspdfl_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Whlspdfront51)
}

void Whlspdfront51::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&wfmsgcntr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&whlspdfl_) -
      reinterpret_cast<char*>(&wfmsgcntr_)) + sizeof(whlspdfl_));
}

Whlspdfront51::~Whlspdfront51() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Whlspdfront51)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Whlspdfront51::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Whlspdfront51::ArenaDtor(void* object) {
  Whlspdfront51* _this = reinterpret_cast< Whlspdfront51* >(object);
  (void)_this;
}
void Whlspdfront51::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Whlspdfront51::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Whlspdfront51& Whlspdfront51::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Whlspdfront51_nio_2eproto.base);
  return *internal_default_instance();
}


void Whlspdfront51::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Whlspdfront51)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&wfmsgcntr_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&whlspdfl_) -
        reinterpret_cast<char*>(&wfmsgcntr_)) + sizeof(whlspdfl_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Whlspdfront51::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 wfmsgcntr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_wfmsgcntr(&has_bits);
          wfmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 wfcrc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_wfcrc(&has_bits);
          wfcrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Whlspdfront51.WhlspdfrstsType whlspdfrsts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Whlspdfront51_WhlspdfrstsType_IsValid(val))) {
            _internal_set_whlspdfrsts(static_cast<::apollo::canbus::Whlspdfront51_WhlspdfrstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Whlspdfront51.WhlspdfrdirType whlspdfrdir = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Whlspdfront51_WhlspdfrdirType_IsValid(val))) {
            _internal_set_whlspdfrdir(static_cast<::apollo::canbus::Whlspdfront51_WhlspdfrdirType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double whlspdfr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_whlspdfr(&has_bits);
          whlspdfr_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Whlspdfront51.WhlspdflstsType whlspdflsts = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Whlspdfront51_WhlspdflstsType_IsValid(val))) {
            _internal_set_whlspdflsts(static_cast<::apollo::canbus::Whlspdfront51_WhlspdflstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Whlspdfront51.WhlspdfldirType whlspdfldir = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Whlspdfront51_WhlspdfldirType_IsValid(val))) {
            _internal_set_whlspdfldir(static_cast<::apollo::canbus::Whlspdfront51_WhlspdfldirType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double whlspdfl = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          _Internal::set_has_whlspdfl(&has_bits);
          whlspdfl_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Whlspdfront51::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Whlspdfront51)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 wfmsgcntr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_wfmsgcntr(), target);
  }

  // optional int32 wfcrc = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_wfcrc(), target);
  }

  // optional .apollo.canbus.Whlspdfront51.WhlspdfrstsType whlspdfrsts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_whlspdfrsts(), target);
  }

  // optional .apollo.canbus.Whlspdfront51.WhlspdfrdirType whlspdfrdir = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_whlspdfrdir(), target);
  }

  // optional double whlspdfr = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_whlspdfr(), target);
  }

  // optional .apollo.canbus.Whlspdfront51.WhlspdflstsType whlspdflsts = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_whlspdflsts(), target);
  }

  // optional .apollo.canbus.Whlspdfront51.WhlspdfldirType whlspdfldir = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_whlspdfldir(), target);
  }

  // optional double whlspdfl = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_whlspdfl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Whlspdfront51)
  return target;
}

size_t Whlspdfront51::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Whlspdfront51)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 wfmsgcntr = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_wfmsgcntr());
    }

    // optional int32 wfcrc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_wfcrc());
    }

    // optional .apollo.canbus.Whlspdfront51.WhlspdfrstsType whlspdfrsts = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlspdfrsts());
    }

    // optional .apollo.canbus.Whlspdfront51.WhlspdfrdirType whlspdfrdir = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlspdfrdir());
    }

    // optional double whlspdfr = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Whlspdfront51.WhlspdflstsType whlspdflsts = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlspdflsts());
    }

    // optional .apollo.canbus.Whlspdfront51.WhlspdfldirType whlspdfldir = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlspdfldir());
    }

    // optional double whlspdfl = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Whlspdfront51::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Whlspdfront51)
  GOOGLE_DCHECK_NE(&from, this);
  const Whlspdfront51* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Whlspdfront51>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Whlspdfront51)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Whlspdfront51)
    MergeFrom(*source);
  }
}

void Whlspdfront51::MergeFrom(const Whlspdfront51& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Whlspdfront51)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      wfmsgcntr_ = from.wfmsgcntr_;
    }
    if (cached_has_bits & 0x00000002u) {
      wfcrc_ = from.wfcrc_;
    }
    if (cached_has_bits & 0x00000004u) {
      whlspdfrsts_ = from.whlspdfrsts_;
    }
    if (cached_has_bits & 0x00000008u) {
      whlspdfrdir_ = from.whlspdfrdir_;
    }
    if (cached_has_bits & 0x00000010u) {
      whlspdfr_ = from.whlspdfr_;
    }
    if (cached_has_bits & 0x00000020u) {
      whlspdflsts_ = from.whlspdflsts_;
    }
    if (cached_has_bits & 0x00000040u) {
      whlspdfldir_ = from.whlspdfldir_;
    }
    if (cached_has_bits & 0x00000080u) {
      whlspdfl_ = from.whlspdfl_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Whlspdfront51::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Whlspdfront51)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Whlspdfront51::CopyFrom(const Whlspdfront51& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Whlspdfront51)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Whlspdfront51::IsInitialized() const {
  return true;
}

void Whlspdfront51::InternalSwap(Whlspdfront51* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Whlspdfront51, whlspdfl_)
      + sizeof(Whlspdfront51::whlspdfl_)
      - PROTOBUF_FIELD_OFFSET(Whlspdfront51, wfmsgcntr_)>(
          reinterpret_cast<char*>(&wfmsgcntr_),
          reinterpret_cast<char*>(&other->wfmsgcntr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Whlspdfront51::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Whlspdrear52::_Internal {
 public:
  using HasBits = decltype(std::declval<Whlspdrear52>()._has_bits_);
  static void set_has_wrcrc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_wrmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_whlspdrrsts(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_whlspdrrdir(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_whlspdrr(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_whlspdrlsts(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_whlspdrldir(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_whlspdrl(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

Whlspdrear52::Whlspdrear52(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Whlspdrear52)
}
Whlspdrear52::Whlspdrear52(const Whlspdrear52& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&wrcrc_, &from.wrcrc_,
    static_cast<size_t>(reinterpret_cast<char*>(&whlspdrl_) -
    reinterpret_cast<char*>(&wrcrc_)) + sizeof(whlspdrl_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Whlspdrear52)
}

void Whlspdrear52::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&wrcrc_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&whlspdrl_) -
      reinterpret_cast<char*>(&wrcrc_)) + sizeof(whlspdrl_));
}

Whlspdrear52::~Whlspdrear52() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Whlspdrear52)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Whlspdrear52::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Whlspdrear52::ArenaDtor(void* object) {
  Whlspdrear52* _this = reinterpret_cast< Whlspdrear52* >(object);
  (void)_this;
}
void Whlspdrear52::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Whlspdrear52::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Whlspdrear52& Whlspdrear52::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Whlspdrear52_nio_2eproto.base);
  return *internal_default_instance();
}


void Whlspdrear52::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Whlspdrear52)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&wrcrc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&whlspdrl_) -
        reinterpret_cast<char*>(&wrcrc_)) + sizeof(whlspdrl_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Whlspdrear52::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 wrcrc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_wrcrc(&has_bits);
          wrcrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 wrmsgcntr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_wrmsgcntr(&has_bits);
          wrmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Whlspdrear52.WhlspdrrstsType whlspdrrsts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Whlspdrear52_WhlspdrrstsType_IsValid(val))) {
            _internal_set_whlspdrrsts(static_cast<::apollo::canbus::Whlspdrear52_WhlspdrrstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Whlspdrear52.WhlspdrrdirType whlspdrrdir = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Whlspdrear52_WhlspdrrdirType_IsValid(val))) {
            _internal_set_whlspdrrdir(static_cast<::apollo::canbus::Whlspdrear52_WhlspdrrdirType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double whlspdrr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_whlspdrr(&has_bits);
          whlspdrr_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Whlspdrear52.WhlspdrlstsType whlspdrlsts = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Whlspdrear52_WhlspdrlstsType_IsValid(val))) {
            _internal_set_whlspdrlsts(static_cast<::apollo::canbus::Whlspdrear52_WhlspdrlstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Whlspdrear52.WhlspdrldirType whlspdrldir = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Whlspdrear52_WhlspdrldirType_IsValid(val))) {
            _internal_set_whlspdrldir(static_cast<::apollo::canbus::Whlspdrear52_WhlspdrldirType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double whlspdrl = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          _Internal::set_has_whlspdrl(&has_bits);
          whlspdrl_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Whlspdrear52::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Whlspdrear52)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 wrcrc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_wrcrc(), target);
  }

  // optional int32 wrmsgcntr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_wrmsgcntr(), target);
  }

  // optional .apollo.canbus.Whlspdrear52.WhlspdrrstsType whlspdrrsts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_whlspdrrsts(), target);
  }

  // optional .apollo.canbus.Whlspdrear52.WhlspdrrdirType whlspdrrdir = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_whlspdrrdir(), target);
  }

  // optional double whlspdrr = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_whlspdrr(), target);
  }

  // optional .apollo.canbus.Whlspdrear52.WhlspdrlstsType whlspdrlsts = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_whlspdrlsts(), target);
  }

  // optional .apollo.canbus.Whlspdrear52.WhlspdrldirType whlspdrldir = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_whlspdrldir(), target);
  }

  // optional double whlspdrl = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_whlspdrl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Whlspdrear52)
  return target;
}

size_t Whlspdrear52::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Whlspdrear52)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 wrcrc = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_wrcrc());
    }

    // optional int32 wrmsgcntr = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_wrmsgcntr());
    }

    // optional .apollo.canbus.Whlspdrear52.WhlspdrrstsType whlspdrrsts = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlspdrrsts());
    }

    // optional .apollo.canbus.Whlspdrear52.WhlspdrrdirType whlspdrrdir = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlspdrrdir());
    }

    // optional double whlspdrr = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Whlspdrear52.WhlspdrlstsType whlspdrlsts = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlspdrlsts());
    }

    // optional .apollo.canbus.Whlspdrear52.WhlspdrldirType whlspdrldir = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlspdrldir());
    }

    // optional double whlspdrl = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Whlspdrear52::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Whlspdrear52)
  GOOGLE_DCHECK_NE(&from, this);
  const Whlspdrear52* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Whlspdrear52>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Whlspdrear52)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Whlspdrear52)
    MergeFrom(*source);
  }
}

void Whlspdrear52::MergeFrom(const Whlspdrear52& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Whlspdrear52)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      wrcrc_ = from.wrcrc_;
    }
    if (cached_has_bits & 0x00000002u) {
      wrmsgcntr_ = from.wrmsgcntr_;
    }
    if (cached_has_bits & 0x00000004u) {
      whlspdrrsts_ = from.whlspdrrsts_;
    }
    if (cached_has_bits & 0x00000008u) {
      whlspdrrdir_ = from.whlspdrrdir_;
    }
    if (cached_has_bits & 0x00000010u) {
      whlspdrr_ = from.whlspdrr_;
    }
    if (cached_has_bits & 0x00000020u) {
      whlspdrlsts_ = from.whlspdrlsts_;
    }
    if (cached_has_bits & 0x00000040u) {
      whlspdrldir_ = from.whlspdrldir_;
    }
    if (cached_has_bits & 0x00000080u) {
      whlspdrl_ = from.whlspdrl_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Whlspdrear52::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Whlspdrear52)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Whlspdrear52::CopyFrom(const Whlspdrear52& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Whlspdrear52)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Whlspdrear52::IsInitialized() const {
  return true;
}

void Whlspdrear52::InternalSwap(Whlspdrear52* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Whlspdrear52, whlspdrl_)
      + sizeof(Whlspdrear52::whlspdrl_)
      - PROTOBUF_FIELD_OFFSET(Whlspdrear52, wrcrc_)>(
          reinterpret_cast<char*>(&wrcrc_),
          reinterpret_cast<char*>(&other->wrcrc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Whlspdrear52::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Bcusts5e::_Internal {
 public:
  using HasBits = decltype(std::declval<Bcusts5e>()._has_bits_);
  static void set_has_tcsactv(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_scmavl(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_hfcactv(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_vdcactv(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_avhsts(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_autobrkgactv(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_vdcdeactv(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_abaactv(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_autobrkgavl(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_hbaactv(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_aebavl(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_aebactv(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_cdpavail(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_abaavl(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_hdcsts(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_tcsdeactv(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_awbavl(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_abpavl(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_awbactv(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_ebaavl(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_qdcaccfail(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_abpactv(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_pedpavl(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_cddsavl(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_standstillsts(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_hhcavail(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_absactv(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_pedpactv(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_ebaactv(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_cdpactv(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_ebdactv(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_scmactv(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_dtcactv(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_hrbactv(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_ecdttempoffs(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static void set_has_cddsactv(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_hhcactv(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
};

Bcusts5e::Bcusts5e(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Bcusts5e)
}
Bcusts5e::Bcusts5e(const Bcusts5e& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&tcsactv_, &from.tcsactv_,
    static_cast<size_t>(reinterpret_cast<char*>(&hhcactv_) -
    reinterpret_cast<char*>(&tcsactv_)) + sizeof(hhcactv_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Bcusts5e)
}

void Bcusts5e::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&tcsactv_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&hhcactv_) -
      reinterpret_cast<char*>(&tcsactv_)) + sizeof(hhcactv_));
}

Bcusts5e::~Bcusts5e() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Bcusts5e)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Bcusts5e::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Bcusts5e::ArenaDtor(void* object) {
  Bcusts5e* _this = reinterpret_cast< Bcusts5e* >(object);
  (void)_this;
}
void Bcusts5e::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Bcusts5e::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Bcusts5e& Bcusts5e::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Bcusts5e_nio_2eproto.base);
  return *internal_default_instance();
}


void Bcusts5e::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Bcusts5e)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&tcsactv_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&abaactv_) -
        reinterpret_cast<char*>(&tcsactv_)) + sizeof(abaactv_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&autobrkgavl_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tcsdeactv_) -
        reinterpret_cast<char*>(&autobrkgavl_)) + sizeof(tcsdeactv_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&awbavl_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cddsavl_) -
        reinterpret_cast<char*>(&awbavl_)) + sizeof(cddsavl_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&standstillsts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&scmactv_) -
        reinterpret_cast<char*>(&standstillsts_)) + sizeof(scmactv_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&dtcactv_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hhcactv_) -
        reinterpret_cast<char*>(&dtcactv_)) + sizeof(hhcactv_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Bcusts5e::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Bcusts5e.TcsactvType tcsactv = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_TcsactvType_IsValid(val))) {
            _internal_set_tcsactv(static_cast<::apollo::canbus::Bcusts5e_TcsactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.ScmavlType scmavl = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_ScmavlType_IsValid(val))) {
            _internal_set_scmavl(static_cast<::apollo::canbus::Bcusts5e_ScmavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.HfcactvType hfcactv = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_HfcactvType_IsValid(val))) {
            _internal_set_hfcactv(static_cast<::apollo::canbus::Bcusts5e_HfcactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.VdcactvType vdcactv = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_VdcactvType_IsValid(val))) {
            _internal_set_vdcactv(static_cast<::apollo::canbus::Bcusts5e_VdcactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AvhstsType avhsts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AvhstsType_IsValid(val))) {
            _internal_set_avhsts(static_cast<::apollo::canbus::Bcusts5e_AvhstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AutobrkgactvType autobrkgactv = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AutobrkgactvType_IsValid(val))) {
            _internal_set_autobrkgactv(static_cast<::apollo::canbus::Bcusts5e_AutobrkgactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.VdcdeactvType vdcdeactv = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_VdcdeactvType_IsValid(val))) {
            _internal_set_vdcdeactv(static_cast<::apollo::canbus::Bcusts5e_VdcdeactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AbaactvType abaactv = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AbaactvType_IsValid(val))) {
            _internal_set_abaactv(static_cast<::apollo::canbus::Bcusts5e_AbaactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AutobrkgavlType autobrkgavl = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AutobrkgavlType_IsValid(val))) {
            _internal_set_autobrkgavl(static_cast<::apollo::canbus::Bcusts5e_AutobrkgavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.HbaactvType hbaactv = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_HbaactvType_IsValid(val))) {
            _internal_set_hbaactv(static_cast<::apollo::canbus::Bcusts5e_HbaactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AebavlType aebavl = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AebavlType_IsValid(val))) {
            _internal_set_aebavl(static_cast<::apollo::canbus::Bcusts5e_AebavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AebactvType aebactv = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AebactvType_IsValid(val))) {
            _internal_set_aebactv(static_cast<::apollo::canbus::Bcusts5e_AebactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.CdpavailType cdpavail = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_CdpavailType_IsValid(val))) {
            _internal_set_cdpavail(static_cast<::apollo::canbus::Bcusts5e_CdpavailType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(13, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AbaavlType abaavl = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AbaavlType_IsValid(val))) {
            _internal_set_abaavl(static_cast<::apollo::canbus::Bcusts5e_AbaavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(14, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.HdcstsType hdcsts = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_HdcstsType_IsValid(val))) {
            _internal_set_hdcsts(static_cast<::apollo::canbus::Bcusts5e_HdcstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(15, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.TcsdeactvType tcsdeactv = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_TcsdeactvType_IsValid(val))) {
            _internal_set_tcsdeactv(static_cast<::apollo::canbus::Bcusts5e_TcsdeactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(16, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AwbavlType awbavl = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AwbavlType_IsValid(val))) {
            _internal_set_awbavl(static_cast<::apollo::canbus::Bcusts5e_AwbavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(17, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AbpavlType abpavl = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AbpavlType_IsValid(val))) {
            _internal_set_abpavl(static_cast<::apollo::canbus::Bcusts5e_AbpavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(18, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AwbactvType awbactv = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AwbactvType_IsValid(val))) {
            _internal_set_awbactv(static_cast<::apollo::canbus::Bcusts5e_AwbactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(19, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.EbaavlType ebaavl = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_EbaavlType_IsValid(val))) {
            _internal_set_ebaavl(static_cast<::apollo::canbus::Bcusts5e_EbaavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(20, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.QdcaccfailType qdcaccfail = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_QdcaccfailType_IsValid(val))) {
            _internal_set_qdcaccfail(static_cast<::apollo::canbus::Bcusts5e_QdcaccfailType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(21, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AbpactvType abpactv = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AbpactvType_IsValid(val))) {
            _internal_set_abpactv(static_cast<::apollo::canbus::Bcusts5e_AbpactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(22, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.PedpavlType pedpavl = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_PedpavlType_IsValid(val))) {
            _internal_set_pedpavl(static_cast<::apollo::canbus::Bcusts5e_PedpavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(23, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.CddsavlType cddsavl = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_CddsavlType_IsValid(val))) {
            _internal_set_cddsavl(static_cast<::apollo::canbus::Bcusts5e_CddsavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(24, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.StandstillstsType standstillsts = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_StandstillstsType_IsValid(val))) {
            _internal_set_standstillsts(static_cast<::apollo::canbus::Bcusts5e_StandstillstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(25, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.HhcavailType hhcavail = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_HhcavailType_IsValid(val))) {
            _internal_set_hhcavail(static_cast<::apollo::canbus::Bcusts5e_HhcavailType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(26, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.AbsactvType absactv = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_AbsactvType_IsValid(val))) {
            _internal_set_absactv(static_cast<::apollo::canbus::Bcusts5e_AbsactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(27, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.PedpactvType pedpactv = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_PedpactvType_IsValid(val))) {
            _internal_set_pedpactv(static_cast<::apollo::canbus::Bcusts5e_PedpactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(28, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.EbaactvType ebaactv = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_EbaactvType_IsValid(val))) {
            _internal_set_ebaactv(static_cast<::apollo::canbus::Bcusts5e_EbaactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(29, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.CdpactvType cdpactv = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_CdpactvType_IsValid(val))) {
            _internal_set_cdpactv(static_cast<::apollo::canbus::Bcusts5e_CdpactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(30, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.EbdactvType ebdactv = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_EbdactvType_IsValid(val))) {
            _internal_set_ebdactv(static_cast<::apollo::canbus::Bcusts5e_EbdactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(31, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.ScmactvType scmactv = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_ScmactvType_IsValid(val))) {
            _internal_set_scmactv(static_cast<::apollo::canbus::Bcusts5e_ScmactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(32, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.DtcactvType dtcactv = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_DtcactvType_IsValid(val))) {
            _internal_set_dtcactv(static_cast<::apollo::canbus::Bcusts5e_DtcactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(33, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.HrbactvType hrbactv = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_HrbactvType_IsValid(val))) {
            _internal_set_hrbactv(static_cast<::apollo::canbus::Bcusts5e_HrbactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(34, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.EcdttempoffsType ecdttempoffs = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_EcdttempoffsType_IsValid(val))) {
            _internal_set_ecdttempoffs(static_cast<::apollo::canbus::Bcusts5e_EcdttempoffsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(35, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.CddsactvType cddsactv = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_CddsactvType_IsValid(val))) {
            _internal_set_cddsactv(static_cast<::apollo::canbus::Bcusts5e_CddsactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(36, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e.HhcactvType hhcactv = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Bcusts5e_HhcactvType_IsValid(val))) {
            _internal_set_hhcactv(static_cast<::apollo::canbus::Bcusts5e_HhcactvType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(37, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Bcusts5e::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Bcusts5e)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Bcusts5e.TcsactvType tcsactv = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_tcsactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.ScmavlType scmavl = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_scmavl(), target);
  }

  // optional .apollo.canbus.Bcusts5e.HfcactvType hfcactv = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_hfcactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.VdcactvType vdcactv = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_vdcactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AvhstsType avhsts = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_avhsts(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AutobrkgactvType autobrkgactv = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_autobrkgactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.VdcdeactvType vdcdeactv = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_vdcdeactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AbaactvType abaactv = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_abaactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AutobrkgavlType autobrkgavl = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_autobrkgavl(), target);
  }

  // optional .apollo.canbus.Bcusts5e.HbaactvType hbaactv = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_hbaactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AebavlType aebavl = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_aebavl(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AebactvType aebactv = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_aebactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.CdpavailType cdpavail = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      13, this->_internal_cdpavail(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AbaavlType abaavl = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      14, this->_internal_abaavl(), target);
  }

  // optional .apollo.canbus.Bcusts5e.HdcstsType hdcsts = 15;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      15, this->_internal_hdcsts(), target);
  }

  // optional .apollo.canbus.Bcusts5e.TcsdeactvType tcsdeactv = 16;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      16, this->_internal_tcsdeactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AwbavlType awbavl = 17;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      17, this->_internal_awbavl(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AbpavlType abpavl = 18;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      18, this->_internal_abpavl(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AwbactvType awbactv = 19;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      19, this->_internal_awbactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.EbaavlType ebaavl = 20;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      20, this->_internal_ebaavl(), target);
  }

  // optional .apollo.canbus.Bcusts5e.QdcaccfailType qdcaccfail = 21;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      21, this->_internal_qdcaccfail(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AbpactvType abpactv = 22;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      22, this->_internal_abpactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.PedpavlType pedpavl = 23;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      23, this->_internal_pedpavl(), target);
  }

  // optional .apollo.canbus.Bcusts5e.CddsavlType cddsavl = 24;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      24, this->_internal_cddsavl(), target);
  }

  // optional .apollo.canbus.Bcusts5e.StandstillstsType standstillsts = 25;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      25, this->_internal_standstillsts(), target);
  }

  // optional .apollo.canbus.Bcusts5e.HhcavailType hhcavail = 26;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      26, this->_internal_hhcavail(), target);
  }

  // optional .apollo.canbus.Bcusts5e.AbsactvType absactv = 27;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      27, this->_internal_absactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.PedpactvType pedpactv = 28;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      28, this->_internal_pedpactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.EbaactvType ebaactv = 29;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      29, this->_internal_ebaactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.CdpactvType cdpactv = 30;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      30, this->_internal_cdpactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.EbdactvType ebdactv = 31;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      31, this->_internal_ebdactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.ScmactvType scmactv = 32;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      32, this->_internal_scmactv(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .apollo.canbus.Bcusts5e.DtcactvType dtcactv = 33;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      33, this->_internal_dtcactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.HrbactvType hrbactv = 34;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      34, this->_internal_hrbactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.EcdttempoffsType ecdttempoffs = 35;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      35, this->_internal_ecdttempoffs(), target);
  }

  // optional .apollo.canbus.Bcusts5e.CddsactvType cddsactv = 36;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      36, this->_internal_cddsactv(), target);
  }

  // optional .apollo.canbus.Bcusts5e.HhcactvType hhcactv = 37;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      37, this->_internal_hhcactv(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Bcusts5e)
  return target;
}

size_t Bcusts5e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Bcusts5e)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Bcusts5e.TcsactvType tcsactv = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_tcsactv());
    }

    // optional .apollo.canbus.Bcusts5e.ScmavlType scmavl = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_scmavl());
    }

    // optional .apollo.canbus.Bcusts5e.HfcactvType hfcactv = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hfcactv());
    }

    // optional .apollo.canbus.Bcusts5e.VdcactvType vdcactv = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_vdcactv());
    }

    // optional .apollo.canbus.Bcusts5e.AvhstsType avhsts = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_avhsts());
    }

    // optional .apollo.canbus.Bcusts5e.AutobrkgactvType autobrkgactv = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_autobrkgactv());
    }

    // optional .apollo.canbus.Bcusts5e.VdcdeactvType vdcdeactv = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_vdcdeactv());
    }

    // optional .apollo.canbus.Bcusts5e.AbaactvType abaactv = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_abaactv());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .apollo.canbus.Bcusts5e.AutobrkgavlType autobrkgavl = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_autobrkgavl());
    }

    // optional .apollo.canbus.Bcusts5e.HbaactvType hbaactv = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hbaactv());
    }

    // optional .apollo.canbus.Bcusts5e.AebavlType aebavl = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_aebavl());
    }

    // optional .apollo.canbus.Bcusts5e.AebactvType aebactv = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_aebactv());
    }

    // optional .apollo.canbus.Bcusts5e.CdpavailType cdpavail = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cdpavail());
    }

    // optional .apollo.canbus.Bcusts5e.AbaavlType abaavl = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_abaavl());
    }

    // optional .apollo.canbus.Bcusts5e.HdcstsType hdcsts = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hdcsts());
    }

    // optional .apollo.canbus.Bcusts5e.TcsdeactvType tcsdeactv = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_tcsdeactv());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .apollo.canbus.Bcusts5e.AwbavlType awbavl = 17;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_awbavl());
    }

    // optional .apollo.canbus.Bcusts5e.AbpavlType abpavl = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_abpavl());
    }

    // optional .apollo.canbus.Bcusts5e.AwbactvType awbactv = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_awbactv());
    }

    // optional .apollo.canbus.Bcusts5e.EbaavlType ebaavl = 20;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ebaavl());
    }

    // optional .apollo.canbus.Bcusts5e.QdcaccfailType qdcaccfail = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_qdcaccfail());
    }

    // optional .apollo.canbus.Bcusts5e.AbpactvType abpactv = 22;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_abpactv());
    }

    // optional .apollo.canbus.Bcusts5e.PedpavlType pedpavl = 23;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pedpavl());
    }

    // optional .apollo.canbus.Bcusts5e.CddsavlType cddsavl = 24;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cddsavl());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .apollo.canbus.Bcusts5e.StandstillstsType standstillsts = 25;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_standstillsts());
    }

    // optional .apollo.canbus.Bcusts5e.HhcavailType hhcavail = 26;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hhcavail());
    }

    // optional .apollo.canbus.Bcusts5e.AbsactvType absactv = 27;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_absactv());
    }

    // optional .apollo.canbus.Bcusts5e.PedpactvType pedpactv = 28;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pedpactv());
    }

    // optional .apollo.canbus.Bcusts5e.EbaactvType ebaactv = 29;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ebaactv());
    }

    // optional .apollo.canbus.Bcusts5e.CdpactvType cdpactv = 30;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cdpactv());
    }

    // optional .apollo.canbus.Bcusts5e.EbdactvType ebdactv = 31;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ebdactv());
    }

    // optional .apollo.canbus.Bcusts5e.ScmactvType scmactv = 32;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_scmactv());
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x0000001fu) {
    // optional .apollo.canbus.Bcusts5e.DtcactvType dtcactv = 33;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_dtcactv());
    }

    // optional .apollo.canbus.Bcusts5e.HrbactvType hrbactv = 34;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hrbactv());
    }

    // optional .apollo.canbus.Bcusts5e.EcdttempoffsType ecdttempoffs = 35;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ecdttempoffs());
    }

    // optional .apollo.canbus.Bcusts5e.CddsactvType cddsactv = 36;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cddsactv());
    }

    // optional .apollo.canbus.Bcusts5e.HhcactvType hhcactv = 37;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hhcactv());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bcusts5e::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Bcusts5e)
  GOOGLE_DCHECK_NE(&from, this);
  const Bcusts5e* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Bcusts5e>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Bcusts5e)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Bcusts5e)
    MergeFrom(*source);
  }
}

void Bcusts5e::MergeFrom(const Bcusts5e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Bcusts5e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      tcsactv_ = from.tcsactv_;
    }
    if (cached_has_bits & 0x00000002u) {
      scmavl_ = from.scmavl_;
    }
    if (cached_has_bits & 0x00000004u) {
      hfcactv_ = from.hfcactv_;
    }
    if (cached_has_bits & 0x00000008u) {
      vdcactv_ = from.vdcactv_;
    }
    if (cached_has_bits & 0x00000010u) {
      avhsts_ = from.avhsts_;
    }
    if (cached_has_bits & 0x00000020u) {
      autobrkgactv_ = from.autobrkgactv_;
    }
    if (cached_has_bits & 0x00000040u) {
      vdcdeactv_ = from.vdcdeactv_;
    }
    if (cached_has_bits & 0x00000080u) {
      abaactv_ = from.abaactv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      autobrkgavl_ = from.autobrkgavl_;
    }
    if (cached_has_bits & 0x00000200u) {
      hbaactv_ = from.hbaactv_;
    }
    if (cached_has_bits & 0x00000400u) {
      aebavl_ = from.aebavl_;
    }
    if (cached_has_bits & 0x00000800u) {
      aebactv_ = from.aebactv_;
    }
    if (cached_has_bits & 0x00001000u) {
      cdpavail_ = from.cdpavail_;
    }
    if (cached_has_bits & 0x00002000u) {
      abaavl_ = from.abaavl_;
    }
    if (cached_has_bits & 0x00004000u) {
      hdcsts_ = from.hdcsts_;
    }
    if (cached_has_bits & 0x00008000u) {
      tcsdeactv_ = from.tcsdeactv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      awbavl_ = from.awbavl_;
    }
    if (cached_has_bits & 0x00020000u) {
      abpavl_ = from.abpavl_;
    }
    if (cached_has_bits & 0x00040000u) {
      awbactv_ = from.awbactv_;
    }
    if (cached_has_bits & 0x00080000u) {
      ebaavl_ = from.ebaavl_;
    }
    if (cached_has_bits & 0x00100000u) {
      qdcaccfail_ = from.qdcaccfail_;
    }
    if (cached_has_bits & 0x00200000u) {
      abpactv_ = from.abpactv_;
    }
    if (cached_has_bits & 0x00400000u) {
      pedpavl_ = from.pedpavl_;
    }
    if (cached_has_bits & 0x00800000u) {
      cddsavl_ = from.cddsavl_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      standstillsts_ = from.standstillsts_;
    }
    if (cached_has_bits & 0x02000000u) {
      hhcavail_ = from.hhcavail_;
    }
    if (cached_has_bits & 0x04000000u) {
      absactv_ = from.absactv_;
    }
    if (cached_has_bits & 0x08000000u) {
      pedpactv_ = from.pedpactv_;
    }
    if (cached_has_bits & 0x10000000u) {
      ebaactv_ = from.ebaactv_;
    }
    if (cached_has_bits & 0x20000000u) {
      cdpactv_ = from.cdpactv_;
    }
    if (cached_has_bits & 0x40000000u) {
      ebdactv_ = from.ebdactv_;
    }
    if (cached_has_bits & 0x80000000u) {
      scmactv_ = from.scmactv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      dtcactv_ = from.dtcactv_;
    }
    if (cached_has_bits & 0x00000002u) {
      hrbactv_ = from.hrbactv_;
    }
    if (cached_has_bits & 0x00000004u) {
      ecdttempoffs_ = from.ecdttempoffs_;
    }
    if (cached_has_bits & 0x00000008u) {
      cddsactv_ = from.cddsactv_;
    }
    if (cached_has_bits & 0x00000010u) {
      hhcactv_ = from.hhcactv_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void Bcusts5e::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Bcusts5e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bcusts5e::CopyFrom(const Bcusts5e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Bcusts5e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bcusts5e::IsInitialized() const {
  return true;
}

void Bcusts5e::InternalSwap(Bcusts5e* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Bcusts5e, hhcactv_)
      + sizeof(Bcusts5e::hhcactv_)
      - PROTOBUF_FIELD_OFFSET(Bcusts5e, tcsactv_)>(
          reinterpret_cast<char*>(&tcsactv_),
          reinterpret_cast<char*>(&other->tcsactv_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Bcusts5e::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Pulsecnt65::_Internal {
 public:
  using HasBits = decltype(std::declval<Pulsecnt65>()._has_bits_);
  static void set_has_whlplscntrrvld(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_whlplscntrr(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_whlplscntrlvld(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_whlplscntrl(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_whlplscntfrvld(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_whlplscntfr(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_whlplscntflvld(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_whlplscntfl(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

Pulsecnt65::Pulsecnt65(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Pulsecnt65)
}
Pulsecnt65::Pulsecnt65(const Pulsecnt65& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&whlplscntrrvld_, &from.whlplscntrrvld_,
    static_cast<size_t>(reinterpret_cast<char*>(&whlplscntfl_) -
    reinterpret_cast<char*>(&whlplscntrrvld_)) + sizeof(whlplscntfl_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Pulsecnt65)
}

void Pulsecnt65::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&whlplscntrrvld_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&whlplscntfl_) -
      reinterpret_cast<char*>(&whlplscntrrvld_)) + sizeof(whlplscntfl_));
}

Pulsecnt65::~Pulsecnt65() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Pulsecnt65)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pulsecnt65::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pulsecnt65::ArenaDtor(void* object) {
  Pulsecnt65* _this = reinterpret_cast< Pulsecnt65* >(object);
  (void)_this;
}
void Pulsecnt65::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pulsecnt65::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pulsecnt65& Pulsecnt65::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pulsecnt65_nio_2eproto.base);
  return *internal_default_instance();
}


void Pulsecnt65::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Pulsecnt65)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&whlplscntrrvld_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&whlplscntfl_) -
        reinterpret_cast<char*>(&whlplscntrrvld_)) + sizeof(whlplscntfl_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pulsecnt65::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Pulsecnt65.WhlplscntrrvldType whlplscntrrvld = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Pulsecnt65_WhlplscntrrvldType_IsValid(val))) {
            _internal_set_whlplscntrrvld(static_cast<::apollo::canbus::Pulsecnt65_WhlplscntrrvldType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 whlplscntrr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_whlplscntrr(&has_bits);
          whlplscntrr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Pulsecnt65.WhlplscntrlvldType whlplscntrlvld = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Pulsecnt65_WhlplscntrlvldType_IsValid(val))) {
            _internal_set_whlplscntrlvld(static_cast<::apollo::canbus::Pulsecnt65_WhlplscntrlvldType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 whlplscntrl = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_whlplscntrl(&has_bits);
          whlplscntrl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Pulsecnt65.WhlplscntfrvldType whlplscntfrvld = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Pulsecnt65_WhlplscntfrvldType_IsValid(val))) {
            _internal_set_whlplscntfrvld(static_cast<::apollo::canbus::Pulsecnt65_WhlplscntfrvldType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 whlplscntfr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_whlplscntfr(&has_bits);
          whlplscntfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Pulsecnt65.WhlplscntflvldType whlplscntflvld = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Pulsecnt65_WhlplscntflvldType_IsValid(val))) {
            _internal_set_whlplscntflvld(static_cast<::apollo::canbus::Pulsecnt65_WhlplscntflvldType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 whlplscntfl = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_whlplscntfl(&has_bits);
          whlplscntfl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pulsecnt65::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Pulsecnt65)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Pulsecnt65.WhlplscntrrvldType whlplscntrrvld = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_whlplscntrrvld(), target);
  }

  // optional int32 whlplscntrr = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_whlplscntrr(), target);
  }

  // optional .apollo.canbus.Pulsecnt65.WhlplscntrlvldType whlplscntrlvld = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_whlplscntrlvld(), target);
  }

  // optional int32 whlplscntrl = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_whlplscntrl(), target);
  }

  // optional .apollo.canbus.Pulsecnt65.WhlplscntfrvldType whlplscntfrvld = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_whlplscntfrvld(), target);
  }

  // optional int32 whlplscntfr = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_whlplscntfr(), target);
  }

  // optional .apollo.canbus.Pulsecnt65.WhlplscntflvldType whlplscntflvld = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_whlplscntflvld(), target);
  }

  // optional int32 whlplscntfl = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_whlplscntfl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Pulsecnt65)
  return target;
}

size_t Pulsecnt65::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Pulsecnt65)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Pulsecnt65.WhlplscntrrvldType whlplscntrrvld = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlplscntrrvld());
    }

    // optional int32 whlplscntrr = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_whlplscntrr());
    }

    // optional .apollo.canbus.Pulsecnt65.WhlplscntrlvldType whlplscntrlvld = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlplscntrlvld());
    }

    // optional int32 whlplscntrl = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_whlplscntrl());
    }

    // optional .apollo.canbus.Pulsecnt65.WhlplscntfrvldType whlplscntfrvld = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlplscntfrvld());
    }

    // optional int32 whlplscntfr = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_whlplscntfr());
    }

    // optional .apollo.canbus.Pulsecnt65.WhlplscntflvldType whlplscntflvld = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_whlplscntflvld());
    }

    // optional int32 whlplscntfl = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_whlplscntfl());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pulsecnt65::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Pulsecnt65)
  GOOGLE_DCHECK_NE(&from, this);
  const Pulsecnt65* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pulsecnt65>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Pulsecnt65)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Pulsecnt65)
    MergeFrom(*source);
  }
}

void Pulsecnt65::MergeFrom(const Pulsecnt65& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Pulsecnt65)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      whlplscntrrvld_ = from.whlplscntrrvld_;
    }
    if (cached_has_bits & 0x00000002u) {
      whlplscntrr_ = from.whlplscntrr_;
    }
    if (cached_has_bits & 0x00000004u) {
      whlplscntrlvld_ = from.whlplscntrlvld_;
    }
    if (cached_has_bits & 0x00000008u) {
      whlplscntrl_ = from.whlplscntrl_;
    }
    if (cached_has_bits & 0x00000010u) {
      whlplscntfrvld_ = from.whlplscntfrvld_;
    }
    if (cached_has_bits & 0x00000020u) {
      whlplscntfr_ = from.whlplscntfr_;
    }
    if (cached_has_bits & 0x00000040u) {
      whlplscntflvld_ = from.whlplscntflvld_;
    }
    if (cached_has_bits & 0x00000080u) {
      whlplscntfl_ = from.whlplscntfl_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Pulsecnt65::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Pulsecnt65)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pulsecnt65::CopyFrom(const Pulsecnt65& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Pulsecnt65)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pulsecnt65::IsInitialized() const {
  return true;
}

void Pulsecnt65::InternalSwap(Pulsecnt65* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pulsecnt65, whlplscntfl_)
      + sizeof(Pulsecnt65::whlplscntfl_)
      - PROTOBUF_FIELD_OFFSET(Pulsecnt65, whlplscntrrvld_)>(
          reinterpret_cast<char*>(&whlplscntrrvld_),
          reinterpret_cast<char*>(&other->whlplscntrrvld_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pulsecnt65::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Aebreq79::_Internal {
 public:
  using HasBits = decltype(std::declval<Aebreq79>()._has_bits_);
  static void set_has_aebtardecel(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_abareq(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_abasnvtylvl(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_awbsnvtylvl(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_awbreq(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_scmdecelreq(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_aebmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_aebdecelreq(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_ebadecelreq(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_abpreq(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_pedpdecreq(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_aebcrc(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
};

Aebreq79::Aebreq79(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Aebreq79)
}
Aebreq79::Aebreq79(const Aebreq79& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&aebtardecel_, &from.aebtardecel_,
    static_cast<size_t>(reinterpret_cast<char*>(&aebcrc_) -
    reinterpret_cast<char*>(&aebtardecel_)) + sizeof(aebcrc_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Aebreq79)
}

void Aebreq79::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&aebtardecel_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&aebcrc_) -
      reinterpret_cast<char*>(&aebtardecel_)) + sizeof(aebcrc_));
}

Aebreq79::~Aebreq79() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Aebreq79)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Aebreq79::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Aebreq79::ArenaDtor(void* object) {
  Aebreq79* _this = reinterpret_cast< Aebreq79* >(object);
  (void)_this;
}
void Aebreq79::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Aebreq79::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Aebreq79& Aebreq79::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Aebreq79_nio_2eproto.base);
  return *internal_default_instance();
}


void Aebreq79::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Aebreq79)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&aebtardecel_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&aebdecelreq_) -
        reinterpret_cast<char*>(&aebtardecel_)) + sizeof(aebdecelreq_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&ebadecelreq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&aebcrc_) -
        reinterpret_cast<char*>(&ebadecelreq_)) + sizeof(aebcrc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Aebreq79::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double aebtardecel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_aebtardecel(&has_bits);
          aebtardecel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Aebreq79.AbareqType abareq = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Aebreq79_AbareqType_IsValid(val))) {
            _internal_set_abareq(static_cast<::apollo::canbus::Aebreq79_AbareqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Aebreq79.AbasnvtylvlType abasnvtylvl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Aebreq79_AbasnvtylvlType_IsValid(val))) {
            _internal_set_abasnvtylvl(static_cast<::apollo::canbus::Aebreq79_AbasnvtylvlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Aebreq79.AwbsnvtylvlType awbsnvtylvl = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Aebreq79_AwbsnvtylvlType_IsValid(val))) {
            _internal_set_awbsnvtylvl(static_cast<::apollo::canbus::Aebreq79_AwbsnvtylvlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Aebreq79.AwbreqType awbreq = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Aebreq79_AwbreqType_IsValid(val))) {
            _internal_set_awbreq(static_cast<::apollo::canbus::Aebreq79_AwbreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Aebreq79.ScmdecelreqType scmdecelreq = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Aebreq79_ScmdecelreqType_IsValid(val))) {
            _internal_set_scmdecelreq(static_cast<::apollo::canbus::Aebreq79_ScmdecelreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 aebmsgcntr = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_aebmsgcntr(&has_bits);
          aebmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Aebreq79.AebdecelreqType aebdecelreq = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Aebreq79_AebdecelreqType_IsValid(val))) {
            _internal_set_aebdecelreq(static_cast<::apollo::canbus::Aebreq79_AebdecelreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Aebreq79.EbadecelreqType ebadecelreq = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Aebreq79_EbadecelreqType_IsValid(val))) {
            _internal_set_ebadecelreq(static_cast<::apollo::canbus::Aebreq79_EbadecelreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Aebreq79.AbpreqType abpreq = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Aebreq79_AbpreqType_IsValid(val))) {
            _internal_set_abpreq(static_cast<::apollo::canbus::Aebreq79_AbpreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Aebreq79.PedpdecreqType pedpdecreq = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Aebreq79_PedpdecreqType_IsValid(val))) {
            _internal_set_pedpdecreq(static_cast<::apollo::canbus::Aebreq79_PedpdecreqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 aebcrc = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_aebcrc(&has_bits);
          aebcrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Aebreq79::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Aebreq79)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double aebtardecel = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_aebtardecel(), target);
  }

  // optional .apollo.canbus.Aebreq79.AbareqType abareq = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_abareq(), target);
  }

  // optional .apollo.canbus.Aebreq79.AbasnvtylvlType abasnvtylvl = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_abasnvtylvl(), target);
  }

  // optional .apollo.canbus.Aebreq79.AwbsnvtylvlType awbsnvtylvl = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_awbsnvtylvl(), target);
  }

  // optional .apollo.canbus.Aebreq79.AwbreqType awbreq = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_awbreq(), target);
  }

  // optional .apollo.canbus.Aebreq79.ScmdecelreqType scmdecelreq = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_scmdecelreq(), target);
  }

  // optional int32 aebmsgcntr = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_aebmsgcntr(), target);
  }

  // optional .apollo.canbus.Aebreq79.AebdecelreqType aebdecelreq = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_aebdecelreq(), target);
  }

  // optional .apollo.canbus.Aebreq79.EbadecelreqType ebadecelreq = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_ebadecelreq(), target);
  }

  // optional .apollo.canbus.Aebreq79.AbpreqType abpreq = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_abpreq(), target);
  }

  // optional .apollo.canbus.Aebreq79.PedpdecreqType pedpdecreq = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_pedpdecreq(), target);
  }

  // optional int32 aebcrc = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_aebcrc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Aebreq79)
  return target;
}

size_t Aebreq79::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Aebreq79)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional double aebtardecel = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Aebreq79.AbareqType abareq = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_abareq());
    }

    // optional .apollo.canbus.Aebreq79.AbasnvtylvlType abasnvtylvl = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_abasnvtylvl());
    }

    // optional .apollo.canbus.Aebreq79.AwbsnvtylvlType awbsnvtylvl = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_awbsnvtylvl());
    }

    // optional .apollo.canbus.Aebreq79.AwbreqType awbreq = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_awbreq());
    }

    // optional .apollo.canbus.Aebreq79.ScmdecelreqType scmdecelreq = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_scmdecelreq());
    }

    // optional int32 aebmsgcntr = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_aebmsgcntr());
    }

    // optional .apollo.canbus.Aebreq79.AebdecelreqType aebdecelreq = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_aebdecelreq());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional .apollo.canbus.Aebreq79.EbadecelreqType ebadecelreq = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ebadecelreq());
    }

    // optional .apollo.canbus.Aebreq79.AbpreqType abpreq = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_abpreq());
    }

    // optional .apollo.canbus.Aebreq79.PedpdecreqType pedpdecreq = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pedpdecreq());
    }

    // optional int32 aebcrc = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_aebcrc());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Aebreq79::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Aebreq79)
  GOOGLE_DCHECK_NE(&from, this);
  const Aebreq79* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Aebreq79>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Aebreq79)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Aebreq79)
    MergeFrom(*source);
  }
}

void Aebreq79::MergeFrom(const Aebreq79& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Aebreq79)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      aebtardecel_ = from.aebtardecel_;
    }
    if (cached_has_bits & 0x00000002u) {
      abareq_ = from.abareq_;
    }
    if (cached_has_bits & 0x00000004u) {
      abasnvtylvl_ = from.abasnvtylvl_;
    }
    if (cached_has_bits & 0x00000008u) {
      awbsnvtylvl_ = from.awbsnvtylvl_;
    }
    if (cached_has_bits & 0x00000010u) {
      awbreq_ = from.awbreq_;
    }
    if (cached_has_bits & 0x00000020u) {
      scmdecelreq_ = from.scmdecelreq_;
    }
    if (cached_has_bits & 0x00000040u) {
      aebmsgcntr_ = from.aebmsgcntr_;
    }
    if (cached_has_bits & 0x00000080u) {
      aebdecelreq_ = from.aebdecelreq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      ebadecelreq_ = from.ebadecelreq_;
    }
    if (cached_has_bits & 0x00000200u) {
      abpreq_ = from.abpreq_;
    }
    if (cached_has_bits & 0x00000400u) {
      pedpdecreq_ = from.pedpdecreq_;
    }
    if (cached_has_bits & 0x00000800u) {
      aebcrc_ = from.aebcrc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Aebreq79::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Aebreq79)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Aebreq79::CopyFrom(const Aebreq79& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Aebreq79)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Aebreq79::IsInitialized() const {
  return true;
}

void Aebreq79::InternalSwap(Aebreq79* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Aebreq79, aebcrc_)
      + sizeof(Aebreq79::aebcrc_)
      - PROTOBUF_FIELD_OFFSET(Aebreq79, aebtardecel_)>(
          reinterpret_cast<char*>(&aebtardecel_),
          reinterpret_cast<char*>(&other->aebtardecel_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Aebreq79::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Scmsts7b::_Internal {
 public:
  using HasBits = decltype(std::declval<Scmsts7b>()._has_bits_);
  static void set_has_scmfailsts(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hilowbeampushswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_frntwiprswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_turnindcrswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_foglipushswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_frntwiprinterspd(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_menuorvoldwnpushswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_accspdincorresuswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_acctimegapincswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_selnpushswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_modetogdecswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_modetogincswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_menupushswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_swcfailsts(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_accspddecswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_scmcrc(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_menulepushswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_menuorvoluppushswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_scmmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_acctimegapdecswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_menuripushswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_accsetswtsts(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
};

Scmsts7b::Scmsts7b(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Scmsts7b)
}
Scmsts7b::Scmsts7b(const Scmsts7b& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&scmfailsts_, &from.scmfailsts_,
    static_cast<size_t>(reinterpret_cast<char*>(&accsetswtsts_) -
    reinterpret_cast<char*>(&scmfailsts_)) + sizeof(accsetswtsts_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Scmsts7b)
}

void Scmsts7b::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&scmfailsts_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accsetswtsts_) -
      reinterpret_cast<char*>(&scmfailsts_)) + sizeof(accsetswtsts_));
}

Scmsts7b::~Scmsts7b() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Scmsts7b)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Scmsts7b::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Scmsts7b::ArenaDtor(void* object) {
  Scmsts7b* _this = reinterpret_cast< Scmsts7b* >(object);
  (void)_this;
}
void Scmsts7b::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Scmsts7b::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Scmsts7b& Scmsts7b::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Scmsts7b_nio_2eproto.base);
  return *internal_default_instance();
}


void Scmsts7b::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Scmsts7b)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&scmfailsts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&accspdincorresuswtsts_) -
        reinterpret_cast<char*>(&scmfailsts_)) + sizeof(accspdincorresuswtsts_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&acctimegapincswtsts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&scmcrc_) -
        reinterpret_cast<char*>(&acctimegapincswtsts_)) + sizeof(scmcrc_));
  }
  if (cached_has_bits & 0x003f0000u) {
    ::memset(&menulepushswtsts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&accsetswtsts_) -
        reinterpret_cast<char*>(&menulepushswtsts_)) + sizeof(accsetswtsts_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scmsts7b::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Scmsts7b.ScmfailstsType scmfailsts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_ScmfailstsType_IsValid(val))) {
            _internal_set_scmfailsts(static_cast<::apollo::canbus::Scmsts7b_ScmfailstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.HilowbeampushswtstsType hilowbeampushswtsts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_HilowbeampushswtstsType_IsValid(val))) {
            _internal_set_hilowbeampushswtsts(static_cast<::apollo::canbus::Scmsts7b_HilowbeampushswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.FrntwiprswtstsType frntwiprswtsts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_FrntwiprswtstsType_IsValid(val))) {
            _internal_set_frntwiprswtsts(static_cast<::apollo::canbus::Scmsts7b_FrntwiprswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.TurnindcrswtstsType turnindcrswtsts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_TurnindcrswtstsType_IsValid(val))) {
            _internal_set_turnindcrswtsts(static_cast<::apollo::canbus::Scmsts7b_TurnindcrswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.FoglipushswtstsType foglipushswtsts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_FoglipushswtstsType_IsValid(val))) {
            _internal_set_foglipushswtsts(static_cast<::apollo::canbus::Scmsts7b_FoglipushswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.FrntwiprinterspdType frntwiprinterspd = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_FrntwiprinterspdType_IsValid(val))) {
            _internal_set_frntwiprinterspd(static_cast<::apollo::canbus::Scmsts7b_FrntwiprinterspdType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.MenuorvoldwnpushswtstsType menuorvoldwnpushswtsts = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_MenuorvoldwnpushswtstsType_IsValid(val))) {
            _internal_set_menuorvoldwnpushswtsts(static_cast<::apollo::canbus::Scmsts7b_MenuorvoldwnpushswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.AccspdincorresuswtstsType accspdincorresuswtsts = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_AccspdincorresuswtstsType_IsValid(val))) {
            _internal_set_accspdincorresuswtsts(static_cast<::apollo::canbus::Scmsts7b_AccspdincorresuswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.AcctimegapincswtstsType acctimegapincswtsts = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_AcctimegapincswtstsType_IsValid(val))) {
            _internal_set_acctimegapincswtsts(static_cast<::apollo::canbus::Scmsts7b_AcctimegapincswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.SelnpushswtstsType selnpushswtsts = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_SelnpushswtstsType_IsValid(val))) {
            _internal_set_selnpushswtsts(static_cast<::apollo::canbus::Scmsts7b_SelnpushswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.ModetogdecswtstsType modetogdecswtsts = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_ModetogdecswtstsType_IsValid(val))) {
            _internal_set_modetogdecswtsts(static_cast<::apollo::canbus::Scmsts7b_ModetogdecswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.ModetogincswtstsType modetogincswtsts = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_ModetogincswtstsType_IsValid(val))) {
            _internal_set_modetogincswtsts(static_cast<::apollo::canbus::Scmsts7b_ModetogincswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.MenupushswtstsType menupushswtsts = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_MenupushswtstsType_IsValid(val))) {
            _internal_set_menupushswtsts(static_cast<::apollo::canbus::Scmsts7b_MenupushswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(13, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.SwcfailstsType swcfailsts = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_SwcfailstsType_IsValid(val))) {
            _internal_set_swcfailsts(static_cast<::apollo::canbus::Scmsts7b_SwcfailstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(14, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.AccspddecswtstsType accspddecswtsts = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_AccspddecswtstsType_IsValid(val))) {
            _internal_set_accspddecswtsts(static_cast<::apollo::canbus::Scmsts7b_AccspddecswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(15, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 scmcrc = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_scmcrc(&has_bits);
          scmcrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.MenulepushswtstsType menulepushswtsts = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_MenulepushswtstsType_IsValid(val))) {
            _internal_set_menulepushswtsts(static_cast<::apollo::canbus::Scmsts7b_MenulepushswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(17, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.MenuorvoluppushswtstsType menuorvoluppushswtsts = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_MenuorvoluppushswtstsType_IsValid(val))) {
            _internal_set_menuorvoluppushswtsts(static_cast<::apollo::canbus::Scmsts7b_MenuorvoluppushswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(18, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 scmmsgcntr = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_scmmsgcntr(&has_bits);
          scmmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.AcctimegapdecswtstsType acctimegapdecswtsts = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_AcctimegapdecswtstsType_IsValid(val))) {
            _internal_set_acctimegapdecswtsts(static_cast<::apollo::canbus::Scmsts7b_AcctimegapdecswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(20, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.MenuripushswtstsType menuripushswtsts = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_MenuripushswtstsType_IsValid(val))) {
            _internal_set_menuripushswtsts(static_cast<::apollo::canbus::Scmsts7b_MenuripushswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(21, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b.AccsetswtstsType accsetswtsts = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Scmsts7b_AccsetswtstsType_IsValid(val))) {
            _internal_set_accsetswtsts(static_cast<::apollo::canbus::Scmsts7b_AccsetswtstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(22, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Scmsts7b::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Scmsts7b)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Scmsts7b.ScmfailstsType scmfailsts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_scmfailsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.HilowbeampushswtstsType hilowbeampushswtsts = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_hilowbeampushswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.FrntwiprswtstsType frntwiprswtsts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_frntwiprswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.TurnindcrswtstsType turnindcrswtsts = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_turnindcrswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.FoglipushswtstsType foglipushswtsts = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_foglipushswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.FrntwiprinterspdType frntwiprinterspd = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_frntwiprinterspd(), target);
  }

  // optional .apollo.canbus.Scmsts7b.MenuorvoldwnpushswtstsType menuorvoldwnpushswtsts = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_menuorvoldwnpushswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.AccspdincorresuswtstsType accspdincorresuswtsts = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_accspdincorresuswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.AcctimegapincswtstsType acctimegapincswtsts = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_acctimegapincswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.SelnpushswtstsType selnpushswtsts = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_selnpushswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.ModetogdecswtstsType modetogdecswtsts = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_modetogdecswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.ModetogincswtstsType modetogincswtsts = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_modetogincswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.MenupushswtstsType menupushswtsts = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      13, this->_internal_menupushswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.SwcfailstsType swcfailsts = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      14, this->_internal_swcfailsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.AccspddecswtstsType accspddecswtsts = 15;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      15, this->_internal_accspddecswtsts(), target);
  }

  // optional int32 scmcrc = 16;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_scmcrc(), target);
  }

  // optional .apollo.canbus.Scmsts7b.MenulepushswtstsType menulepushswtsts = 17;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      17, this->_internal_menulepushswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.MenuorvoluppushswtstsType menuorvoluppushswtsts = 18;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      18, this->_internal_menuorvoluppushswtsts(), target);
  }

  // optional int32 scmmsgcntr = 19;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_scmmsgcntr(), target);
  }

  // optional .apollo.canbus.Scmsts7b.AcctimegapdecswtstsType acctimegapdecswtsts = 20;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      20, this->_internal_acctimegapdecswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.MenuripushswtstsType menuripushswtsts = 21;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      21, this->_internal_menuripushswtsts(), target);
  }

  // optional .apollo.canbus.Scmsts7b.AccsetswtstsType accsetswtsts = 22;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      22, this->_internal_accsetswtsts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Scmsts7b)
  return target;
}

size_t Scmsts7b::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Scmsts7b)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Scmsts7b.ScmfailstsType scmfailsts = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_scmfailsts());
    }

    // optional .apollo.canbus.Scmsts7b.HilowbeampushswtstsType hilowbeampushswtsts = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hilowbeampushswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.FrntwiprswtstsType frntwiprswtsts = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_frntwiprswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.TurnindcrswtstsType turnindcrswtsts = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_turnindcrswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.FoglipushswtstsType foglipushswtsts = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_foglipushswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.FrntwiprinterspdType frntwiprinterspd = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_frntwiprinterspd());
    }

    // optional .apollo.canbus.Scmsts7b.MenuorvoldwnpushswtstsType menuorvoldwnpushswtsts = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_menuorvoldwnpushswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.AccspdincorresuswtstsType accspdincorresuswtsts = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_accspdincorresuswtsts());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .apollo.canbus.Scmsts7b.AcctimegapincswtstsType acctimegapincswtsts = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_acctimegapincswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.SelnpushswtstsType selnpushswtsts = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_selnpushswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.ModetogdecswtstsType modetogdecswtsts = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_modetogdecswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.ModetogincswtstsType modetogincswtsts = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_modetogincswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.MenupushswtstsType menupushswtsts = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_menupushswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.SwcfailstsType swcfailsts = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_swcfailsts());
    }

    // optional .apollo.canbus.Scmsts7b.AccspddecswtstsType accspddecswtsts = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_accspddecswtsts());
    }

    // optional int32 scmcrc = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_scmcrc());
    }

  }
  if (cached_has_bits & 0x003f0000u) {
    // optional .apollo.canbus.Scmsts7b.MenulepushswtstsType menulepushswtsts = 17;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_menulepushswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.MenuorvoluppushswtstsType menuorvoluppushswtsts = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_menuorvoluppushswtsts());
    }

    // optional int32 scmmsgcntr = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_scmmsgcntr());
    }

    // optional .apollo.canbus.Scmsts7b.AcctimegapdecswtstsType acctimegapdecswtsts = 20;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_acctimegapdecswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.MenuripushswtstsType menuripushswtsts = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_menuripushswtsts());
    }

    // optional .apollo.canbus.Scmsts7b.AccsetswtstsType accsetswtsts = 22;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_accsetswtsts());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scmsts7b::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Scmsts7b)
  GOOGLE_DCHECK_NE(&from, this);
  const Scmsts7b* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Scmsts7b>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Scmsts7b)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Scmsts7b)
    MergeFrom(*source);
  }
}

void Scmsts7b::MergeFrom(const Scmsts7b& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Scmsts7b)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      scmfailsts_ = from.scmfailsts_;
    }
    if (cached_has_bits & 0x00000002u) {
      hilowbeampushswtsts_ = from.hilowbeampushswtsts_;
    }
    if (cached_has_bits & 0x00000004u) {
      frntwiprswtsts_ = from.frntwiprswtsts_;
    }
    if (cached_has_bits & 0x00000008u) {
      turnindcrswtsts_ = from.turnindcrswtsts_;
    }
    if (cached_has_bits & 0x00000010u) {
      foglipushswtsts_ = from.foglipushswtsts_;
    }
    if (cached_has_bits & 0x00000020u) {
      frntwiprinterspd_ = from.frntwiprinterspd_;
    }
    if (cached_has_bits & 0x00000040u) {
      menuorvoldwnpushswtsts_ = from.menuorvoldwnpushswtsts_;
    }
    if (cached_has_bits & 0x00000080u) {
      accspdincorresuswtsts_ = from.accspdincorresuswtsts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      acctimegapincswtsts_ = from.acctimegapincswtsts_;
    }
    if (cached_has_bits & 0x00000200u) {
      selnpushswtsts_ = from.selnpushswtsts_;
    }
    if (cached_has_bits & 0x00000400u) {
      modetogdecswtsts_ = from.modetogdecswtsts_;
    }
    if (cached_has_bits & 0x00000800u) {
      modetogincswtsts_ = from.modetogincswtsts_;
    }
    if (cached_has_bits & 0x00001000u) {
      menupushswtsts_ = from.menupushswtsts_;
    }
    if (cached_has_bits & 0x00002000u) {
      swcfailsts_ = from.swcfailsts_;
    }
    if (cached_has_bits & 0x00004000u) {
      accspddecswtsts_ = from.accspddecswtsts_;
    }
    if (cached_has_bits & 0x00008000u) {
      scmcrc_ = from.scmcrc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x003f0000u) {
    if (cached_has_bits & 0x00010000u) {
      menulepushswtsts_ = from.menulepushswtsts_;
    }
    if (cached_has_bits & 0x00020000u) {
      menuorvoluppushswtsts_ = from.menuorvoluppushswtsts_;
    }
    if (cached_has_bits & 0x00040000u) {
      scmmsgcntr_ = from.scmmsgcntr_;
    }
    if (cached_has_bits & 0x00080000u) {
      acctimegapdecswtsts_ = from.acctimegapdecswtsts_;
    }
    if (cached_has_bits & 0x00100000u) {
      menuripushswtsts_ = from.menuripushswtsts_;
    }
    if (cached_has_bits & 0x00200000u) {
      accsetswtsts_ = from.accsetswtsts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Scmsts7b::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Scmsts7b)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scmsts7b::CopyFrom(const Scmsts7b& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Scmsts7b)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scmsts7b::IsInitialized() const {
  return true;
}

void Scmsts7b::InternalSwap(Scmsts7b* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scmsts7b, accsetswtsts_)
      + sizeof(Scmsts7b::accsetswtsts_)
      - PROTOBUF_FIELD_OFFSET(Scmsts7b, scmfailsts_)>(
          reinterpret_cast<char*>(&scmfailsts_),
          reinterpret_cast<char*>(&other->scmfailsts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Scmsts7b::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Accreq7f::_Internal {
 public:
  using HasBits = decltype(std::declval<Accreq7f>()._has_bits_);
  static void set_has_accdrvoff(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_accdestop(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_accmaxjerk(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_accminjerk(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_accmode(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_acccomforlow(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_acccomforup(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_acchvydecel(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_accheavymode(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_acctara(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_accmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_acccrc(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
};

Accreq7f::Accreq7f(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Accreq7f)
}
Accreq7f::Accreq7f(const Accreq7f& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&accdrvoff_, &from.accdrvoff_,
    static_cast<size_t>(reinterpret_cast<char*>(&acccrc_) -
    reinterpret_cast<char*>(&accdrvoff_)) + sizeof(acccrc_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Accreq7f)
}

void Accreq7f::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&accdrvoff_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&acccrc_) -
      reinterpret_cast<char*>(&accdrvoff_)) + sizeof(acccrc_));
}

Accreq7f::~Accreq7f() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Accreq7f)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Accreq7f::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Accreq7f::ArenaDtor(void* object) {
  Accreq7f* _this = reinterpret_cast< Accreq7f* >(object);
  (void)_this;
}
void Accreq7f::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Accreq7f::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Accreq7f& Accreq7f::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Accreq7f_nio_2eproto.base);
  return *internal_default_instance();
}


void Accreq7f::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Accreq7f)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&accdrvoff_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&acccomforup_) -
        reinterpret_cast<char*>(&accdrvoff_)) + sizeof(acccomforup_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&acctara_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&acccrc_) -
        reinterpret_cast<char*>(&acctara_)) + sizeof(acccrc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Accreq7f::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Accreq7f.AccdrvoffType accdrvoff = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Accreq7f_AccdrvoffType_IsValid(val))) {
            _internal_set_accdrvoff(static_cast<::apollo::canbus::Accreq7f_AccdrvoffType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Accreq7f.AccdestopType accdestop = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Accreq7f_AccdestopType_IsValid(val))) {
            _internal_set_accdestop(static_cast<::apollo::canbus::Accreq7f_AccdestopType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double accmaxjerk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_accmaxjerk(&has_bits);
          accmaxjerk_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double accminjerk = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_accminjerk(&has_bits);
          accminjerk_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Accreq7f.AccmodeType accmode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Accreq7f_AccmodeType_IsValid(val))) {
            _internal_set_accmode(static_cast<::apollo::canbus::Accreq7f_AccmodeType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double acccomforlow = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          _Internal::set_has_acccomforlow(&has_bits);
          acccomforlow_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double acccomforup = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          _Internal::set_has_acccomforup(&has_bits);
          acccomforup_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Accreq7f.AcchvydecelType acchvydecel = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Accreq7f_AcchvydecelType_IsValid(val))) {
            _internal_set_acchvydecel(static_cast<::apollo::canbus::Accreq7f_AcchvydecelType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Accreq7f.AccheavymodeType accheavymode = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Accreq7f_AccheavymodeType_IsValid(val))) {
            _internal_set_accheavymode(static_cast<::apollo::canbus::Accreq7f_AccheavymodeType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double acctara = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          _Internal::set_has_acctara(&has_bits);
          acctara_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional int32 accmsgcntr = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_accmsgcntr(&has_bits);
          accmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 acccrc = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_acccrc(&has_bits);
          acccrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Accreq7f::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Accreq7f)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Accreq7f.AccdrvoffType accdrvoff = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_accdrvoff(), target);
  }

  // optional .apollo.canbus.Accreq7f.AccdestopType accdestop = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_accdestop(), target);
  }

  // optional double accmaxjerk = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_accmaxjerk(), target);
  }

  // optional double accminjerk = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_accminjerk(), target);
  }

  // optional .apollo.canbus.Accreq7f.AccmodeType accmode = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_accmode(), target);
  }

  // optional double acccomforlow = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_acccomforlow(), target);
  }

  // optional double acccomforup = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_acccomforup(), target);
  }

  // optional .apollo.canbus.Accreq7f.AcchvydecelType acchvydecel = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_acchvydecel(), target);
  }

  // optional .apollo.canbus.Accreq7f.AccheavymodeType accheavymode = 9;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_accheavymode(), target);
  }

  // optional double acctara = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_acctara(), target);
  }

  // optional int32 accmsgcntr = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_accmsgcntr(), target);
  }

  // optional int32 acccrc = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_acccrc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Accreq7f)
  return target;
}

size_t Accreq7f::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Accreq7f)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Accreq7f.AccdrvoffType accdrvoff = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_accdrvoff());
    }

    // optional .apollo.canbus.Accreq7f.AccdestopType accdestop = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_accdestop());
    }

    // optional double accmaxjerk = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double accminjerk = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional double acccomforlow = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Accreq7f.AccmodeType accmode = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_accmode());
    }

    // optional .apollo.canbus.Accreq7f.AcchvydecelType acchvydecel = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_acchvydecel());
    }

    // optional double acccomforup = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 8;
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional double acctara = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Accreq7f.AccheavymodeType accheavymode = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_accheavymode());
    }

    // optional int32 accmsgcntr = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_accmsgcntr());
    }

    // optional int32 acccrc = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_acccrc());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Accreq7f::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Accreq7f)
  GOOGLE_DCHECK_NE(&from, this);
  const Accreq7f* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Accreq7f>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Accreq7f)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Accreq7f)
    MergeFrom(*source);
  }
}

void Accreq7f::MergeFrom(const Accreq7f& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Accreq7f)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      accdrvoff_ = from.accdrvoff_;
    }
    if (cached_has_bits & 0x00000002u) {
      accdestop_ = from.accdestop_;
    }
    if (cached_has_bits & 0x00000004u) {
      accmaxjerk_ = from.accmaxjerk_;
    }
    if (cached_has_bits & 0x00000008u) {
      accminjerk_ = from.accminjerk_;
    }
    if (cached_has_bits & 0x00000010u) {
      acccomforlow_ = from.acccomforlow_;
    }
    if (cached_has_bits & 0x00000020u) {
      accmode_ = from.accmode_;
    }
    if (cached_has_bits & 0x00000040u) {
      acchvydecel_ = from.acchvydecel_;
    }
    if (cached_has_bits & 0x00000080u) {
      acccomforup_ = from.acccomforup_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      acctara_ = from.acctara_;
    }
    if (cached_has_bits & 0x00000200u) {
      accheavymode_ = from.accheavymode_;
    }
    if (cached_has_bits & 0x00000400u) {
      accmsgcntr_ = from.accmsgcntr_;
    }
    if (cached_has_bits & 0x00000800u) {
      acccrc_ = from.acccrc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Accreq7f::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Accreq7f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Accreq7f::CopyFrom(const Accreq7f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Accreq7f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Accreq7f::IsInitialized() const {
  return true;
}

void Accreq7f::InternalSwap(Accreq7f* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Accreq7f, acccrc_)
      + sizeof(Accreq7f::acccrc_)
      - PROTOBUF_FIELD_OFFSET(Accreq7f, accdrvoff_)>(
          reinterpret_cast<char*>(&accdrvoff_),
          reinterpret_cast<char*>(&other->accdrvoff_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Accreq7f::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Motorsts0286::_Internal {
 public:
  using HasBits = decltype(std::declval<Motorsts0286>()._has_bits_);
  static void set_has_motor02msgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_motor02crc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_frntmottqvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_frntmottq(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_frntmotspdvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_frntmotspd(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

Motorsts0286::Motorsts0286(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Motorsts0286)
}
Motorsts0286::Motorsts0286(const Motorsts0286& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&motor02msgcntr_, &from.motor02msgcntr_,
    static_cast<size_t>(reinterpret_cast<char*>(&frntmotspd_) -
    reinterpret_cast<char*>(&motor02msgcntr_)) + sizeof(frntmotspd_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Motorsts0286)
}

void Motorsts0286::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&motor02msgcntr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&frntmotspd_) -
      reinterpret_cast<char*>(&motor02msgcntr_)) + sizeof(frntmotspd_));
}

Motorsts0286::~Motorsts0286() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Motorsts0286)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Motorsts0286::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Motorsts0286::ArenaDtor(void* object) {
  Motorsts0286* _this = reinterpret_cast< Motorsts0286* >(object);
  (void)_this;
}
void Motorsts0286::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Motorsts0286::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Motorsts0286& Motorsts0286::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Motorsts0286_nio_2eproto.base);
  return *internal_default_instance();
}


void Motorsts0286::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Motorsts0286)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&motor02msgcntr_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&frntmotspd_) -
        reinterpret_cast<char*>(&motor02msgcntr_)) + sizeof(frntmotspd_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Motorsts0286::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 motor02msgcntr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_motor02msgcntr(&has_bits);
          motor02msgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 motor02crc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_motor02crc(&has_bits);
          motor02crc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Motorsts0286.FrntmottqvalidType frntmottqvalid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Motorsts0286_FrntmottqvalidType_IsValid(val))) {
            _internal_set_frntmottqvalid(static_cast<::apollo::canbus::Motorsts0286_FrntmottqvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double frntmottq = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_frntmottq(&has_bits);
          frntmottq_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Motorsts0286.FrntmotspdvalidType frntmotspdvalid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Motorsts0286_FrntmotspdvalidType_IsValid(val))) {
            _internal_set_frntmotspdvalid(static_cast<::apollo::canbus::Motorsts0286_FrntmotspdvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 frntmotspd = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_frntmotspd(&has_bits);
          frntmotspd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Motorsts0286::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Motorsts0286)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 motor02msgcntr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_motor02msgcntr(), target);
  }

  // optional int32 motor02crc = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_motor02crc(), target);
  }

  // optional .apollo.canbus.Motorsts0286.FrntmottqvalidType frntmottqvalid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_frntmottqvalid(), target);
  }

  // optional double frntmottq = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_frntmottq(), target);
  }

  // optional .apollo.canbus.Motorsts0286.FrntmotspdvalidType frntmotspdvalid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_frntmotspdvalid(), target);
  }

  // optional int32 frntmotspd = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_frntmotspd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Motorsts0286)
  return target;
}

size_t Motorsts0286::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Motorsts0286)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional int32 motor02msgcntr = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_motor02msgcntr());
    }

    // optional int32 motor02crc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_motor02crc());
    }

    // optional double frntmottq = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Motorsts0286.FrntmottqvalidType frntmottqvalid = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_frntmottqvalid());
    }

    // optional .apollo.canbus.Motorsts0286.FrntmotspdvalidType frntmotspdvalid = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_frntmotspdvalid());
    }

    // optional int32 frntmotspd = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_frntmotspd());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Motorsts0286::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Motorsts0286)
  GOOGLE_DCHECK_NE(&from, this);
  const Motorsts0286* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Motorsts0286>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Motorsts0286)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Motorsts0286)
    MergeFrom(*source);
  }
}

void Motorsts0286::MergeFrom(const Motorsts0286& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Motorsts0286)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      motor02msgcntr_ = from.motor02msgcntr_;
    }
    if (cached_has_bits & 0x00000002u) {
      motor02crc_ = from.motor02crc_;
    }
    if (cached_has_bits & 0x00000004u) {
      frntmottq_ = from.frntmottq_;
    }
    if (cached_has_bits & 0x00000008u) {
      frntmottqvalid_ = from.frntmottqvalid_;
    }
    if (cached_has_bits & 0x00000010u) {
      frntmotspdvalid_ = from.frntmotspdvalid_;
    }
    if (cached_has_bits & 0x00000020u) {
      frntmotspd_ = from.frntmotspd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Motorsts0286::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Motorsts0286)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Motorsts0286::CopyFrom(const Motorsts0286& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Motorsts0286)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Motorsts0286::IsInitialized() const {
  return true;
}

void Motorsts0286::InternalSwap(Motorsts0286* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Motorsts0286, frntmotspd_)
      + sizeof(Motorsts0286::frntmotspd_)
      - PROTOBUF_FIELD_OFFSET(Motorsts0286, motor02msgcntr_)>(
          reinterpret_cast<char*>(&motor02msgcntr_),
          reinterpret_cast<char*>(&other->motor02msgcntr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Motorsts0286::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Motorsts018e::_Internal {
 public:
  using HasBits = decltype(std::declval<Motorsts018e>()._has_bits_);
  static void set_has_motor01msgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_motor01crc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rearmottqvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_rearmottq(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_rearmotspdvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_rearmotspd(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

Motorsts018e::Motorsts018e(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Motorsts018e)
}
Motorsts018e::Motorsts018e(const Motorsts018e& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&motor01msgcntr_, &from.motor01msgcntr_,
    static_cast<size_t>(reinterpret_cast<char*>(&rearmotspd_) -
    reinterpret_cast<char*>(&motor01msgcntr_)) + sizeof(rearmotspd_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Motorsts018e)
}

void Motorsts018e::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&motor01msgcntr_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&rearmotspd_) -
      reinterpret_cast<char*>(&motor01msgcntr_)) + sizeof(rearmotspd_));
}

Motorsts018e::~Motorsts018e() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Motorsts018e)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Motorsts018e::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Motorsts018e::ArenaDtor(void* object) {
  Motorsts018e* _this = reinterpret_cast< Motorsts018e* >(object);
  (void)_this;
}
void Motorsts018e::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Motorsts018e::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Motorsts018e& Motorsts018e::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Motorsts018e_nio_2eproto.base);
  return *internal_default_instance();
}


void Motorsts018e::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Motorsts018e)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&motor01msgcntr_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rearmotspd_) -
        reinterpret_cast<char*>(&motor01msgcntr_)) + sizeof(rearmotspd_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Motorsts018e::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 motor01msgcntr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_motor01msgcntr(&has_bits);
          motor01msgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 motor01crc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_motor01crc(&has_bits);
          motor01crc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Motorsts018e.RearmottqvalidType rearmottqvalid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Motorsts018e_RearmottqvalidType_IsValid(val))) {
            _internal_set_rearmottqvalid(static_cast<::apollo::canbus::Motorsts018e_RearmottqvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double rearmottq = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_rearmottq(&has_bits);
          rearmottq_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Motorsts018e.RearmotspdvalidType rearmotspdvalid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Motorsts018e_RearmotspdvalidType_IsValid(val))) {
            _internal_set_rearmotspdvalid(static_cast<::apollo::canbus::Motorsts018e_RearmotspdvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 rearmotspd = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_rearmotspd(&has_bits);
          rearmotspd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Motorsts018e::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Motorsts018e)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 motor01msgcntr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_motor01msgcntr(), target);
  }

  // optional int32 motor01crc = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_motor01crc(), target);
  }

  // optional .apollo.canbus.Motorsts018e.RearmottqvalidType rearmottqvalid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_rearmottqvalid(), target);
  }

  // optional double rearmottq = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_rearmottq(), target);
  }

  // optional .apollo.canbus.Motorsts018e.RearmotspdvalidType rearmotspdvalid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_rearmotspdvalid(), target);
  }

  // optional int32 rearmotspd = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_rearmotspd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Motorsts018e)
  return target;
}

size_t Motorsts018e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Motorsts018e)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional int32 motor01msgcntr = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_motor01msgcntr());
    }

    // optional int32 motor01crc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_motor01crc());
    }

    // optional double rearmottq = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Motorsts018e.RearmottqvalidType rearmottqvalid = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rearmottqvalid());
    }

    // optional .apollo.canbus.Motorsts018e.RearmotspdvalidType rearmotspdvalid = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rearmotspdvalid());
    }

    // optional int32 rearmotspd = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_rearmotspd());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Motorsts018e::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Motorsts018e)
  GOOGLE_DCHECK_NE(&from, this);
  const Motorsts018e* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Motorsts018e>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Motorsts018e)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Motorsts018e)
    MergeFrom(*source);
  }
}

void Motorsts018e::MergeFrom(const Motorsts018e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Motorsts018e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      motor01msgcntr_ = from.motor01msgcntr_;
    }
    if (cached_has_bits & 0x00000002u) {
      motor01crc_ = from.motor01crc_;
    }
    if (cached_has_bits & 0x00000004u) {
      rearmottq_ = from.rearmottq_;
    }
    if (cached_has_bits & 0x00000008u) {
      rearmottqvalid_ = from.rearmottqvalid_;
    }
    if (cached_has_bits & 0x00000010u) {
      rearmotspdvalid_ = from.rearmotspdvalid_;
    }
    if (cached_has_bits & 0x00000020u) {
      rearmotspd_ = from.rearmotspd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Motorsts018e::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Motorsts018e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Motorsts018e::CopyFrom(const Motorsts018e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Motorsts018e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Motorsts018e::IsInitialized() const {
  return true;
}

void Motorsts018e::InternalSwap(Motorsts018e* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Motorsts018e, rearmotspd_)
      + sizeof(Motorsts018e::rearmotspd_)
      - PROTOBUF_FIELD_OFFSET(Motorsts018e, motor01msgcntr_)>(
          reinterpret_cast<char*>(&motor01msgcntr_),
          reinterpret_cast<char*>(&other->motor01msgcntr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Motorsts018e::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Epsreqc6::_Internal {
 public:
  using HasBits = decltype(std::declval<Epsreqc6>()._has_bits_);
  static void set_has_epspaireq(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_epsdaireq(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_epstoireq(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_epsreqtyp(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sysvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_pilotsym(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_epscrc(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_epsmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_adcaccsym(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

Epsreqc6::Epsreqc6(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Epsreqc6)
}
Epsreqc6::Epsreqc6(const Epsreqc6& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&epspaireq_, &from.epspaireq_,
    static_cast<size_t>(reinterpret_cast<char*>(&adcaccsym_) -
    reinterpret_cast<char*>(&epspaireq_)) + sizeof(adcaccsym_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Epsreqc6)
}

void Epsreqc6::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&epspaireq_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&adcaccsym_) -
      reinterpret_cast<char*>(&epspaireq_)) + sizeof(adcaccsym_));
}

Epsreqc6::~Epsreqc6() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Epsreqc6)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Epsreqc6::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Epsreqc6::ArenaDtor(void* object) {
  Epsreqc6* _this = reinterpret_cast< Epsreqc6* >(object);
  (void)_this;
}
void Epsreqc6::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Epsreqc6::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Epsreqc6& Epsreqc6::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Epsreqc6_nio_2eproto.base);
  return *internal_default_instance();
}


void Epsreqc6::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Epsreqc6)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&epspaireq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&epsmsgcntr_) -
        reinterpret_cast<char*>(&epspaireq_)) + sizeof(epsmsgcntr_));
  }
  adcaccsym_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Epsreqc6::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double epspaireq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_epspaireq(&has_bits);
          epspaireq_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double epsdaireq = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_epsdaireq(&has_bits);
          epsdaireq_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double epstoireq = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_epstoireq(&has_bits);
          epstoireq_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsreqc6.EpsreqtypType epsreqtyp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsreqc6_EpsreqtypType_IsValid(val))) {
            _internal_set_epsreqtyp(static_cast<::apollo::canbus::Epsreqc6_EpsreqtypType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsreqc6.SysvalidType sysvalid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsreqc6_SysvalidType_IsValid(val))) {
            _internal_set_sysvalid(static_cast<::apollo::canbus::Epsreqc6_SysvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsreqc6.PilotsymType pilotsym = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsreqc6_PilotsymType_IsValid(val))) {
            _internal_set_pilotsym(static_cast<::apollo::canbus::Epsreqc6_PilotsymType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 epscrc = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_epscrc(&has_bits);
          epscrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 epsmsgcntr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_epsmsgcntr(&has_bits);
          epsmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsreqc6.AdcaccsymType adcaccsym = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsreqc6_AdcaccsymType_IsValid(val))) {
            _internal_set_adcaccsym(static_cast<::apollo::canbus::Epsreqc6_AdcaccsymType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Epsreqc6::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Epsreqc6)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double epspaireq = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_epspaireq(), target);
  }

  // optional double epsdaireq = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_epsdaireq(), target);
  }

  // optional double epstoireq = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_epstoireq(), target);
  }

  // optional .apollo.canbus.Epsreqc6.EpsreqtypType epsreqtyp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_epsreqtyp(), target);
  }

  // optional .apollo.canbus.Epsreqc6.SysvalidType sysvalid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_sysvalid(), target);
  }

  // optional .apollo.canbus.Epsreqc6.PilotsymType pilotsym = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_pilotsym(), target);
  }

  // optional int32 epscrc = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_epscrc(), target);
  }

  // optional int32 epsmsgcntr = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_epsmsgcntr(), target);
  }

  // optional .apollo.canbus.Epsreqc6.AdcaccsymType adcaccsym = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_adcaccsym(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Epsreqc6)
  return target;
}

size_t Epsreqc6::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Epsreqc6)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional double epspaireq = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double epsdaireq = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double epstoireq = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Epsreqc6.EpsreqtypType epsreqtyp = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epsreqtyp());
    }

    // optional .apollo.canbus.Epsreqc6.SysvalidType sysvalid = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_sysvalid());
    }

    // optional .apollo.canbus.Epsreqc6.PilotsymType pilotsym = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pilotsym());
    }

    // optional int32 epscrc = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_epscrc());
    }

    // optional int32 epsmsgcntr = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_epsmsgcntr());
    }

  }
  // optional .apollo.canbus.Epsreqc6.AdcaccsymType adcaccsym = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_adcaccsym());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Epsreqc6::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Epsreqc6)
  GOOGLE_DCHECK_NE(&from, this);
  const Epsreqc6* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Epsreqc6>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Epsreqc6)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Epsreqc6)
    MergeFrom(*source);
  }
}

void Epsreqc6::MergeFrom(const Epsreqc6& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Epsreqc6)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      epspaireq_ = from.epspaireq_;
    }
    if (cached_has_bits & 0x00000002u) {
      epsdaireq_ = from.epsdaireq_;
    }
    if (cached_has_bits & 0x00000004u) {
      epstoireq_ = from.epstoireq_;
    }
    if (cached_has_bits & 0x00000008u) {
      epsreqtyp_ = from.epsreqtyp_;
    }
    if (cached_has_bits & 0x00000010u) {
      sysvalid_ = from.sysvalid_;
    }
    if (cached_has_bits & 0x00000020u) {
      pilotsym_ = from.pilotsym_;
    }
    if (cached_has_bits & 0x00000040u) {
      epscrc_ = from.epscrc_;
    }
    if (cached_has_bits & 0x00000080u) {
      epsmsgcntr_ = from.epsmsgcntr_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_adcaccsym(from._internal_adcaccsym());
  }
}

void Epsreqc6::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Epsreqc6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Epsreqc6::CopyFrom(const Epsreqc6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Epsreqc6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Epsreqc6::IsInitialized() const {
  return true;
}

void Epsreqc6::InternalSwap(Epsreqc6* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Epsreqc6, adcaccsym_)
      + sizeof(Epsreqc6::adcaccsym_)
      - PROTOBUF_FIELD_OFFSET(Epsreqc6, epspaireq_)>(
          reinterpret_cast<char*>(&epspaireq_),
          reinterpret_cast<char*>(&other->epspaireq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Epsreqc6::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Epsstatus01d5::_Internal {
 public:
  using HasBits = decltype(std::declval<Epsstatus01d5>()._has_bits_);
  static void set_has_epswarnlamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_absagreqavl(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_torsbartq(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_epssts(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_epsmod(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_steeragspddir(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_steeragspd(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_steerangledir(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_steerangleandspdvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_steerangle(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_epsdmsgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_epsdcrc(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
};

Epsstatus01d5::Epsstatus01d5(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Epsstatus01d5)
}
Epsstatus01d5::Epsstatus01d5(const Epsstatus01d5& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&epswarnlamp_, &from.epswarnlamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&epsdcrc_) -
    reinterpret_cast<char*>(&epswarnlamp_)) + sizeof(epsdcrc_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Epsstatus01d5)
}

void Epsstatus01d5::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&epswarnlamp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&epsdcrc_) -
      reinterpret_cast<char*>(&epswarnlamp_)) + sizeof(epsdcrc_));
}

Epsstatus01d5::~Epsstatus01d5() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Epsstatus01d5)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Epsstatus01d5::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Epsstatus01d5::ArenaDtor(void* object) {
  Epsstatus01d5* _this = reinterpret_cast< Epsstatus01d5* >(object);
  (void)_this;
}
void Epsstatus01d5::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Epsstatus01d5::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Epsstatus01d5& Epsstatus01d5::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Epsstatus01d5_nio_2eproto.base);
  return *internal_default_instance();
}


void Epsstatus01d5::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Epsstatus01d5)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&epswarnlamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steerangledir_) -
        reinterpret_cast<char*>(&epswarnlamp_)) + sizeof(steerangledir_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&steerangle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&epsdcrc_) -
        reinterpret_cast<char*>(&steerangle_)) + sizeof(epsdcrc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Epsstatus01d5::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Epsstatus01d5.EpswarnlampType epswarnlamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus01d5_EpswarnlampType_IsValid(val))) {
            _internal_set_epswarnlamp(static_cast<::apollo::canbus::Epsstatus01d5_EpswarnlampType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus01d5.AbsagreqavlType absagreqavl = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus01d5_AbsagreqavlType_IsValid(val))) {
            _internal_set_absagreqavl(static_cast<::apollo::canbus::Epsstatus01d5_AbsagreqavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double torsbartq = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_torsbartq(&has_bits);
          torsbartq_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus01d5.EpsstsType epssts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus01d5_EpsstsType_IsValid(val))) {
            _internal_set_epssts(static_cast<::apollo::canbus::Epsstatus01d5_EpsstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus01d5.EpsmodType epsmod = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus01d5_EpsmodType_IsValid(val))) {
            _internal_set_epsmod(static_cast<::apollo::canbus::Epsstatus01d5_EpsmodType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus01d5.SteeragspddirType steeragspddir = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus01d5_SteeragspddirType_IsValid(val))) {
            _internal_set_steeragspddir(static_cast<::apollo::canbus::Epsstatus01d5_SteeragspddirType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double steeragspd = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          _Internal::set_has_steeragspd(&has_bits);
          steeragspd_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus01d5.SteerangledirType steerangledir = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus01d5_SteerangledirType_IsValid(val))) {
            _internal_set_steerangledir(static_cast<::apollo::canbus::Epsstatus01d5_SteerangledirType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus01d5.SteerangleandspdvalidType steerangleandspdvalid = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus01d5_SteerangleandspdvalidType_IsValid(val))) {
            _internal_set_steerangleandspdvalid(static_cast<::apollo::canbus::Epsstatus01d5_SteerangleandspdvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double steerangle = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          _Internal::set_has_steerangle(&has_bits);
          steerangle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional int32 epsdmsgcntr = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_epsdmsgcntr(&has_bits);
          epsdmsgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 epsdcrc = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_epsdcrc(&has_bits);
          epsdcrc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Epsstatus01d5::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Epsstatus01d5)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Epsstatus01d5.EpswarnlampType epswarnlamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_epswarnlamp(), target);
  }

  // optional .apollo.canbus.Epsstatus01d5.AbsagreqavlType absagreqavl = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_absagreqavl(), target);
  }

  // optional double torsbartq = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_torsbartq(), target);
  }

  // optional .apollo.canbus.Epsstatus01d5.EpsstsType epssts = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_epssts(), target);
  }

  // optional .apollo.canbus.Epsstatus01d5.EpsmodType epsmod = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_epsmod(), target);
  }

  // optional .apollo.canbus.Epsstatus01d5.SteeragspddirType steeragspddir = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_steeragspddir(), target);
  }

  // optional double steeragspd = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_steeragspd(), target);
  }

  // optional .apollo.canbus.Epsstatus01d5.SteerangledirType steerangledir = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_steerangledir(), target);
  }

  // optional .apollo.canbus.Epsstatus01d5.SteerangleandspdvalidType steerangleandspdvalid = 9;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_steerangleandspdvalid(), target);
  }

  // optional double steerangle = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_steerangle(), target);
  }

  // optional int32 epsdmsgcntr = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_epsdmsgcntr(), target);
  }

  // optional int32 epsdcrc = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_epsdcrc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Epsstatus01d5)
  return target;
}

size_t Epsstatus01d5::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Epsstatus01d5)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Epsstatus01d5.EpswarnlampType epswarnlamp = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epswarnlamp());
    }

    // optional .apollo.canbus.Epsstatus01d5.AbsagreqavlType absagreqavl = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_absagreqavl());
    }

    // optional double torsbartq = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Epsstatus01d5.EpsstsType epssts = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epssts());
    }

    // optional .apollo.canbus.Epsstatus01d5.EpsmodType epsmod = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epsmod());
    }

    // optional double steeragspd = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Epsstatus01d5.SteeragspddirType steeragspddir = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_steeragspddir());
    }

    // optional .apollo.canbus.Epsstatus01d5.SteerangledirType steerangledir = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_steerangledir());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional double steerangle = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Epsstatus01d5.SteerangleandspdvalidType steerangleandspdvalid = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_steerangleandspdvalid());
    }

    // optional int32 epsdmsgcntr = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_epsdmsgcntr());
    }

    // optional int32 epsdcrc = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_epsdcrc());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Epsstatus01d5::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Epsstatus01d5)
  GOOGLE_DCHECK_NE(&from, this);
  const Epsstatus01d5* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Epsstatus01d5>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Epsstatus01d5)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Epsstatus01d5)
    MergeFrom(*source);
  }
}

void Epsstatus01d5::MergeFrom(const Epsstatus01d5& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Epsstatus01d5)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      epswarnlamp_ = from.epswarnlamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      absagreqavl_ = from.absagreqavl_;
    }
    if (cached_has_bits & 0x00000004u) {
      torsbartq_ = from.torsbartq_;
    }
    if (cached_has_bits & 0x00000008u) {
      epssts_ = from.epssts_;
    }
    if (cached_has_bits & 0x00000010u) {
      epsmod_ = from.epsmod_;
    }
    if (cached_has_bits & 0x00000020u) {
      steeragspd_ = from.steeragspd_;
    }
    if (cached_has_bits & 0x00000040u) {
      steeragspddir_ = from.steeragspddir_;
    }
    if (cached_has_bits & 0x00000080u) {
      steerangledir_ = from.steerangledir_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      steerangle_ = from.steerangle_;
    }
    if (cached_has_bits & 0x00000200u) {
      steerangleandspdvalid_ = from.steerangleandspdvalid_;
    }
    if (cached_has_bits & 0x00000400u) {
      epsdmsgcntr_ = from.epsdmsgcntr_;
    }
    if (cached_has_bits & 0x00000800u) {
      epsdcrc_ = from.epsdcrc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Epsstatus01d5::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Epsstatus01d5)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Epsstatus01d5::CopyFrom(const Epsstatus01d5& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Epsstatus01d5)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Epsstatus01d5::IsInitialized() const {
  return true;
}

void Epsstatus01d5::InternalSwap(Epsstatus01d5* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Epsstatus01d5, epsdcrc_)
      + sizeof(Epsstatus01d5::epsdcrc_)
      - PROTOBUF_FIELD_OFFSET(Epsstatus01d5, epswarnlamp_)>(
          reinterpret_cast<char*>(&epswarnlamp_),
          reinterpret_cast<char*>(&other->epswarnlamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Epsstatus01d5::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Epsstatus02d6::_Internal {
 public:
  using HasBits = decltype(std::declval<Epsstatus02d6>()._has_bits_);
  static void set_has_epstqreqavl(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_epspinionangreqavl(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_epsestrackforce(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_epshandsoffdetnconfidence(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_eps02msgcntr(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_epspinionagvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_epsdrvoverridedetn(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_eps02crc(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_epsmotortq(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_epsmotortqvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_epspinionag(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_epsestrackforcevalid(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
};

Epsstatus02d6::Epsstatus02d6(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Epsstatus02d6)
}
Epsstatus02d6::Epsstatus02d6(const Epsstatus02d6& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&epstqreqavl_, &from.epstqreqavl_,
    static_cast<size_t>(reinterpret_cast<char*>(&epsestrackforcevalid_) -
    reinterpret_cast<char*>(&epstqreqavl_)) + sizeof(epsestrackforcevalid_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Epsstatus02d6)
}

void Epsstatus02d6::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&epstqreqavl_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&epsestrackforcevalid_) -
      reinterpret_cast<char*>(&epstqreqavl_)) + sizeof(epsestrackforcevalid_));
}

Epsstatus02d6::~Epsstatus02d6() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Epsstatus02d6)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Epsstatus02d6::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Epsstatus02d6::ArenaDtor(void* object) {
  Epsstatus02d6* _this = reinterpret_cast< Epsstatus02d6* >(object);
  (void)_this;
}
void Epsstatus02d6::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Epsstatus02d6::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Epsstatus02d6& Epsstatus02d6::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Epsstatus02d6_nio_2eproto.base);
  return *internal_default_instance();
}


void Epsstatus02d6::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Epsstatus02d6)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&epstqreqavl_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&epsmotortq_) -
        reinterpret_cast<char*>(&epstqreqavl_)) + sizeof(epsmotortq_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&eps02crc_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&epsestrackforcevalid_) -
        reinterpret_cast<char*>(&eps02crc_)) + sizeof(epsestrackforcevalid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Epsstatus02d6::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Epsstatus02d6.EpstqreqavlType epstqreqavl = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus02d6_EpstqreqavlType_IsValid(val))) {
            _internal_set_epstqreqavl(static_cast<::apollo::canbus::Epsstatus02d6_EpstqreqavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus02d6.EpspinionangreqavlType epspinionangreqavl = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus02d6_EpspinionangreqavlType_IsValid(val))) {
            _internal_set_epspinionangreqavl(static_cast<::apollo::canbus::Epsstatus02d6_EpspinionangreqavlType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double epsestrackforce = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_epsestrackforce(&has_bits);
          epsestrackforce_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus02d6.EpshandsoffdetnconfidenceType epshandsoffdetnconfidence = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus02d6_EpshandsoffdetnconfidenceType_IsValid(val))) {
            _internal_set_epshandsoffdetnconfidence(static_cast<::apollo::canbus::Epsstatus02d6_EpshandsoffdetnconfidenceType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 eps02msgcntr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_eps02msgcntr(&has_bits);
          eps02msgcntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus02d6.EpspinionagvalidType epspinionagvalid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus02d6_EpspinionagvalidType_IsValid(val))) {
            _internal_set_epspinionagvalid(static_cast<::apollo::canbus::Epsstatus02d6_EpspinionagvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus02d6.EpsdrvoverridedetnType epsdrvoverridedetn = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus02d6_EpsdrvoverridedetnType_IsValid(val))) {
            _internal_set_epsdrvoverridedetn(static_cast<::apollo::canbus::Epsstatus02d6_EpsdrvoverridedetnType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int32 eps02crc = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_eps02crc(&has_bits);
          eps02crc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double epsmotortq = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          _Internal::set_has_epsmotortq(&has_bits);
          epsmotortq_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus02d6.EpsmotortqvalidType epsmotortqvalid = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus02d6_EpsmotortqvalidType_IsValid(val))) {
            _internal_set_epsmotortqvalid(static_cast<::apollo::canbus::Epsstatus02d6_EpsmotortqvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double epspinionag = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 89)) {
          _Internal::set_has_epspinionag(&has_bits);
          epspinionag_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus02d6.EpsestrackforcevalidType epsestrackforcevalid = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Epsstatus02d6_EpsestrackforcevalidType_IsValid(val))) {
            _internal_set_epsestrackforcevalid(static_cast<::apollo::canbus::Epsstatus02d6_EpsestrackforcevalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Epsstatus02d6::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Epsstatus02d6)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Epsstatus02d6.EpstqreqavlType epstqreqavl = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_epstqreqavl(), target);
  }

  // optional .apollo.canbus.Epsstatus02d6.EpspinionangreqavlType epspinionangreqavl = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_epspinionangreqavl(), target);
  }

  // optional double epsestrackforce = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_epsestrackforce(), target);
  }

  // optional .apollo.canbus.Epsstatus02d6.EpshandsoffdetnconfidenceType epshandsoffdetnconfidence = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_epshandsoffdetnconfidence(), target);
  }

  // optional int32 eps02msgcntr = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_eps02msgcntr(), target);
  }

  // optional .apollo.canbus.Epsstatus02d6.EpspinionagvalidType epspinionagvalid = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_epspinionagvalid(), target);
  }

  // optional .apollo.canbus.Epsstatus02d6.EpsdrvoverridedetnType epsdrvoverridedetn = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_epsdrvoverridedetn(), target);
  }

  // optional int32 eps02crc = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_eps02crc(), target);
  }

  // optional double epsmotortq = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_epsmotortq(), target);
  }

  // optional .apollo.canbus.Epsstatus02d6.EpsmotortqvalidType epsmotortqvalid = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_epsmotortqvalid(), target);
  }

  // optional double epspinionag = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_epspinionag(), target);
  }

  // optional .apollo.canbus.Epsstatus02d6.EpsestrackforcevalidType epsestrackforcevalid = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_epsestrackforcevalid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Epsstatus02d6)
  return target;
}

size_t Epsstatus02d6::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Epsstatus02d6)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Epsstatus02d6.EpstqreqavlType epstqreqavl = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epstqreqavl());
    }

    // optional .apollo.canbus.Epsstatus02d6.EpspinionangreqavlType epspinionangreqavl = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epspinionangreqavl());
    }

    // optional double epsestrackforce = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Epsstatus02d6.EpshandsoffdetnconfidenceType epshandsoffdetnconfidence = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epshandsoffdetnconfidence());
    }

    // optional int32 eps02msgcntr = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_eps02msgcntr());
    }

    // optional .apollo.canbus.Epsstatus02d6.EpspinionagvalidType epspinionagvalid = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epspinionagvalid());
    }

    // optional .apollo.canbus.Epsstatus02d6.EpsdrvoverridedetnType epsdrvoverridedetn = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epsdrvoverridedetn());
    }

    // optional double epsmotortq = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 8;
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional int32 eps02crc = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_eps02crc());
    }

    // optional .apollo.canbus.Epsstatus02d6.EpsmotortqvalidType epsmotortqvalid = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epsmotortqvalid());
    }

    // optional double epspinionag = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Epsstatus02d6.EpsestrackforcevalidType epsestrackforcevalid = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epsestrackforcevalid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Epsstatus02d6::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Epsstatus02d6)
  GOOGLE_DCHECK_NE(&from, this);
  const Epsstatus02d6* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Epsstatus02d6>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Epsstatus02d6)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Epsstatus02d6)
    MergeFrom(*source);
  }
}

void Epsstatus02d6::MergeFrom(const Epsstatus02d6& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Epsstatus02d6)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      epstqreqavl_ = from.epstqreqavl_;
    }
    if (cached_has_bits & 0x00000002u) {
      epspinionangreqavl_ = from.epspinionangreqavl_;
    }
    if (cached_has_bits & 0x00000004u) {
      epsestrackforce_ = from.epsestrackforce_;
    }
    if (cached_has_bits & 0x00000008u) {
      epshandsoffdetnconfidence_ = from.epshandsoffdetnconfidence_;
    }
    if (cached_has_bits & 0x00000010u) {
      eps02msgcntr_ = from.eps02msgcntr_;
    }
    if (cached_has_bits & 0x00000020u) {
      epspinionagvalid_ = from.epspinionagvalid_;
    }
    if (cached_has_bits & 0x00000040u) {
      epsdrvoverridedetn_ = from.epsdrvoverridedetn_;
    }
    if (cached_has_bits & 0x00000080u) {
      epsmotortq_ = from.epsmotortq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      eps02crc_ = from.eps02crc_;
    }
    if (cached_has_bits & 0x00000200u) {
      epsmotortqvalid_ = from.epsmotortqvalid_;
    }
    if (cached_has_bits & 0x00000400u) {
      epspinionag_ = from.epspinionag_;
    }
    if (cached_has_bits & 0x00000800u) {
      epsestrackforcevalid_ = from.epsestrackforcevalid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Epsstatus02d6::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Epsstatus02d6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Epsstatus02d6::CopyFrom(const Epsstatus02d6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Epsstatus02d6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Epsstatus02d6::IsInitialized() const {
  return true;
}

void Epsstatus02d6::InternalSwap(Epsstatus02d6* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Epsstatus02d6, epsestrackforcevalid_)
      + sizeof(Epsstatus02d6::epsestrackforcevalid_)
      - PROTOBUF_FIELD_OFFSET(Epsstatus02d6, epstqreqavl_)>(
          reinterpret_cast<char*>(&epstqreqavl_),
          reinterpret_cast<char*>(&other->epstqreqavl_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Epsstatus02d6::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Nio::_Internal {
 public:
  using HasBits = decltype(std::declval<Nio>()._has_bits_);
  static const ::apollo::canbus::Avpreq15e& avpreq15e(const Nio* msg);
  static void set_has_avpreq15e(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::canbus::Vcusts01218& vcusts01218(const Nio* msg);
  static void set_has_vcusts01218(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::canbus::Vcusts0221c& vcusts0221c(const Nio* msg);
  static void set_has_vcusts0221c(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::apollo::canbus::Brkdrvstatus24c& brkdrvstatus24c(const Nio* msg);
  static void set_has_brkdrvstatus24c(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::canbus::Bodystatus24d& bodystatus24d(const Nio* msg);
  static void set_has_bodystatus24d(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::apollo::canbus::Driverstatus24e& driverstatus24e(const Nio* msg);
  static void set_has_driverstatus24e(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::apollo::canbus::Vehiclelights2c7& vehiclelights2c7(const Nio* msg);
  static void set_has_vehiclelights2c7(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::apollo::canbus::Lightreq336& lightreq336(const Nio* msg);
  static void set_has_lightreq336(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::apollo::canbus::Acmbody4a& acmbody4a(const Nio* msg);
  static void set_has_acmbody4a(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::apollo::canbus::Whlspdfront51& whlspdfront51(const Nio* msg);
  static void set_has_whlspdfront51(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::apollo::canbus::Whlspdrear52& whlspdrear52(const Nio* msg);
  static void set_has_whlspdrear52(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::apollo::canbus::Bcusts5e& bcusts5e(const Nio* msg);
  static void set_has_bcusts5e(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::apollo::canbus::Pulsecnt65& pulsecnt65(const Nio* msg);
  static void set_has_pulsecnt65(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::apollo::canbus::Aebreq79& aebreq79(const Nio* msg);
  static void set_has_aebreq79(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::apollo::canbus::Scmsts7b& scmsts7b(const Nio* msg);
  static void set_has_scmsts7b(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::apollo::canbus::Accreq7f& accreq7f(const Nio* msg);
  static void set_has_accreq7f(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::apollo::canbus::Motorsts0286& motorsts0286(const Nio* msg);
  static void set_has_motorsts0286(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::apollo::canbus::Motorsts018e& motorsts018e(const Nio* msg);
  static void set_has_motorsts018e(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::apollo::canbus::Epsreqc6& epsreqc6(const Nio* msg);
  static void set_has_epsreqc6(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static const ::apollo::canbus::Epsstatus01d5& epsstatus01d5(const Nio* msg);
  static void set_has_epsstatus01d5(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static const ::apollo::canbus::Epsstatus02d6& epsstatus02d6(const Nio* msg);
  static void set_has_epsstatus02d6(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
};

const ::apollo::canbus::Avpreq15e&
Nio::_Internal::avpreq15e(const Nio* msg) {
  return *msg->avpreq15e_;
}
const ::apollo::canbus::Vcusts01218&
Nio::_Internal::vcusts01218(const Nio* msg) {
  return *msg->vcusts01218_;
}
const ::apollo::canbus::Vcusts0221c&
Nio::_Internal::vcusts0221c(const Nio* msg) {
  return *msg->vcusts0221c_;
}
const ::apollo::canbus::Brkdrvstatus24c&
Nio::_Internal::brkdrvstatus24c(const Nio* msg) {
  return *msg->brkdrvstatus24c_;
}
const ::apollo::canbus::Bodystatus24d&
Nio::_Internal::bodystatus24d(const Nio* msg) {
  return *msg->bodystatus24d_;
}
const ::apollo::canbus::Driverstatus24e&
Nio::_Internal::driverstatus24e(const Nio* msg) {
  return *msg->driverstatus24e_;
}
const ::apollo::canbus::Vehiclelights2c7&
Nio::_Internal::vehiclelights2c7(const Nio* msg) {
  return *msg->vehiclelights2c7_;
}
const ::apollo::canbus::Lightreq336&
Nio::_Internal::lightreq336(const Nio* msg) {
  return *msg->lightreq336_;
}
const ::apollo::canbus::Acmbody4a&
Nio::_Internal::acmbody4a(const Nio* msg) {
  return *msg->acmbody4a_;
}
const ::apollo::canbus::Whlspdfront51&
Nio::_Internal::whlspdfront51(const Nio* msg) {
  return *msg->whlspdfront51_;
}
const ::apollo::canbus::Whlspdrear52&
Nio::_Internal::whlspdrear52(const Nio* msg) {
  return *msg->whlspdrear52_;
}
const ::apollo::canbus::Bcusts5e&
Nio::_Internal::bcusts5e(const Nio* msg) {
  return *msg->bcusts5e_;
}
const ::apollo::canbus::Pulsecnt65&
Nio::_Internal::pulsecnt65(const Nio* msg) {
  return *msg->pulsecnt65_;
}
const ::apollo::canbus::Aebreq79&
Nio::_Internal::aebreq79(const Nio* msg) {
  return *msg->aebreq79_;
}
const ::apollo::canbus::Scmsts7b&
Nio::_Internal::scmsts7b(const Nio* msg) {
  return *msg->scmsts7b_;
}
const ::apollo::canbus::Accreq7f&
Nio::_Internal::accreq7f(const Nio* msg) {
  return *msg->accreq7f_;
}
const ::apollo::canbus::Motorsts0286&
Nio::_Internal::motorsts0286(const Nio* msg) {
  return *msg->motorsts0286_;
}
const ::apollo::canbus::Motorsts018e&
Nio::_Internal::motorsts018e(const Nio* msg) {
  return *msg->motorsts018e_;
}
const ::apollo::canbus::Epsreqc6&
Nio::_Internal::epsreqc6(const Nio* msg) {
  return *msg->epsreqc6_;
}
const ::apollo::canbus::Epsstatus01d5&
Nio::_Internal::epsstatus01d5(const Nio* msg) {
  return *msg->epsstatus01d5_;
}
const ::apollo::canbus::Epsstatus02d6&
Nio::_Internal::epsstatus02d6(const Nio* msg) {
  return *msg->epsstatus02d6_;
}
Nio::Nio(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.canbus.Nio)
}
Nio::Nio(const Nio& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_avpreq15e()) {
    avpreq15e_ = new ::apollo::canbus::Avpreq15e(*from.avpreq15e_);
  } else {
    avpreq15e_ = nullptr;
  }
  if (from._internal_has_vcusts01218()) {
    vcusts01218_ = new ::apollo::canbus::Vcusts01218(*from.vcusts01218_);
  } else {
    vcusts01218_ = nullptr;
  }
  if (from._internal_has_vcusts0221c()) {
    vcusts0221c_ = new ::apollo::canbus::Vcusts0221c(*from.vcusts0221c_);
  } else {
    vcusts0221c_ = nullptr;
  }
  if (from._internal_has_brkdrvstatus24c()) {
    brkdrvstatus24c_ = new ::apollo::canbus::Brkdrvstatus24c(*from.brkdrvstatus24c_);
  } else {
    brkdrvstatus24c_ = nullptr;
  }
  if (from._internal_has_bodystatus24d()) {
    bodystatus24d_ = new ::apollo::canbus::Bodystatus24d(*from.bodystatus24d_);
  } else {
    bodystatus24d_ = nullptr;
  }
  if (from._internal_has_driverstatus24e()) {
    driverstatus24e_ = new ::apollo::canbus::Driverstatus24e(*from.driverstatus24e_);
  } else {
    driverstatus24e_ = nullptr;
  }
  if (from._internal_has_vehiclelights2c7()) {
    vehiclelights2c7_ = new ::apollo::canbus::Vehiclelights2c7(*from.vehiclelights2c7_);
  } else {
    vehiclelights2c7_ = nullptr;
  }
  if (from._internal_has_lightreq336()) {
    lightreq336_ = new ::apollo::canbus::Lightreq336(*from.lightreq336_);
  } else {
    lightreq336_ = nullptr;
  }
  if (from._internal_has_acmbody4a()) {
    acmbody4a_ = new ::apollo::canbus::Acmbody4a(*from.acmbody4a_);
  } else {
    acmbody4a_ = nullptr;
  }
  if (from._internal_has_whlspdfront51()) {
    whlspdfront51_ = new ::apollo::canbus::Whlspdfront51(*from.whlspdfront51_);
  } else {
    whlspdfront51_ = nullptr;
  }
  if (from._internal_has_whlspdrear52()) {
    whlspdrear52_ = new ::apollo::canbus::Whlspdrear52(*from.whlspdrear52_);
  } else {
    whlspdrear52_ = nullptr;
  }
  if (from._internal_has_bcusts5e()) {
    bcusts5e_ = new ::apollo::canbus::Bcusts5e(*from.bcusts5e_);
  } else {
    bcusts5e_ = nullptr;
  }
  if (from._internal_has_pulsecnt65()) {
    pulsecnt65_ = new ::apollo::canbus::Pulsecnt65(*from.pulsecnt65_);
  } else {
    pulsecnt65_ = nullptr;
  }
  if (from._internal_has_aebreq79()) {
    aebreq79_ = new ::apollo::canbus::Aebreq79(*from.aebreq79_);
  } else {
    aebreq79_ = nullptr;
  }
  if (from._internal_has_scmsts7b()) {
    scmsts7b_ = new ::apollo::canbus::Scmsts7b(*from.scmsts7b_);
  } else {
    scmsts7b_ = nullptr;
  }
  if (from._internal_has_accreq7f()) {
    accreq7f_ = new ::apollo::canbus::Accreq7f(*from.accreq7f_);
  } else {
    accreq7f_ = nullptr;
  }
  if (from._internal_has_motorsts0286()) {
    motorsts0286_ = new ::apollo::canbus::Motorsts0286(*from.motorsts0286_);
  } else {
    motorsts0286_ = nullptr;
  }
  if (from._internal_has_motorsts018e()) {
    motorsts018e_ = new ::apollo::canbus::Motorsts018e(*from.motorsts018e_);
  } else {
    motorsts018e_ = nullptr;
  }
  if (from._internal_has_epsreqc6()) {
    epsreqc6_ = new ::apollo::canbus::Epsreqc6(*from.epsreqc6_);
  } else {
    epsreqc6_ = nullptr;
  }
  if (from._internal_has_epsstatus01d5()) {
    epsstatus01d5_ = new ::apollo::canbus::Epsstatus01d5(*from.epsstatus01d5_);
  } else {
    epsstatus01d5_ = nullptr;
  }
  if (from._internal_has_epsstatus02d6()) {
    epsstatus02d6_ = new ::apollo::canbus::Epsstatus02d6(*from.epsstatus02d6_);
  } else {
    epsstatus02d6_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Nio)
}

void Nio::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Nio_nio_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&avpreq15e_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&epsstatus02d6_) -
      reinterpret_cast<char*>(&avpreq15e_)) + sizeof(epsstatus02d6_));
}

Nio::~Nio() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Nio)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Nio::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete avpreq15e_;
  if (this != internal_default_instance()) delete vcusts01218_;
  if (this != internal_default_instance()) delete vcusts0221c_;
  if (this != internal_default_instance()) delete brkdrvstatus24c_;
  if (this != internal_default_instance()) delete bodystatus24d_;
  if (this != internal_default_instance()) delete driverstatus24e_;
  if (this != internal_default_instance()) delete vehiclelights2c7_;
  if (this != internal_default_instance()) delete lightreq336_;
  if (this != internal_default_instance()) delete acmbody4a_;
  if (this != internal_default_instance()) delete whlspdfront51_;
  if (this != internal_default_instance()) delete whlspdrear52_;
  if (this != internal_default_instance()) delete bcusts5e_;
  if (this != internal_default_instance()) delete pulsecnt65_;
  if (this != internal_default_instance()) delete aebreq79_;
  if (this != internal_default_instance()) delete scmsts7b_;
  if (this != internal_default_instance()) delete accreq7f_;
  if (this != internal_default_instance()) delete motorsts0286_;
  if (this != internal_default_instance()) delete motorsts018e_;
  if (this != internal_default_instance()) delete epsreqc6_;
  if (this != internal_default_instance()) delete epsstatus01d5_;
  if (this != internal_default_instance()) delete epsstatus02d6_;
}

void Nio::ArenaDtor(void* object) {
  Nio* _this = reinterpret_cast< Nio* >(object);
  (void)_this;
}
void Nio::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Nio::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Nio& Nio::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Nio_nio_2eproto.base);
  return *internal_default_instance();
}


void Nio::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Nio)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(avpreq15e_ != nullptr);
      avpreq15e_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(vcusts01218_ != nullptr);
      vcusts01218_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(vcusts0221c_ != nullptr);
      vcusts0221c_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(brkdrvstatus24c_ != nullptr);
      brkdrvstatus24c_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(bodystatus24d_ != nullptr);
      bodystatus24d_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(driverstatus24e_ != nullptr);
      driverstatus24e_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(vehiclelights2c7_ != nullptr);
      vehiclelights2c7_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(lightreq336_ != nullptr);
      lightreq336_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(acmbody4a_ != nullptr);
      acmbody4a_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(whlspdfront51_ != nullptr);
      whlspdfront51_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(whlspdrear52_ != nullptr);
      whlspdrear52_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(bcusts5e_ != nullptr);
      bcusts5e_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(pulsecnt65_ != nullptr);
      pulsecnt65_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(aebreq79_ != nullptr);
      aebreq79_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(scmsts7b_ != nullptr);
      scmsts7b_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(accreq7f_ != nullptr);
      accreq7f_->Clear();
    }
  }
  if (cached_has_bits & 0x001f0000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(motorsts0286_ != nullptr);
      motorsts0286_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(motorsts018e_ != nullptr);
      motorsts018e_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(epsreqc6_ != nullptr);
      epsreqc6_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      GOOGLE_DCHECK(epsstatus01d5_ != nullptr);
      epsstatus01d5_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      GOOGLE_DCHECK(epsstatus02d6_ != nullptr);
      epsstatus02d6_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Nio::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Avpreq15e AvpReq15e = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_avpreq15e(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcusts01218 Vcusts01218 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vcusts01218(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vcusts0221c Vcusts0221c = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_vcusts0221c(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Brkdrvstatus24c Brkdrvstatus24c = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_brkdrvstatus24c(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bodystatus24d Bodystatus24d = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_bodystatus24d(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Driverstatus24e Driverstatus24e = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_driverstatus24e(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vehiclelights2c7 Vehiclelights2c7 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_vehiclelights2c7(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Lightreq336 LightReq336 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_lightreq336(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Acmbody4a Acmbody4a = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_acmbody4a(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Whlspdfront51 Whlspdfront51 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_whlspdfront51(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Whlspdrear52 Whlspdrear52 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_whlspdrear52(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Bcusts5e Bcusts5e = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_bcusts5e(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Pulsecnt65 Pulsecnt65 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_pulsecnt65(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Aebreq79 Aebreq79 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_aebreq79(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Scmsts7b Scmsts7b = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_scmsts7b(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Accreq7f Accreq7f = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_accreq7f(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Motorsts0286 Motorsts0286 = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_motorsts0286(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Motorsts018e Motorsts018e = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_motorsts018e(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsreqc6 EpsReqC6 = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_epsreqc6(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus01d5 Epsstatus01D5 = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_epsstatus01d5(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Epsstatus02d6 Epsstatus02D6 = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_epsstatus02d6(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Nio::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Nio)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Avpreq15e AvpReq15e = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::avpreq15e(this), target, stream);
  }

  // optional .apollo.canbus.Vcusts01218 Vcusts01218 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::vcusts01218(this), target, stream);
  }

  // optional .apollo.canbus.Vcusts0221c Vcusts0221c = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::vcusts0221c(this), target, stream);
  }

  // optional .apollo.canbus.Brkdrvstatus24c Brkdrvstatus24c = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::brkdrvstatus24c(this), target, stream);
  }

  // optional .apollo.canbus.Bodystatus24d Bodystatus24d = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::bodystatus24d(this), target, stream);
  }

  // optional .apollo.canbus.Driverstatus24e Driverstatus24e = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::driverstatus24e(this), target, stream);
  }

  // optional .apollo.canbus.Vehiclelights2c7 Vehiclelights2c7 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::vehiclelights2c7(this), target, stream);
  }

  // optional .apollo.canbus.Lightreq336 LightReq336 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::lightreq336(this), target, stream);
  }

  // optional .apollo.canbus.Acmbody4a Acmbody4a = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::acmbody4a(this), target, stream);
  }

  // optional .apollo.canbus.Whlspdfront51 Whlspdfront51 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::whlspdfront51(this), target, stream);
  }

  // optional .apollo.canbus.Whlspdrear52 Whlspdrear52 = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::whlspdrear52(this), target, stream);
  }

  // optional .apollo.canbus.Bcusts5e Bcusts5e = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::bcusts5e(this), target, stream);
  }

  // optional .apollo.canbus.Pulsecnt65 Pulsecnt65 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::pulsecnt65(this), target, stream);
  }

  // optional .apollo.canbus.Aebreq79 Aebreq79 = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::aebreq79(this), target, stream);
  }

  // optional .apollo.canbus.Scmsts7b Scmsts7b = 15;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::scmsts7b(this), target, stream);
  }

  // optional .apollo.canbus.Accreq7f Accreq7f = 16;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::accreq7f(this), target, stream);
  }

  // optional .apollo.canbus.Motorsts0286 Motorsts0286 = 17;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::motorsts0286(this), target, stream);
  }

  // optional .apollo.canbus.Motorsts018e Motorsts018e = 18;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        18, _Internal::motorsts018e(this), target, stream);
  }

  // optional .apollo.canbus.Epsreqc6 EpsReqC6 = 19;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::epsreqc6(this), target, stream);
  }

  // optional .apollo.canbus.Epsstatus01d5 Epsstatus01D5 = 20;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        20, _Internal::epsstatus01d5(this), target, stream);
  }

  // optional .apollo.canbus.Epsstatus02d6 Epsstatus02D6 = 21;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::epsstatus02d6(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Nio)
  return target;
}

size_t Nio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Nio)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Avpreq15e AvpReq15e = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *avpreq15e_);
    }

    // optional .apollo.canbus.Vcusts01218 Vcusts01218 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *vcusts01218_);
    }

    // optional .apollo.canbus.Vcusts0221c Vcusts0221c = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *vcusts0221c_);
    }

    // optional .apollo.canbus.Brkdrvstatus24c Brkdrvstatus24c = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *brkdrvstatus24c_);
    }

    // optional .apollo.canbus.Bodystatus24d Bodystatus24d = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bodystatus24d_);
    }

    // optional .apollo.canbus.Driverstatus24e Driverstatus24e = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *driverstatus24e_);
    }

    // optional .apollo.canbus.Vehiclelights2c7 Vehiclelights2c7 = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *vehiclelights2c7_);
    }

    // optional .apollo.canbus.Lightreq336 LightReq336 = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *lightreq336_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .apollo.canbus.Acmbody4a Acmbody4a = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *acmbody4a_);
    }

    // optional .apollo.canbus.Whlspdfront51 Whlspdfront51 = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *whlspdfront51_);
    }

    // optional .apollo.canbus.Whlspdrear52 Whlspdrear52 = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *whlspdrear52_);
    }

    // optional .apollo.canbus.Bcusts5e Bcusts5e = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bcusts5e_);
    }

    // optional .apollo.canbus.Pulsecnt65 Pulsecnt65 = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *pulsecnt65_);
    }

    // optional .apollo.canbus.Aebreq79 Aebreq79 = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *aebreq79_);
    }

    // optional .apollo.canbus.Scmsts7b Scmsts7b = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *scmsts7b_);
    }

    // optional .apollo.canbus.Accreq7f Accreq7f = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *accreq7f_);
    }

  }
  if (cached_has_bits & 0x001f0000u) {
    // optional .apollo.canbus.Motorsts0286 Motorsts0286 = 17;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *motorsts0286_);
    }

    // optional .apollo.canbus.Motorsts018e Motorsts018e = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *motorsts018e_);
    }

    // optional .apollo.canbus.Epsreqc6 EpsReqC6 = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *epsreqc6_);
    }

    // optional .apollo.canbus.Epsstatus01d5 Epsstatus01D5 = 20;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *epsstatus01d5_);
    }

    // optional .apollo.canbus.Epsstatus02d6 Epsstatus02D6 = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *epsstatus02d6_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Nio::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Nio)
  GOOGLE_DCHECK_NE(&from, this);
  const Nio* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Nio>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Nio)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Nio)
    MergeFrom(*source);
  }
}

void Nio::MergeFrom(const Nio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Nio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_avpreq15e()->::apollo::canbus::Avpreq15e::MergeFrom(from._internal_avpreq15e());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_vcusts01218()->::apollo::canbus::Vcusts01218::MergeFrom(from._internal_vcusts01218());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_vcusts0221c()->::apollo::canbus::Vcusts0221c::MergeFrom(from._internal_vcusts0221c());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_brkdrvstatus24c()->::apollo::canbus::Brkdrvstatus24c::MergeFrom(from._internal_brkdrvstatus24c());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_bodystatus24d()->::apollo::canbus::Bodystatus24d::MergeFrom(from._internal_bodystatus24d());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_driverstatus24e()->::apollo::canbus::Driverstatus24e::MergeFrom(from._internal_driverstatus24e());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_vehiclelights2c7()->::apollo::canbus::Vehiclelights2c7::MergeFrom(from._internal_vehiclelights2c7());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_lightreq336()->::apollo::canbus::Lightreq336::MergeFrom(from._internal_lightreq336());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_acmbody4a()->::apollo::canbus::Acmbody4a::MergeFrom(from._internal_acmbody4a());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_whlspdfront51()->::apollo::canbus::Whlspdfront51::MergeFrom(from._internal_whlspdfront51());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_whlspdrear52()->::apollo::canbus::Whlspdrear52::MergeFrom(from._internal_whlspdrear52());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_bcusts5e()->::apollo::canbus::Bcusts5e::MergeFrom(from._internal_bcusts5e());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_pulsecnt65()->::apollo::canbus::Pulsecnt65::MergeFrom(from._internal_pulsecnt65());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_aebreq79()->::apollo::canbus::Aebreq79::MergeFrom(from._internal_aebreq79());
    }
    if (cached_has_bits & 0x00004000u) {
      _internal_mutable_scmsts7b()->::apollo::canbus::Scmsts7b::MergeFrom(from._internal_scmsts7b());
    }
    if (cached_has_bits & 0x00008000u) {
      _internal_mutable_accreq7f()->::apollo::canbus::Accreq7f::MergeFrom(from._internal_accreq7f());
    }
  }
  if (cached_has_bits & 0x001f0000u) {
    if (cached_has_bits & 0x00010000u) {
      _internal_mutable_motorsts0286()->::apollo::canbus::Motorsts0286::MergeFrom(from._internal_motorsts0286());
    }
    if (cached_has_bits & 0x00020000u) {
      _internal_mutable_motorsts018e()->::apollo::canbus::Motorsts018e::MergeFrom(from._internal_motorsts018e());
    }
    if (cached_has_bits & 0x00040000u) {
      _internal_mutable_epsreqc6()->::apollo::canbus::Epsreqc6::MergeFrom(from._internal_epsreqc6());
    }
    if (cached_has_bits & 0x00080000u) {
      _internal_mutable_epsstatus01d5()->::apollo::canbus::Epsstatus01d5::MergeFrom(from._internal_epsstatus01d5());
    }
    if (cached_has_bits & 0x00100000u) {
      _internal_mutable_epsstatus02d6()->::apollo::canbus::Epsstatus02d6::MergeFrom(from._internal_epsstatus02d6());
    }
  }
}

void Nio::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Nio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Nio::CopyFrom(const Nio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Nio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Nio::IsInitialized() const {
  return true;
}

void Nio::InternalSwap(Nio* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Nio, epsstatus02d6_)
      + sizeof(Nio::epsstatus02d6_)
      - PROTOBUF_FIELD_OFFSET(Nio, avpreq15e_)>(
          reinterpret_cast<char*>(&avpreq15e_),
          reinterpret_cast<char*>(&other->avpreq15e_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Nio::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace canbus
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::canbus::Avpreq15e* Arena::CreateMaybeMessage< ::apollo::canbus::Avpreq15e >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Avpreq15e >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Vcusts01218* Arena::CreateMaybeMessage< ::apollo::canbus::Vcusts01218 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Vcusts01218 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Vcusts0221c* Arena::CreateMaybeMessage< ::apollo::canbus::Vcusts0221c >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Vcusts0221c >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Brkdrvstatus24c* Arena::CreateMaybeMessage< ::apollo::canbus::Brkdrvstatus24c >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Brkdrvstatus24c >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Bodystatus24d* Arena::CreateMaybeMessage< ::apollo::canbus::Bodystatus24d >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Bodystatus24d >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Driverstatus24e* Arena::CreateMaybeMessage< ::apollo::canbus::Driverstatus24e >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Driverstatus24e >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Vehiclelights2c7* Arena::CreateMaybeMessage< ::apollo::canbus::Vehiclelights2c7 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Vehiclelights2c7 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Lightreq336* Arena::CreateMaybeMessage< ::apollo::canbus::Lightreq336 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Lightreq336 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Acmbody4a* Arena::CreateMaybeMessage< ::apollo::canbus::Acmbody4a >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Acmbody4a >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Whlspdfront51* Arena::CreateMaybeMessage< ::apollo::canbus::Whlspdfront51 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Whlspdfront51 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Whlspdrear52* Arena::CreateMaybeMessage< ::apollo::canbus::Whlspdrear52 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Whlspdrear52 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Bcusts5e* Arena::CreateMaybeMessage< ::apollo::canbus::Bcusts5e >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Bcusts5e >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Pulsecnt65* Arena::CreateMaybeMessage< ::apollo::canbus::Pulsecnt65 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Pulsecnt65 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Aebreq79* Arena::CreateMaybeMessage< ::apollo::canbus::Aebreq79 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Aebreq79 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Scmsts7b* Arena::CreateMaybeMessage< ::apollo::canbus::Scmsts7b >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Scmsts7b >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Accreq7f* Arena::CreateMaybeMessage< ::apollo::canbus::Accreq7f >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Accreq7f >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Motorsts0286* Arena::CreateMaybeMessage< ::apollo::canbus::Motorsts0286 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Motorsts0286 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Motorsts018e* Arena::CreateMaybeMessage< ::apollo::canbus::Motorsts018e >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Motorsts018e >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Epsreqc6* Arena::CreateMaybeMessage< ::apollo::canbus::Epsreqc6 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Epsreqc6 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Epsstatus01d5* Arena::CreateMaybeMessage< ::apollo::canbus::Epsstatus01d5 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Epsstatus01d5 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Epsstatus02d6* Arena::CreateMaybeMessage< ::apollo::canbus::Epsstatus02d6 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Epsstatus02d6 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Nio* Arena::CreateMaybeMessage< ::apollo::canbus::Nio >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::canbus::Nio >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
